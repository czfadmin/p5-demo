/*! For license information please see vendors.6ce40c26fd8c024d9443.js.LICENSE.txt */
(self.webpackChunkwebpack_starter=self.webpackChunkwebpack_starter||[]).push([[216],{472:(e,t,r)=>{"use strict";var n={};r.r(n),r.d(n,{afterMain:()=>S,afterRead:()=>_,afterWrite:()=>T,applyStyles:()=>D,arrow:()=>q,auto:()=>l,basePlacements:()=>u,beforeMain:()=>w,beforeRead:()=>y,beforeWrite:()=>E,bottom:()=>o,clippingParents:()=>f,computeStyles:()=>Z,createPopper:()=>Te,createPopperBase:()=>Me,createPopperLite:()=>Ce,detectOverflow:()=>fe,end:()=>h,eventListeners:()=>K,flip:()=>de,hide:()=>ve,left:()=>s,main:()=>x,modifierPhases:()=>C,offset:()=>ge,placements:()=>g,popper:()=>p,popperGenerator:()=>Ee,popperOffsets:()=>ye,preventOverflow:()=>be,read:()=>b,reference:()=>m,right:()=>a,start:()=>c,top:()=>i,variationPlacements:()=>v,viewport:()=>d,write:()=>M});var i="top",o="bottom",a="right",s="left",l="auto",u=[i,o,a,s],c="start",h="end",f="clippingParents",d="viewport",p="popper",m="reference",v=u.reduce((function(e,t){return e.concat([t+"-"+c,t+"-"+h])}),[]),g=[].concat(u,[l]).reduce((function(e,t){return e.concat([t,t+"-"+c,t+"-"+h])}),[]),y="beforeRead",b="read",_="afterRead",w="beforeMain",x="main",S="afterMain",E="beforeWrite",M="write",T="afterWrite",C=[y,b,_,w,x,S,E,M,T];function L(e){return e?(e.nodeName||"").toLowerCase():null}function O(e){if("[object Window]"!==e.toString()){var t=e.ownerDocument;return t&&t.defaultView||window}return e}function P(e){return e instanceof O(e).Element||e instanceof Element}function A(e){return e instanceof O(e).HTMLElement||e instanceof HTMLElement}const D={name:"applyStyles",enabled:!0,phase:"write",fn:function(e){var t=e.state;Object.keys(t.elements).forEach((function(e){var r=t.styles[e]||{},n=t.attributes[e]||{},i=t.elements[e];A(i)&&L(i)&&(Object.assign(i.style,r),Object.keys(n).forEach((function(e){var t=n[e];!1===t?i.removeAttribute(e):i.setAttribute(e,!0===t?"":t)})))}))},effect:function(e){var t=e.state,r={popper:{position:t.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(t.elements.popper.style,r.popper),t.elements.arrow&&Object.assign(t.elements.arrow.style,r.arrow),function(){Object.keys(t.elements).forEach((function(e){var n=t.elements[e],i=t.attributes[e]||{},o=Object.keys(t.styles.hasOwnProperty(e)?t.styles[e]:r[e]).reduce((function(e,t){return e[t]="",e}),{});A(n)&&L(n)&&(Object.assign(n.style,o),Object.keys(i).forEach((function(e){n.removeAttribute(e)})))}))}},requires:["computeStyles"]};function k(e){return e.split("-")[0]}function R(e){return{x:e.offsetLeft,y:e.offsetTop,width:e.offsetWidth,height:e.offsetHeight}}function I(e,t){var r,n=t.getRootNode&&t.getRootNode();if(e.contains(t))return!0;if(n&&((r=n)instanceof O(r).ShadowRoot||r instanceof ShadowRoot)){var i=t;do{if(i&&e.isSameNode(i))return!0;i=i.parentNode||i.host}while(i)}return!1}function U(e){return O(e).getComputedStyle(e)}function N(e){return["table","td","th"].indexOf(L(e))>=0}function B(e){return((P(e)?e.ownerDocument:e.document)||window.document).documentElement}function F(e){return"html"===L(e)?e:e.assignedSlot||e.parentNode||e.host||B(e)}function G(e){if(!A(e)||"fixed"===U(e).position)return null;var t=e.offsetParent;if(t){var r=B(t);if("body"===L(t)&&"static"===U(t).position&&"static"!==U(r).position)return r}return t}function j(e){for(var t=O(e),r=G(e);r&&N(r)&&"static"===U(r).position;)r=G(r);return r&&"body"===L(r)&&"static"===U(r).position?t:r||function(e){for(var t=F(e);A(t)&&["html","body"].indexOf(L(t))<0;){var r=U(t);if("none"!==r.transform||"none"!==r.perspective||r.willChange&&"auto"!==r.willChange)return t;t=t.parentNode}return null}(e)||t}function V(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function z(e,t,r){return Math.max(e,Math.min(t,r))}function H(e){return Object.assign(Object.assign({},{top:0,right:0,bottom:0,left:0}),e)}function W(e,t){return t.reduce((function(t,r){return t[r]=e,t}),{})}const q={name:"arrow",enabled:!0,phase:"main",fn:function(e){var t,r=e.state,n=e.name,l=r.elements.arrow,u=r.modifiersData.popperOffsets,c=k(r.placement),h=V(c),f=[s,a].indexOf(c)>=0?"height":"width";if(l&&u){var d=r.modifiersData[n+"#persistent"].padding,p=R(l),m="y"===h?i:s,v="y"===h?o:a,g=r.rects.reference[f]+r.rects.reference[h]-u[h]-r.rects.popper[f],y=u[h]-r.rects.reference[h],b=j(l),_=b?"y"===h?b.clientHeight||0:b.clientWidth||0:0,w=g/2-y/2,x=d[m],S=_-p[f]-d[v],E=_/2-p[f]/2+w,M=z(x,E,S),T=h;r.modifiersData[n]=((t={})[T]=M,t.centerOffset=M-E,t)}},effect:function(e){var t=e.state,r=e.options,n=e.name,i=r.element,o=void 0===i?"[data-popper-arrow]":i,a=r.padding,s=void 0===a?0:a;null!=o&&("string"!=typeof o||(o=t.elements.popper.querySelector(o)))&&I(t.elements.popper,o)&&(t.elements.arrow=o,t.modifiersData[n+"#persistent"]={padding:H("number"!=typeof s?s:W(s,u))})},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};var X={top:"auto",right:"auto",bottom:"auto",left:"auto"};function Y(e){var t,r=e.popper,n=e.popperRect,l=e.placement,u=e.offsets,c=e.position,h=e.gpuAcceleration,f=e.adaptive,d=e.roundOffsets?function(e){var t=e.x,r=e.y,n=window.devicePixelRatio||1;return{x:Math.round(t*n)/n||0,y:Math.round(r*n)/n||0}}(u):u,p=d.x,m=void 0===p?0:p,v=d.y,g=void 0===v?0:v,y=u.hasOwnProperty("x"),b=u.hasOwnProperty("y"),_=s,w=i,x=window;if(f){var S=j(r);S===O(r)&&(S=B(r)),l===i&&(w=o,g-=S.clientHeight-n.height,g*=h?1:-1),l===s&&(_=a,m-=S.clientWidth-n.width,m*=h?1:-1)}var E,M=Object.assign({position:c},f&&X);return h?Object.assign(Object.assign({},M),{},((E={})[w]=b?"0":"",E[_]=y?"0":"",E.transform=(x.devicePixelRatio||1)<2?"translate("+m+"px, "+g+"px)":"translate3d("+m+"px, "+g+"px, 0)",E)):Object.assign(Object.assign({},M),{},((t={})[w]=b?g+"px":"",t[_]=y?m+"px":"",t.transform="",t))}const Z={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(e){var t=e.state,r=e.options,n=r.gpuAcceleration,i=void 0===n||n,o=r.adaptive,a=void 0===o||o,s=r.roundOffsets,l=void 0===s||s,u={placement:k(t.placement),popper:t.elements.popper,popperRect:t.rects.popper,gpuAcceleration:i};null!=t.modifiersData.popperOffsets&&(t.styles.popper=Object.assign(Object.assign({},t.styles.popper),Y(Object.assign(Object.assign({},u),{},{offsets:t.modifiersData.popperOffsets,position:t.options.strategy,adaptive:a,roundOffsets:l})))),null!=t.modifiersData.arrow&&(t.styles.arrow=Object.assign(Object.assign({},t.styles.arrow),Y(Object.assign(Object.assign({},u),{},{offsets:t.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),t.attributes.popper=Object.assign(Object.assign({},t.attributes.popper),{},{"data-popper-placement":t.placement})},data:{}};var Q={passive:!0};const K={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(e){var t=e.state,r=e.instance,n=e.options,i=n.scroll,o=void 0===i||i,a=n.resize,s=void 0===a||a,l=O(t.elements.popper),u=[].concat(t.scrollParents.reference,t.scrollParents.popper);return o&&u.forEach((function(e){e.addEventListener("scroll",r.update,Q)})),s&&l.addEventListener("resize",r.update,Q),function(){o&&u.forEach((function(e){e.removeEventListener("scroll",r.update,Q)})),s&&l.removeEventListener("resize",r.update,Q)}},data:{}};var J={left:"right",right:"left",bottom:"top",top:"bottom"};function $(e){return e.replace(/left|right|bottom|top/g,(function(e){return J[e]}))}var ee={start:"end",end:"start"};function te(e){return e.replace(/start|end/g,(function(e){return ee[e]}))}function re(e){var t=e.getBoundingClientRect();return{width:t.width,height:t.height,top:t.top,right:t.right,bottom:t.bottom,left:t.left,x:t.left,y:t.top}}function ne(e){var t=O(e);return{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function ie(e){return re(B(e)).left+ne(e).scrollLeft}function oe(e){var t=U(e),r=t.overflow,n=t.overflowX,i=t.overflowY;return/auto|scroll|overlay|hidden/.test(r+i+n)}function ae(e){return["html","body","#document"].indexOf(L(e))>=0?e.ownerDocument.body:A(e)&&oe(e)?e:ae(F(e))}function se(e,t){void 0===t&&(t=[]);var r=ae(e),n="body"===L(r),i=O(r),o=n?[i].concat(i.visualViewport||[],oe(r)?r:[]):r,a=t.concat(o);return n?a:a.concat(se(F(o)))}function le(e){return Object.assign(Object.assign({},e),{},{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function ue(e,t){return t===d?le(function(e){var t=O(e),r=B(e),n=t.visualViewport,i=r.clientWidth,o=r.clientHeight,a=0,s=0;return n&&(i=n.width,o=n.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(a=n.offsetLeft,s=n.offsetTop)),{width:i,height:o,x:a+ie(e),y:s}}(e)):A(t)?function(e){var t=re(e);return t.top=t.top+e.clientTop,t.left=t.left+e.clientLeft,t.bottom=t.top+e.clientHeight,t.right=t.left+e.clientWidth,t.width=e.clientWidth,t.height=e.clientHeight,t.x=t.left,t.y=t.top,t}(t):le(function(e){var t=B(e),r=ne(e),n=e.ownerDocument.body,i=Math.max(t.scrollWidth,t.clientWidth,n?n.scrollWidth:0,n?n.clientWidth:0),o=Math.max(t.scrollHeight,t.clientHeight,n?n.scrollHeight:0,n?n.clientHeight:0),a=-r.scrollLeft+ie(e),s=-r.scrollTop;return"rtl"===U(n||t).direction&&(a+=Math.max(t.clientWidth,n?n.clientWidth:0)-i),{width:i,height:o,x:a,y:s}}(B(e)))}function ce(e){return e.split("-")[1]}function he(e){var t,r=e.reference,n=e.element,l=e.placement,u=l?k(l):null,f=l?ce(l):null,d=r.x+r.width/2-n.width/2,p=r.y+r.height/2-n.height/2;switch(u){case i:t={x:d,y:r.y-n.height};break;case o:t={x:d,y:r.y+r.height};break;case a:t={x:r.x+r.width,y:p};break;case s:t={x:r.x-n.width,y:p};break;default:t={x:r.x,y:r.y}}var m=u?V(u):null;if(null!=m){var v="y"===m?"height":"width";switch(f){case c:t[m]=t[m]-(r[v]/2-n[v]/2);break;case h:t[m]=t[m]+(r[v]/2-n[v]/2)}}return t}function fe(e,t){void 0===t&&(t={});var r=t,n=r.placement,s=void 0===n?e.placement:n,l=r.boundary,c=void 0===l?f:l,h=r.rootBoundary,v=void 0===h?d:h,g=r.elementContext,y=void 0===g?p:g,b=r.altBoundary,_=void 0!==b&&b,w=r.padding,x=void 0===w?0:w,S=H("number"!=typeof x?x:W(x,u)),E=y===p?m:p,M=e.elements.reference,T=e.rects.popper,C=e.elements[_?E:y],O=function(e,t,r){var n="clippingParents"===t?function(e){var t=se(F(e)),r=["absolute","fixed"].indexOf(U(e).position)>=0&&A(e)?j(e):e;return P(r)?t.filter((function(e){return P(e)&&I(e,r)&&"body"!==L(e)})):[]}(e):[].concat(t),i=[].concat(n,[r]),o=i[0],a=i.reduce((function(t,r){var n=ue(e,r);return t.top=Math.max(n.top,t.top),t.right=Math.min(n.right,t.right),t.bottom=Math.min(n.bottom,t.bottom),t.left=Math.max(n.left,t.left),t}),ue(e,o));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}(P(C)?C:C.contextElement||B(e.elements.popper),c,v),D=re(M),k=he({reference:D,element:T,strategy:"absolute",placement:s}),R=le(Object.assign(Object.assign({},T),k)),N=y===p?R:D,G={top:O.top-N.top+S.top,bottom:N.bottom-O.bottom+S.bottom,left:O.left-N.left+S.left,right:N.right-O.right+S.right},V=e.modifiersData.offset;if(y===p&&V){var z=V[s];Object.keys(G).forEach((function(e){var t=[a,o].indexOf(e)>=0?1:-1,r=[i,o].indexOf(e)>=0?"y":"x";G[e]+=z[r]*t}))}return G}const de={name:"flip",enabled:!0,phase:"main",fn:function(e){var t=e.state,r=e.options,n=e.name;if(!t.modifiersData[n]._skip){for(var h=r.mainAxis,f=void 0===h||h,d=r.altAxis,p=void 0===d||d,m=r.fallbackPlacements,y=r.padding,b=r.boundary,_=r.rootBoundary,w=r.altBoundary,x=r.flipVariations,S=void 0===x||x,E=r.allowedAutoPlacements,M=t.options.placement,T=k(M),C=m||(T!==M&&S?function(e){if(k(e)===l)return[];var t=$(e);return[te(e),t,te(t)]}(M):[$(M)]),L=[M].concat(C).reduce((function(e,r){return e.concat(k(r)===l?function(e,t){void 0===t&&(t={});var r=t,n=r.placement,i=r.boundary,o=r.rootBoundary,a=r.padding,s=r.flipVariations,l=r.allowedAutoPlacements,c=void 0===l?g:l,h=ce(n),f=h?s?v:v.filter((function(e){return ce(e)===h})):u,d=f.filter((function(e){return c.indexOf(e)>=0}));0===d.length&&(d=f);var p=d.reduce((function(t,r){return t[r]=fe(e,{placement:r,boundary:i,rootBoundary:o,padding:a})[k(r)],t}),{});return Object.keys(p).sort((function(e,t){return p[e]-p[t]}))}(t,{placement:r,boundary:b,rootBoundary:_,padding:y,flipVariations:S,allowedAutoPlacements:E}):r)}),[]),O=t.rects.reference,P=t.rects.popper,A=new Map,D=!0,R=L[0],I=0;I<L.length;I++){var U=L[I],N=k(U),B=ce(U)===c,F=[i,o].indexOf(N)>=0,G=F?"width":"height",j=fe(t,{placement:U,boundary:b,rootBoundary:_,altBoundary:w,padding:y}),V=F?B?a:s:B?o:i;O[G]>P[G]&&(V=$(V));var z=$(V),H=[];if(f&&H.push(j[N]<=0),p&&H.push(j[V]<=0,j[z]<=0),H.every((function(e){return e}))){R=U,D=!1;break}A.set(U,H)}if(D)for(var W=function(e){var t=L.find((function(t){var r=A.get(t);if(r)return r.slice(0,e).every((function(e){return e}))}));if(t)return R=t,"break"},q=S?3:1;q>0&&"break"!==W(q);q--);t.placement!==R&&(t.modifiersData[n]._skip=!0,t.placement=R,t.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function pe(e,t,r){return void 0===r&&(r={x:0,y:0}),{top:e.top-t.height-r.y,right:e.right-t.width+r.x,bottom:e.bottom-t.height+r.y,left:e.left-t.width-r.x}}function me(e){return[i,a,o,s].some((function(t){return e[t]>=0}))}const ve={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(e){var t=e.state,r=e.name,n=t.rects.reference,i=t.rects.popper,o=t.modifiersData.preventOverflow,a=fe(t,{elementContext:"reference"}),s=fe(t,{altBoundary:!0}),l=pe(a,n),u=pe(s,i,o),c=me(l),h=me(u);t.modifiersData[r]={referenceClippingOffsets:l,popperEscapeOffsets:u,isReferenceHidden:c,hasPopperEscaped:h},t.attributes.popper=Object.assign(Object.assign({},t.attributes.popper),{},{"data-popper-reference-hidden":c,"data-popper-escaped":h})}},ge={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(e){var t=e.state,r=e.options,n=e.name,o=r.offset,l=void 0===o?[0,0]:o,u=g.reduce((function(e,r){return e[r]=function(e,t,r){var n=k(e),o=[s,i].indexOf(n)>=0?-1:1,l="function"==typeof r?r(Object.assign(Object.assign({},t),{},{placement:e})):r,u=l[0],c=l[1];return u=u||0,c=(c||0)*o,[s,a].indexOf(n)>=0?{x:c,y:u}:{x:u,y:c}}(r,t.rects,l),e}),{}),c=u[t.placement],h=c.x,f=c.y;null!=t.modifiersData.popperOffsets&&(t.modifiersData.popperOffsets.x+=h,t.modifiersData.popperOffsets.y+=f),t.modifiersData[n]=u}},ye={name:"popperOffsets",enabled:!0,phase:"read",fn:function(e){var t=e.state,r=e.name;t.modifiersData[r]=he({reference:t.rects.reference,element:t.rects.popper,strategy:"absolute",placement:t.placement})},data:{}},be={name:"preventOverflow",enabled:!0,phase:"main",fn:function(e){var t=e.state,r=e.options,n=e.name,l=r.mainAxis,u=void 0===l||l,h=r.altAxis,f=void 0!==h&&h,d=r.boundary,p=r.rootBoundary,m=r.altBoundary,v=r.padding,g=r.tether,y=void 0===g||g,b=r.tetherOffset,_=void 0===b?0:b,w=fe(t,{boundary:d,rootBoundary:p,padding:v,altBoundary:m}),x=k(t.placement),S=ce(t.placement),E=!S,M=V(x),T="x"===M?"y":"x",C=t.modifiersData.popperOffsets,L=t.rects.reference,O=t.rects.popper,P="function"==typeof _?_(Object.assign(Object.assign({},t.rects),{},{placement:t.placement})):_,A={x:0,y:0};if(C){if(u){var D="y"===M?i:s,I="y"===M?o:a,U="y"===M?"height":"width",N=C[M],B=C[M]+w[D],F=C[M]-w[I],G=y?-O[U]/2:0,H=S===c?L[U]:O[U],W=S===c?-O[U]:-L[U],q=t.elements.arrow,X=y&&q?R(q):{width:0,height:0},Y=t.modifiersData["arrow#persistent"]?t.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},Z=Y[D],Q=Y[I],K=z(0,L[U],X[U]),J=E?L[U]/2-G-K-Z-P:H-K-Z-P,$=E?-L[U]/2+G+K+Q+P:W+K+Q+P,ee=t.elements.arrow&&j(t.elements.arrow),te=ee?"y"===M?ee.clientTop||0:ee.clientLeft||0:0,re=t.modifiersData.offset?t.modifiersData.offset[t.placement][M]:0,ne=C[M]+J-re-te,ie=C[M]+$-re,oe=z(y?Math.min(B,ne):B,N,y?Math.max(F,ie):F);C[M]=oe,A[M]=oe-N}if(f){var ae="x"===M?i:s,se="x"===M?o:a,le=C[T],ue=z(le+w[ae],le,le-w[se]);C[T]=ue,A[T]=ue-le}t.modifiersData[n]=A}},requiresIfExists:["offset"]};function _e(e,t,r){void 0===r&&(r=!1);var n,i,o=B(t),a=re(e),s=A(t),l={scrollLeft:0,scrollTop:0},u={x:0,y:0};return(s||!s&&!r)&&(("body"!==L(t)||oe(o))&&(l=(n=t)!==O(n)&&A(n)?{scrollLeft:(i=n).scrollLeft,scrollTop:i.scrollTop}:ne(n)),A(t)?((u=re(t)).x+=t.clientLeft,u.y+=t.clientTop):o&&(u.x=ie(o))),{x:a.left+l.scrollLeft-u.x,y:a.top+l.scrollTop-u.y,width:a.width,height:a.height}}function we(e){var t=new Map,r=new Set,n=[];function i(e){r.add(e.name),[].concat(e.requires||[],e.requiresIfExists||[]).forEach((function(e){if(!r.has(e)){var n=t.get(e);n&&i(n)}})),n.push(e)}return e.forEach((function(e){t.set(e.name,e)})),e.forEach((function(e){r.has(e.name)||i(e)})),n}var xe={placement:"bottom",modifiers:[],strategy:"absolute"};function Se(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return!t.some((function(e){return!(e&&"function"==typeof e.getBoundingClientRect)}))}function Ee(e){void 0===e&&(e={});var t=e,r=t.defaultModifiers,n=void 0===r?[]:r,i=t.defaultOptions,o=void 0===i?xe:i;return function(e,t,r){void 0===r&&(r=o);var i,a,s={placement:"bottom",orderedModifiers:[],options:Object.assign(Object.assign({},xe),o),modifiersData:{},elements:{reference:e,popper:t},attributes:{},styles:{}},l=[],u=!1,c={state:s,setOptions:function(r){h(),s.options=Object.assign(Object.assign(Object.assign({},o),s.options),r),s.scrollParents={reference:P(e)?se(e):e.contextElement?se(e.contextElement):[],popper:se(t)};var i,a,u=function(e){var t=we(e);return C.reduce((function(e,r){return e.concat(t.filter((function(e){return e.phase===r})))}),[])}((i=[].concat(n,s.options.modifiers),a=i.reduce((function(e,t){var r=e[t.name];return e[t.name]=r?Object.assign(Object.assign(Object.assign({},r),t),{},{options:Object.assign(Object.assign({},r.options),t.options),data:Object.assign(Object.assign({},r.data),t.data)}):t,e}),{}),Object.keys(a).map((function(e){return a[e]}))));return s.orderedModifiers=u.filter((function(e){return e.enabled})),s.orderedModifiers.forEach((function(e){var t=e.name,r=e.options,n=void 0===r?{}:r,i=e.effect;if("function"==typeof i){var o=i({state:s,name:t,instance:c,options:n});l.push(o||function(){})}})),c.update()},forceUpdate:function(){if(!u){var e=s.elements,t=e.reference,r=e.popper;if(Se(t,r)){s.rects={reference:_e(t,j(r),"fixed"===s.options.strategy),popper:R(r)},s.reset=!1,s.placement=s.options.placement,s.orderedModifiers.forEach((function(e){return s.modifiersData[e.name]=Object.assign({},e.data)}));for(var n=0;n<s.orderedModifiers.length;n++)if(!0!==s.reset){var i=s.orderedModifiers[n],o=i.fn,a=i.options,l=void 0===a?{}:a,h=i.name;"function"==typeof o&&(s=o({state:s,options:l,name:h,instance:c})||s)}else s.reset=!1,n=-1}}},update:(i=function(){return new Promise((function(e){c.forceUpdate(),e(s)}))},function(){return a||(a=new Promise((function(e){Promise.resolve().then((function(){a=void 0,e(i())}))}))),a}),destroy:function(){h(),u=!0}};if(!Se(e,t))return c;function h(){l.forEach((function(e){return e()})),l=[]}return c.setOptions(r).then((function(e){!u&&r.onFirstUpdate&&r.onFirstUpdate(e)})),c}}var Me=Ee(),Te=Ee({defaultModifiers:[K,ye,Z,D,ge,de,be,q,ve]}),Ce=Ee({defaultModifiers:[K,ye,Z,D]});function Le(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Oe(e,t,r){return t&&Le(e.prototype,t),r&&Le(e,r),e}function Pe(){return(Pe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Ae(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var De,ke,Re="transitionend",Ie=function(e){do{e+=Math.floor(1e6*Math.random())}while(document.getElementById(e));return e},Ue=function(e){var t=e.getAttribute("data-bs-target");if(!t||"#"===t){var r=e.getAttribute("href");t=r&&"#"!==r?r.trim():null}return t},Ne=function(e){var t=Ue(e);return t&&document.querySelector(t)?t:null},Be=function(e){var t=Ue(e);return t?document.querySelector(t):null},Fe=function(e){if(!e)return 0;var t=window.getComputedStyle(e),r=t.transitionDuration,n=t.transitionDelay,i=Number.parseFloat(r),o=Number.parseFloat(n);return i||o?(r=r.split(",")[0],n=n.split(",")[0],1e3*(Number.parseFloat(r)+Number.parseFloat(n))):0},Ge=function(e){e.dispatchEvent(new Event(Re))},je=function(e){return(e[0]||e).nodeType},Ve=function(e,t){var r=!1,n=t+5;e.addEventListener(Re,(function t(){r=!0,e.removeEventListener(Re,t)})),setTimeout((function(){r||Ge(e)}),n)},ze=function(e,t,r){Object.keys(r).forEach((function(n){var i,o=r[n],a=t[n],s=a&&je(a)?"element":null==(i=a)?""+i:{}.toString.call(i).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(o).test(s))throw new Error(e.toUpperCase()+': Option "'+n+'" provided type "'+s+'" but expected type "'+o+'".')}))},He=function(e){if(!e)return!1;if(e.style&&e.parentNode&&e.parentNode.style){var t=getComputedStyle(e),r=getComputedStyle(e.parentNode);return"none"!==t.display&&"none"!==r.display&&"hidden"!==t.visibility}return!1},We=function e(t){if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){var r=t.getRootNode();return r instanceof ShadowRoot?r:null}return t instanceof ShadowRoot?t:t.parentNode?e(t.parentNode):null},qe=function(){return function(){}},Xe=function(e){return e.offsetHeight},Ye=function(){var e=window.jQuery;return e&&!document.body.hasAttribute("data-bs-no-jquery")?e:null},Ze=function(e){"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e()},Qe="rtl"===document.documentElement.dir,Ke=(De={},ke=1,{set:function(e,t,r){void 0===e.bsKey&&(e.bsKey={key:t,id:ke},ke++),De[e.bsKey.id]=r},get:function(e,t){if(!e||void 0===e.bsKey)return null;var r=e.bsKey;return r.key===t?De[r.id]:null},delete:function(e,t){if(void 0!==e.bsKey){var r=e.bsKey;r.key===t&&(delete De[r.id],delete e.bsKey)}}}),Je=function(e,t,r){Ke.set(e,t,r)},$e=function(e,t){return Ke.get(e,t)},et=/[^.]*(?=\..*)\.|.*/,tt=/\..*/,rt=/::\d+$/,nt={},it=1,ot={mouseenter:"mouseover",mouseleave:"mouseout"},at=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function st(e,t){return t&&t+"::"+it++||e.uidEvent||it++}function lt(e){var t=st(e);return e.uidEvent=t,nt[t]=nt[t]||{},nt[t]}function ut(e,t,r){void 0===r&&(r=null);for(var n=Object.keys(e),i=0,o=n.length;i<o;i++){var a=e[n[i]];if(a.originalHandler===t&&a.delegationSelector===r)return a}return null}function ct(e,t,r){var n="string"==typeof t,i=n?r:t,o=e.replace(tt,""),a=ot[o];return a&&(o=a),at.has(o)||(o=e),[n,i,o]}function ht(e,t,r,n,i){if("string"==typeof t&&e){r||(r=n,n=null);var o=ct(t,r,n),a=o[0],s=o[1],l=o[2],u=lt(e),c=u[l]||(u[l]={}),h=ut(c,s,a?r:null);if(h)h.oneOff=h.oneOff&&i;else{var f=st(s,t.replace(et,"")),d=a?function(e,t,r){return function n(i){for(var o=e.querySelectorAll(t),a=i.target;a&&a!==this;a=a.parentNode)for(var s=o.length;s--;)if(o[s]===a)return i.delegateTarget=a,n.oneOff&&dt.off(e,i.type,r),r.apply(a,[i]);return null}}(e,r,n):function(e,t){return function r(n){return n.delegateTarget=e,r.oneOff&&dt.off(e,n.type,t),t.apply(e,[n])}}(e,r);d.delegationSelector=a?r:null,d.originalHandler=s,d.oneOff=i,d.uidEvent=f,c[f]=d,e.addEventListener(l,d,a)}}}function ft(e,t,r,n,i){var o=ut(t[r],n,i);o&&(e.removeEventListener(r,o,Boolean(i)),delete t[r][o.uidEvent])}var dt={on:function(e,t,r,n){ht(e,t,r,n,!1)},one:function(e,t,r,n){ht(e,t,r,n,!0)},off:function(e,t,r,n){if("string"==typeof t&&e){var i=ct(t,r,n),o=i[0],a=i[1],s=i[2],l=s!==t,u=lt(e),c=t.startsWith(".");if(void 0===a){c&&Object.keys(u).forEach((function(r){!function(e,t,r,n){var i=t[r]||{};Object.keys(i).forEach((function(o){if(o.includes(n)){var a=i[o];ft(e,t,r,a.originalHandler,a.delegationSelector)}}))}(e,u,r,t.slice(1))}));var h=u[s]||{};Object.keys(h).forEach((function(r){var n=r.replace(rt,"");if(!l||t.includes(n)){var i=h[r];ft(e,u,s,i.originalHandler,i.delegationSelector)}}))}else{if(!u||!u[s])return;ft(e,u,s,a,o?r:null)}}},trigger:function(e,t,r){if("string"!=typeof t||!e)return null;var n,i=Ye(),o=t.replace(tt,""),a=t!==o,s=at.has(o),l=!0,u=!0,c=!1,h=null;return a&&i&&(n=i.Event(t,r),i(e).trigger(n),l=!n.isPropagationStopped(),u=!n.isImmediatePropagationStopped(),c=n.isDefaultPrevented()),s?(h=document.createEvent("HTMLEvents")).initEvent(o,l,!0):h=new CustomEvent(t,{bubbles:l,cancelable:!0}),void 0!==r&&Object.keys(r).forEach((function(e){Object.defineProperty(h,e,{get:function(){return r[e]}})})),c&&h.preventDefault(),u&&e.dispatchEvent(h),h.defaultPrevented&&void 0!==n&&n.preventDefault(),h}},pt=function(){function e(e){e&&(this._element=e,Je(e,this.constructor.DATA_KEY,this))}return e.prototype.dispose=function(){var e,t;e=this._element,t=this.constructor.DATA_KEY,Ke.delete(e,t),this._element=null},e.getInstance=function(e){return $e(e,this.DATA_KEY)},Oe(e,null,[{key:"VERSION",get:function(){return"5.0.0-beta1"}}]),e}(),mt="bs.alert",vt=function(e){function t(){return e.apply(this,arguments)||this}Ae(t,e);var r=t.prototype;return r.close=function(e){var t=e?this._getRootElement(e):this._element,r=this._triggerCloseEvent(t);null===r||r.defaultPrevented||this._removeElement(t)},r._getRootElement=function(e){return Be(e)||e.closest(".alert")},r._triggerCloseEvent=function(e){return dt.trigger(e,"close.bs.alert")},r._removeElement=function(e){var t=this;if(e.classList.remove("show"),e.classList.contains("fade")){var r=Fe(e);dt.one(e,Re,(function(){return t._destroyElement(e)})),Ve(e,r)}else this._destroyElement(e)},r._destroyElement=function(e){e.parentNode&&e.parentNode.removeChild(e),dt.trigger(e,"closed.bs.alert")},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,mt);r||(r=new t(this)),"close"===e&&r[e](this)}))},t.handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},Oe(t,null,[{key:"DATA_KEY",get:function(){return mt}}]),t}(pt);dt.on(document,"click.bs.alert.data-api",'[data-bs-dismiss="alert"]',vt.handleDismiss(new vt)),Ze((function(){var e=Ye();if(e){var t=e.fn.alert;e.fn.alert=vt.jQueryInterface,e.fn.alert.Constructor=vt,e.fn.alert.noConflict=function(){return e.fn.alert=t,vt.jQueryInterface}}}));var gt="bs.button",yt='[data-bs-toggle="button"]',bt=function(e){function t(){return e.apply(this,arguments)||this}return Ae(t,e),t.prototype.toggle=function(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,gt);r||(r=new t(this)),"toggle"===e&&r[e]()}))},Oe(t,null,[{key:"DATA_KEY",get:function(){return gt}}]),t}(pt);function _t(e){return"true"===e||"false"!==e&&(e===Number(e).toString()?Number(e):""===e||"null"===e?null:e)}function wt(e){return e.replace(/[A-Z]/g,(function(e){return"-"+e.toLowerCase()}))}dt.on(document,"click.bs.button.data-api",yt,(function(e){e.preventDefault();var t=e.target.closest(yt),r=$e(t,gt);r||(r=new bt(t)),r.toggle()})),Ze((function(){var e=Ye();if(e){var t=e.fn.button;e.fn.button=bt.jQueryInterface,e.fn.button.Constructor=bt,e.fn.button.noConflict=function(){return e.fn.button=t,bt.jQueryInterface}}}));var xt={setDataAttribute:function(e,t,r){e.setAttribute("data-bs-"+wt(t),r)},removeDataAttribute:function(e,t){e.removeAttribute("data-bs-"+wt(t))},getDataAttributes:function(e){if(!e)return{};var t={};return Object.keys(e.dataset).filter((function(e){return e.startsWith("bs")})).forEach((function(r){var n=r.replace(/^bs/,"");n=n.charAt(0).toLowerCase()+n.slice(1,n.length),t[n]=_t(e.dataset[r])})),t},getDataAttribute:function(e,t){return _t(e.getAttribute("data-bs-"+wt(t)))},offset:function(e){var t=e.getBoundingClientRect();return{top:t.top+document.body.scrollTop,left:t.left+document.body.scrollLeft}},position:function(e){return{top:e.offsetTop,left:e.offsetLeft}}},St={matches:function(e,t){return e.matches(t)},find:function(e,t){var r;return void 0===t&&(t=document.documentElement),(r=[]).concat.apply(r,Element.prototype.querySelectorAll.call(t,e))},findOne:function(e,t){return void 0===t&&(t=document.documentElement),Element.prototype.querySelector.call(t,e)},children:function(e,t){var r;return(r=[]).concat.apply(r,e.children).filter((function(e){return e.matches(t)}))},parents:function(e,t){for(var r=[],n=e.parentNode;n&&n.nodeType===Node.ELEMENT_NODE&&3!==n.nodeType;)this.matches(n,t)&&r.push(n),n=n.parentNode;return r},prev:function(e,t){for(var r=e.previousElementSibling;r;){if(r.matches(t))return[r];r=r.previousElementSibling}return[]},next:function(e,t){for(var r=e.nextElementSibling;r;){if(this.matches(r,t))return[r];r=r.nextElementSibling}return[]}},Et="carousel",Mt="bs.carousel",Tt={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},Ct={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},Lt="next",Ot="prev",Pt="slid.bs.carousel",At="active",Dt=".active.carousel-item",kt={TOUCH:"touch",PEN:"pen"},Rt=function(e){function t(t,r){var n;return(n=e.call(this,t)||this)._items=null,n._interval=null,n._activeElement=null,n._isPaused=!1,n._isSliding=!1,n.touchTimeout=null,n.touchStartX=0,n.touchDeltaX=0,n._config=n._getConfig(r),n._indicatorsElement=St.findOne(".carousel-indicators",n._element),n._touchSupported="ontouchstart"in document.documentElement||navigator.maxTouchPoints>0,n._pointerEvent=Boolean(window.PointerEvent),n._addEventListeners(),n}Ae(t,e);var r=t.prototype;return r.next=function(){this._isSliding||this._slide(Lt)},r.nextWhenVisible=function(){!document.hidden&&He(this._element)&&this.next()},r.prev=function(){this._isSliding||this._slide(Ot)},r.pause=function(e){e||(this._isPaused=!0),St.findOne(".carousel-item-next, .carousel-item-prev",this._element)&&(Ge(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},r.cycle=function(e){e||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config&&this._config.interval&&!this._isPaused&&(this._updateInterval(),this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},r.to=function(e){var t=this;this._activeElement=St.findOne(Dt,this._element);var r=this._getItemIndex(this._activeElement);if(!(e>this._items.length-1||e<0))if(this._isSliding)dt.one(this._element,Pt,(function(){return t.to(e)}));else{if(r===e)return this.pause(),void this.cycle();var n=e>r?Lt:Ot;this._slide(n,this._items[e])}},r.dispose=function(){e.prototype.dispose.call(this),dt.off(this._element,".bs.carousel"),this._items=null,this._config=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},r._getConfig=function(e){return e=Pe({},Tt,e),ze(Et,e,Ct),e},r._handleSwipe=function(){var e=Math.abs(this.touchDeltaX);if(!(e<=40)){var t=e/this.touchDeltaX;this.touchDeltaX=0,t>0&&this.prev(),t<0&&this.next()}},r._addEventListeners=function(){var e=this;this._config.keyboard&&dt.on(this._element,"keydown.bs.carousel",(function(t){return e._keydown(t)})),"hover"===this._config.pause&&(dt.on(this._element,"mouseenter.bs.carousel",(function(t){return e.pause(t)})),dt.on(this._element,"mouseleave.bs.carousel",(function(t){return e.cycle(t)}))),this._config.touch&&this._touchSupported&&this._addTouchEventListeners()},r._addTouchEventListeners=function(){var e=this,t=function(t){e._pointerEvent&&kt[t.pointerType.toUpperCase()]?e.touchStartX=t.clientX:e._pointerEvent||(e.touchStartX=t.touches[0].clientX)},r=function(t){e._pointerEvent&&kt[t.pointerType.toUpperCase()]&&(e.touchDeltaX=t.clientX-e.touchStartX),e._handleSwipe(),"hover"===e._config.pause&&(e.pause(),e.touchTimeout&&clearTimeout(e.touchTimeout),e.touchTimeout=setTimeout((function(t){return e.cycle(t)}),500+e._config.interval))};St.find(".carousel-item img",this._element).forEach((function(e){dt.on(e,"dragstart.bs.carousel",(function(e){return e.preventDefault()}))})),this._pointerEvent?(dt.on(this._element,"pointerdown.bs.carousel",(function(e){return t(e)})),dt.on(this._element,"pointerup.bs.carousel",(function(e){return r(e)})),this._element.classList.add("pointer-event")):(dt.on(this._element,"touchstart.bs.carousel",(function(e){return t(e)})),dt.on(this._element,"touchmove.bs.carousel",(function(t){return function(t){t.touches&&t.touches.length>1?e.touchDeltaX=0:e.touchDeltaX=t.touches[0].clientX-e.touchStartX}(t)})),dt.on(this._element,"touchend.bs.carousel",(function(e){return r(e)})))},r._keydown=function(e){if(!/input|textarea/i.test(e.target.tagName))switch(e.key){case"ArrowLeft":e.preventDefault(),this.prev();break;case"ArrowRight":e.preventDefault(),this.next()}},r._getItemIndex=function(e){return this._items=e&&e.parentNode?St.find(".carousel-item",e.parentNode):[],this._items.indexOf(e)},r._getItemByDirection=function(e,t){var r=e===Lt,n=e===Ot,i=this._getItemIndex(t),o=this._items.length-1;if((n&&0===i||r&&i===o)&&!this._config.wrap)return t;var a=(i+(e===Ot?-1:1))%this._items.length;return-1===a?this._items[this._items.length-1]:this._items[a]},r._triggerSlideEvent=function(e,t){var r=this._getItemIndex(e),n=this._getItemIndex(St.findOne(Dt,this._element));return dt.trigger(this._element,"slide.bs.carousel",{relatedTarget:e,direction:t,from:n,to:r})},r._setActiveIndicatorElement=function(e){if(this._indicatorsElement){for(var t=St.find(".active",this._indicatorsElement),r=0;r<t.length;r++)t[r].classList.remove(At);var n=this._indicatorsElement.children[this._getItemIndex(e)];n&&n.classList.add(At)}},r._updateInterval=function(){var e=this._activeElement||St.findOne(Dt,this._element);if(e){var t=Number.parseInt(e.getAttribute("data-bs-interval"),10);t?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=t):this._config.interval=this._config.defaultInterval||this._config.interval}},r._slide=function(e,t){var r,n,i,o=this,a=St.findOne(Dt,this._element),s=this._getItemIndex(a),l=t||a&&this._getItemByDirection(e,a),u=this._getItemIndex(l),c=Boolean(this._interval);if(e===Lt?(r="carousel-item-start",n="carousel-item-next",i="left"):(r="carousel-item-end",n="carousel-item-prev",i="right"),l&&l.classList.contains(At))this._isSliding=!1;else if(!this._triggerSlideEvent(l,i).defaultPrevented&&a&&l){if(this._isSliding=!0,c&&this.pause(),this._setActiveIndicatorElement(l),this._activeElement=l,this._element.classList.contains("slide")){l.classList.add(n),Xe(l),a.classList.add(r),l.classList.add(r);var h=Fe(a);dt.one(a,Re,(function(){l.classList.remove(r,n),l.classList.add(At),a.classList.remove(At,n,r),o._isSliding=!1,setTimeout((function(){dt.trigger(o._element,Pt,{relatedTarget:l,direction:i,from:s,to:u})}),0)})),Ve(a,h)}else a.classList.remove(At),l.classList.add(At),this._isSliding=!1,dt.trigger(this._element,Pt,{relatedTarget:l,direction:i,from:s,to:u});c&&this.cycle()}},t.carouselInterface=function(e,r){var n=$e(e,Mt),i=Pe({},Tt,xt.getDataAttributes(e));"object"==typeof r&&(i=Pe({},i,r));var o="string"==typeof r?r:i.slide;if(n||(n=new t(e,i)),"number"==typeof r)n.to(r);else if("string"==typeof o){if(void 0===n[o])throw new TypeError('No method named "'+o+'"');n[o]()}else i.interval&&i.ride&&(n.pause(),n.cycle())},t.jQueryInterface=function(e){return this.each((function(){t.carouselInterface(this,e)}))},t.dataApiClickHandler=function(e){var r=Be(this);if(r&&r.classList.contains("carousel")){var n=Pe({},xt.getDataAttributes(r),xt.getDataAttributes(this)),i=this.getAttribute("data-bs-slide-to");i&&(n.interval=!1),t.carouselInterface(r,n),i&&$e(r,Mt).to(i),e.preventDefault()}},Oe(t,null,[{key:"Default",get:function(){return Tt}},{key:"DATA_KEY",get:function(){return Mt}}]),t}(pt);dt.on(document,"click.bs.carousel.data-api","[data-bs-slide], [data-bs-slide-to]",Rt.dataApiClickHandler),dt.on(window,"load.bs.carousel.data-api",(function(){for(var e=St.find('[data-bs-ride="carousel"]'),t=0,r=e.length;t<r;t++)Rt.carouselInterface(e[t],$e(e[t],Mt))})),Ze((function(){var e=Ye();if(e){var t=e.fn[Et];e.fn[Et]=Rt.jQueryInterface,e.fn[Et].Constructor=Rt,e.fn[Et].noConflict=function(){return e.fn[Et]=t,Rt.jQueryInterface}}}));var It="collapse",Ut="bs.collapse",Nt={toggle:!0,parent:""},Bt={toggle:"boolean",parent:"(string|element)"},Ft="show",Gt="collapse",jt="collapsing",Vt="collapsed",zt="width",Ht='[data-bs-toggle="collapse"]',Wt=function(e){function t(t,r){var n;(n=e.call(this,t)||this)._isTransitioning=!1,n._config=n._getConfig(r),n._triggerArray=St.find(Ht+'[href="#'+t.id+'"],'+Ht+'[data-bs-target="#'+t.id+'"]');for(var i=St.find(Ht),o=0,a=i.length;o<a;o++){var s=i[o],l=Ne(s),u=St.find(l).filter((function(e){return e===t}));null!==l&&u.length&&(n._selector=l,n._triggerArray.push(s))}return n._parent=n._config.parent?n._getParent():null,n._config.parent||n._addAriaAndCollapsedClass(n._element,n._triggerArray),n._config.toggle&&n.toggle(),n}Ae(t,e);var r=t.prototype;return r.toggle=function(){this._element.classList.contains(Ft)?this.hide():this.show()},r.show=function(){var e=this;if(!this._isTransitioning&&!this._element.classList.contains(Ft)){var r,n;this._parent&&0===(r=St.find(".show, .collapsing",this._parent).filter((function(t){return"string"==typeof e._config.parent?t.getAttribute("data-bs-parent")===e._config.parent:t.classList.contains(Gt)}))).length&&(r=null);var i=St.findOne(this._selector);if(r){var o=r.find((function(e){return i!==e}));if((n=o?$e(o,Ut):null)&&n._isTransitioning)return}if(!dt.trigger(this._element,"show.bs.collapse").defaultPrevented){r&&r.forEach((function(e){i!==e&&t.collapseInterface(e,"hide"),n||Je(e,Ut,null)}));var a=this._getDimension();this._element.classList.remove(Gt),this._element.classList.add(jt),this._element.style[a]=0,this._triggerArray.length&&this._triggerArray.forEach((function(e){e.classList.remove(Vt),e.setAttribute("aria-expanded",!0)})),this.setTransitioning(!0);var s="scroll"+(a[0].toUpperCase()+a.slice(1)),l=Fe(this._element);dt.one(this._element,Re,(function(){e._element.classList.remove(jt),e._element.classList.add(Gt,Ft),e._element.style[a]="",e.setTransitioning(!1),dt.trigger(e._element,"shown.bs.collapse")})),Ve(this._element,l),this._element.style[a]=this._element[s]+"px"}}},r.hide=function(){var e=this;if(!this._isTransitioning&&this._element.classList.contains(Ft)&&!dt.trigger(this._element,"hide.bs.collapse").defaultPrevented){var t=this._getDimension();this._element.style[t]=this._element.getBoundingClientRect()[t]+"px",Xe(this._element),this._element.classList.add(jt),this._element.classList.remove(Gt,Ft);var r=this._triggerArray.length;if(r>0)for(var n=0;n<r;n++){var i=this._triggerArray[n],o=Be(i);o&&!o.classList.contains(Ft)&&(i.classList.add(Vt),i.setAttribute("aria-expanded",!1))}this.setTransitioning(!0),this._element.style[t]="";var a=Fe(this._element);dt.one(this._element,Re,(function(){e.setTransitioning(!1),e._element.classList.remove(jt),e._element.classList.add(Gt),dt.trigger(e._element,"hidden.bs.collapse")})),Ve(this._element,a)}},r.setTransitioning=function(e){this._isTransitioning=e},r.dispose=function(){e.prototype.dispose.call(this),this._config=null,this._parent=null,this._triggerArray=null,this._isTransitioning=null},r._getConfig=function(e){return(e=Pe({},Nt,e)).toggle=Boolean(e.toggle),ze(It,e,Bt),e},r._getDimension=function(){return this._element.classList.contains(zt)?zt:"height"},r._getParent=function(){var e=this,t=this._config.parent;je(t)?void 0===t.jquery&&void 0===t[0]||(t=t[0]):t=St.findOne(t);var r=Ht+'[data-bs-parent="'+t+'"]';return St.find(r,t).forEach((function(t){var r=Be(t);e._addAriaAndCollapsedClass(r,[t])})),t},r._addAriaAndCollapsedClass=function(e,t){if(e&&t.length){var r=e.classList.contains(Ft);t.forEach((function(e){r?e.classList.remove(Vt):e.classList.add(Vt),e.setAttribute("aria-expanded",r)}))}},t.collapseInterface=function(e,r){var n=$e(e,Ut),i=Pe({},Nt,xt.getDataAttributes(e),"object"==typeof r&&r?r:{});if(!n&&i.toggle&&"string"==typeof r&&/show|hide/.test(r)&&(i.toggle=!1),n||(n=new t(e,i)),"string"==typeof r){if(void 0===n[r])throw new TypeError('No method named "'+r+'"');n[r]()}},t.jQueryInterface=function(e){return this.each((function(){t.collapseInterface(this,e)}))},Oe(t,null,[{key:"Default",get:function(){return Nt}},{key:"DATA_KEY",get:function(){return Ut}}]),t}(pt);dt.on(document,"click.bs.collapse.data-api",Ht,(function(e){"A"===e.target.tagName&&e.preventDefault();var t=xt.getDataAttributes(this),r=Ne(this);St.find(r).forEach((function(e){var r,n=$e(e,Ut);n?(null===n._parent&&"string"==typeof t.parent&&(n._config.parent=t.parent,n._parent=n._getParent()),r="toggle"):r=t,Wt.collapseInterface(e,r)}))})),Ze((function(){var e=Ye();if(e){var t=e.fn[It];e.fn[It]=Wt.jQueryInterface,e.fn[It].Constructor=Wt,e.fn[It].noConflict=function(){return e.fn[It]=t,Wt.jQueryInterface}}}));var qt="dropdown",Xt="bs.dropdown",Yt="Escape",Zt="Space",Qt="ArrowUp",Kt="ArrowDown",Jt=new RegExp("ArrowUp|ArrowDown|Escape"),$t="hide.bs.dropdown",er="hidden.bs.dropdown",tr="click.bs.dropdown.data-api",rr="keydown.bs.dropdown.data-api",nr="disabled",ir="show",or='[data-bs-toggle="dropdown"]',ar=".dropdown-menu",sr=Qe?"top-end":"top-start",lr=Qe?"top-start":"top-end",ur=Qe?"bottom-end":"bottom-start",cr=Qe?"bottom-start":"bottom-end",hr=Qe?"left-start":"right-start",fr=Qe?"right-start":"left-start",dr={offset:0,flip:!0,boundary:"clippingParents",reference:"toggle",display:"dynamic",popperConfig:null},pr={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string",popperConfig:"(null|object)"},mr=function(e){function t(t,r){var n;return(n=e.call(this,t)||this)._popper=null,n._config=n._getConfig(r),n._menu=n._getMenuElement(),n._inNavbar=n._detectNavbar(),n._addEventListeners(),n}Ae(t,e);var r=t.prototype;return r.toggle=function(){if(!this._element.disabled&&!this._element.classList.contains(nr)){var e=this._element.classList.contains(ir);t.clearMenus(),e||this.show()}},r.show=function(){if(!(this._element.disabled||this._element.classList.contains(nr)||this._menu.classList.contains(ir))){var e=t.getParentFromElement(this._element),r={relatedTarget:this._element};if(!dt.trigger(this._element,"show.bs.dropdown",r).defaultPrevented){if(!this._inNavbar){if(void 0===n)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");var i=this._element;"parent"===this._config.reference?i=e:je(this._config.reference)&&(i=this._config.reference,void 0!==this._config.reference.jquery&&(i=this._config.reference[0])),this._popper=Te(i,this._menu,this._getPopperConfig())}var o;"ontouchstart"in document.documentElement&&!e.closest(".navbar-nav")&&(o=[]).concat.apply(o,document.body.children).forEach((function(e){return dt.on(e,"mouseover",null,(function(){}))})),this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.toggle(ir),this._element.classList.toggle(ir),dt.trigger(e,"shown.bs.dropdown",r)}}},r.hide=function(){if(!this._element.disabled&&!this._element.classList.contains(nr)&&this._menu.classList.contains(ir)){var e=t.getParentFromElement(this._element),r={relatedTarget:this._element};dt.trigger(e,$t,r).defaultPrevented||(this._popper&&this._popper.destroy(),this._menu.classList.toggle(ir),this._element.classList.toggle(ir),dt.trigger(e,er,r))}},r.dispose=function(){e.prototype.dispose.call(this),dt.off(this._element,".bs.dropdown"),this._menu=null,this._popper&&(this._popper.destroy(),this._popper=null)},r.update=function(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()},r._addEventListeners=function(){var e=this;dt.on(this._element,"click.bs.dropdown",(function(t){t.preventDefault(),t.stopPropagation(),e.toggle()}))},r._getConfig=function(e){return e=Pe({},this.constructor.Default,xt.getDataAttributes(this._element),e),ze(qt,e,this.constructor.DefaultType),e},r._getMenuElement=function(){return St.next(this._element,ar)[0]},r._getPlacement=function(){var e=this._element.parentNode;if(e.classList.contains("dropend"))return hr;if(e.classList.contains("dropstart"))return fr;var t="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return e.classList.contains("dropup")?t?lr:sr:t?cr:ur},r._detectNavbar=function(){return null!==this._element.closest(".navbar")},r._getPopperConfig=function(){var e={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{altBoundary:this._config.flip,rootBoundary:this._config.boundary}}]};return"static"===this._config.display&&(e.modifiers=[{name:"applyStyles",enabled:!1}]),Pe({},e,this._config.popperConfig)},t.dropdownInterface=function(e,r){var n=$e(e,Xt);if(n||(n=new t(e,"object"==typeof r?r:null)),"string"==typeof r){if(void 0===n[r])throw new TypeError('No method named "'+r+'"');n[r]()}},t.jQueryInterface=function(e){return this.each((function(){t.dropdownInterface(this,e)}))},t.clearMenus=function(e){if(!e||2!==e.button&&("keyup"!==e.type||"Tab"===e.key))for(var r=St.find(or),n=0,i=r.length;n<i;n++){var o=t.getParentFromElement(r[n]),a=$e(r[n],Xt),s={relatedTarget:r[n]};if(e&&"click"===e.type&&(s.clickEvent=e),a){var l,u=a._menu;if(r[n].classList.contains(ir)&&!(e&&("click"===e.type&&/input|textarea/i.test(e.target.tagName)||"keyup"===e.type&&"Tab"===e.key)&&u.contains(e.target)||dt.trigger(o,$t,s).defaultPrevented))"ontouchstart"in document.documentElement&&(l=[]).concat.apply(l,document.body.children).forEach((function(e){return dt.off(e,"mouseover",null,(function(){}))})),r[n].setAttribute("aria-expanded","false"),a._popper&&a._popper.destroy(),u.classList.remove(ir),r[n].classList.remove(ir),dt.trigger(o,er,s)}}},t.getParentFromElement=function(e){return Be(e)||e.parentNode},t.dataApiKeydownHandler=function(e){if(!(/input|textarea/i.test(e.target.tagName)?e.key===Zt||e.key!==Yt&&(e.key!==Kt&&e.key!==Qt||e.target.closest(ar)):!Jt.test(e.key))&&(e.preventDefault(),e.stopPropagation(),!this.disabled&&!this.classList.contains(nr))){var r=t.getParentFromElement(this),n=this.classList.contains(ir);if(e.key===Yt)return(this.matches(or)?this:St.prev(this,or)[0]).focus(),void t.clearMenus();if(n&&e.key!==Zt){var i=St.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",r).filter(He);if(i.length){var o=i.indexOf(e.target);e.key===Qt&&o>0&&o--,e.key===Kt&&o<i.length-1&&o++,i[o=-1===o?0:o].focus()}}else t.clearMenus()}},Oe(t,null,[{key:"Default",get:function(){return dr}},{key:"DefaultType",get:function(){return pr}},{key:"DATA_KEY",get:function(){return Xt}}]),t}(pt);dt.on(document,rr,or,mr.dataApiKeydownHandler),dt.on(document,rr,ar,mr.dataApiKeydownHandler),dt.on(document,tr,mr.clearMenus),dt.on(document,"keyup.bs.dropdown.data-api",mr.clearMenus),dt.on(document,tr,or,(function(e){e.preventDefault(),e.stopPropagation(),mr.dropdownInterface(this,"toggle")})),dt.on(document,tr,".dropdown form",(function(e){return e.stopPropagation()})),Ze((function(){var e=Ye();if(e){var t=e.fn[qt];e.fn[qt]=mr.jQueryInterface,e.fn[qt].Constructor=mr,e.fn[qt].noConflict=function(){return e.fn[qt]=t,mr.jQueryInterface}}}));var vr="bs.modal",gr="Escape",yr={backdrop:!0,keyboard:!0,focus:!0},br={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean"},_r="hidden.bs.modal",wr="show.bs.modal",xr="focusin.bs.modal",Sr="resize.bs.modal",Er="click.dismiss.bs.modal",Mr="keydown.dismiss.bs.modal",Tr="mousedown.dismiss.bs.modal",Cr="modal-open",Lr="fade",Or="show",Pr="modal-static",Ar=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",Dr=function(e){function t(t,r){var n;return(n=e.call(this,t)||this)._config=n._getConfig(r),n._dialog=St.findOne(".modal-dialog",t),n._backdrop=null,n._isShown=!1,n._isBodyOverflowing=!1,n._ignoreBackdropClick=!1,n._isTransitioning=!1,n._scrollbarWidth=0,n}Ae(t,e);var r=t.prototype;return r.toggle=function(e){return this._isShown?this.hide():this.show(e)},r.show=function(e){var t=this;if(!this._isShown&&!this._isTransitioning){this._element.classList.contains(Lr)&&(this._isTransitioning=!0);var r=dt.trigger(this._element,wr,{relatedTarget:e});this._isShown||r.defaultPrevented||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),dt.on(this._element,Er,'[data-bs-dismiss="modal"]',(function(e){return t.hide(e)})),dt.on(this._dialog,Tr,(function(){dt.one(t._element,"mouseup.dismiss.bs.modal",(function(e){e.target===t._element&&(t._ignoreBackdropClick=!0)}))})),this._showBackdrop((function(){return t._showElement(e)})))}},r.hide=function(e){var t=this;if(e&&e.preventDefault(),this._isShown&&!this._isTransitioning&&!dt.trigger(this._element,"hide.bs.modal").defaultPrevented){this._isShown=!1;var r=this._element.classList.contains(Lr);if(r&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),dt.off(document,xr),this._element.classList.remove(Or),dt.off(this._element,Er),dt.off(this._dialog,Tr),r){var n=Fe(this._element);dt.one(this._element,Re,(function(e){return t._hideModal(e)})),Ve(this._element,n)}else this._hideModal()}},r.dispose=function(){[window,this._element,this._dialog].forEach((function(e){return dt.off(e,".bs.modal")})),e.prototype.dispose.call(this),dt.off(document,xr),this._config=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},r.handleUpdate=function(){this._adjustDialog()},r._getConfig=function(e){return e=Pe({},yr,e),ze("modal",e,br),e},r._showElement=function(e){var t=this,r=this._element.classList.contains(Lr),n=St.findOne(".modal-body",this._dialog);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0,n&&(n.scrollTop=0),r&&Xe(this._element),this._element.classList.add(Or),this._config.focus&&this._enforceFocus();var i=function(){t._config.focus&&t._element.focus(),t._isTransitioning=!1,dt.trigger(t._element,"shown.bs.modal",{relatedTarget:e})};if(r){var o=Fe(this._dialog);dt.one(this._dialog,Re,i),Ve(this._dialog,o)}else i()},r._enforceFocus=function(){var e=this;dt.off(document,xr),dt.on(document,xr,(function(t){document===t.target||e._element===t.target||e._element.contains(t.target)||e._element.focus()}))},r._setEscapeEvent=function(){var e=this;this._isShown?dt.on(this._element,Mr,(function(t){e._config.keyboard&&t.key===gr?(t.preventDefault(),e.hide()):e._config.keyboard||t.key!==gr||e._triggerBackdropTransition()})):dt.off(this._element,Mr)},r._setResizeEvent=function(){var e=this;this._isShown?dt.on(window,Sr,(function(){return e._adjustDialog()})):dt.off(window,Sr)},r._hideModal=function(){var e=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._showBackdrop((function(){document.body.classList.remove(Cr),e._resetAdjustments(),e._resetScrollbar(),dt.trigger(e._element,_r)}))},r._removeBackdrop=function(){this._backdrop.parentNode.removeChild(this._backdrop),this._backdrop=null},r._showBackdrop=function(e){var t=this,r=this._element.classList.contains(Lr)?Lr:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className="modal-backdrop",r&&this._backdrop.classList.add(r),document.body.appendChild(this._backdrop),dt.on(this._element,Er,(function(e){t._ignoreBackdropClick?t._ignoreBackdropClick=!1:e.target===e.currentTarget&&("static"===t._config.backdrop?t._triggerBackdropTransition():t.hide())})),r&&Xe(this._backdrop),this._backdrop.classList.add(Or),!r)return void e();var n=Fe(this._backdrop);dt.one(this._backdrop,Re,e),Ve(this._backdrop,n)}else if(!this._isShown&&this._backdrop){this._backdrop.classList.remove(Or);var i=function(){t._removeBackdrop(),e()};if(this._element.classList.contains(Lr)){var o=Fe(this._backdrop);dt.one(this._backdrop,Re,i),Ve(this._backdrop,o)}else i()}else e()},r._triggerBackdropTransition=function(){var e=this;if(!dt.trigger(this._element,"hidePrevented.bs.modal").defaultPrevented){var t=this._element.scrollHeight>document.documentElement.clientHeight;t||(this._element.style.overflowY="hidden"),this._element.classList.add(Pr);var r=Fe(this._dialog);dt.off(this._element,Re),dt.one(this._element,Re,(function(){e._element.classList.remove(Pr),t||(dt.one(e._element,Re,(function(){e._element.style.overflowY=""})),Ve(e._element,r))})),Ve(this._element,r),this._element.focus()}},r._adjustDialog=function(){var e=this._element.scrollHeight>document.documentElement.clientHeight;(!this._isBodyOverflowing&&e&&!Qe||this._isBodyOverflowing&&!e&&Qe)&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),(this._isBodyOverflowing&&!e&&!Qe||!this._isBodyOverflowing&&e&&Qe)&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},r._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},r._checkScrollbar=function(){var e=document.body.getBoundingClientRect();this._isBodyOverflowing=Math.round(e.left+e.right)<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},r._setScrollbar=function(){var e=this;if(this._isBodyOverflowing){St.find(Ar).forEach((function(t){var r=t.style.paddingRight,n=window.getComputedStyle(t)["padding-right"];xt.setDataAttribute(t,"padding-right",r),t.style.paddingRight=Number.parseFloat(n)+e._scrollbarWidth+"px"})),St.find(".sticky-top").forEach((function(t){var r=t.style.marginRight,n=window.getComputedStyle(t)["margin-right"];xt.setDataAttribute(t,"margin-right",r),t.style.marginRight=Number.parseFloat(n)-e._scrollbarWidth+"px"}));var t=document.body.style.paddingRight,r=window.getComputedStyle(document.body)["padding-right"];xt.setDataAttribute(document.body,"padding-right",t),document.body.style.paddingRight=Number.parseFloat(r)+this._scrollbarWidth+"px"}document.body.classList.add(Cr)},r._resetScrollbar=function(){St.find(Ar).forEach((function(e){var t=xt.getDataAttribute(e,"padding-right");void 0!==t&&(xt.removeDataAttribute(e,"padding-right"),e.style.paddingRight=t)})),St.find(".sticky-top").forEach((function(e){var t=xt.getDataAttribute(e,"margin-right");void 0!==t&&(xt.removeDataAttribute(e,"margin-right"),e.style.marginRight=t)}));var e=xt.getDataAttribute(document.body,"padding-right");void 0===e?document.body.style.paddingRight="":(xt.removeDataAttribute(document.body,"padding-right"),document.body.style.paddingRight=e)},r._getScrollbarWidth=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",document.body.appendChild(e);var t=e.getBoundingClientRect().width-e.clientWidth;return document.body.removeChild(e),t},t.jQueryInterface=function(e,r){return this.each((function(){var n=$e(this,vr),i=Pe({},yr,xt.getDataAttributes(this),"object"==typeof e&&e?e:{});if(n||(n=new t(this,i)),"string"==typeof e){if(void 0===n[e])throw new TypeError('No method named "'+e+'"');n[e](r)}}))},Oe(t,null,[{key:"Default",get:function(){return yr}},{key:"DATA_KEY",get:function(){return vr}}]),t}(pt);dt.on(document,"click.bs.modal.data-api",'[data-bs-toggle="modal"]',(function(e){var t=this,r=Be(this);"A"!==this.tagName&&"AREA"!==this.tagName||e.preventDefault(),dt.one(r,wr,(function(e){e.defaultPrevented||dt.one(r,_r,(function(){He(t)&&t.focus()}))}));var n=$e(r,vr);if(!n){var i=Pe({},xt.getDataAttributes(r),xt.getDataAttributes(this));n=new Dr(r,i)}n.show(this)})),Ze((function(){var e=Ye();if(e){var t=e.fn.modal;e.fn.modal=Dr.jQueryInterface,e.fn.modal.Constructor=Dr,e.fn.modal.noConflict=function(){return e.fn.modal=t,Dr.jQueryInterface}}}));var kr=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),Rr=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi,Ir=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;function Ur(e,t,r){var n;if(!e.length)return e;if(r&&"function"==typeof r)return r(e);for(var i=(new window.DOMParser).parseFromString(e,"text/html"),o=Object.keys(t),a=(n=[]).concat.apply(n,i.body.querySelectorAll("*")),s=function(e,r){var n,i=a[e],s=i.nodeName.toLowerCase();if(!o.includes(s))return i.parentNode.removeChild(i),"continue";var l=(n=[]).concat.apply(n,i.attributes),u=[].concat(t["*"]||[],t[s]||[]);l.forEach((function(e){(function(e,t){var r=e.nodeName.toLowerCase();if(t.includes(r))return!kr.has(r)||Boolean(e.nodeValue.match(Rr)||e.nodeValue.match(Ir));for(var n=t.filter((function(e){return e instanceof RegExp})),i=0,o=n.length;i<o;i++)if(r.match(n[i]))return!0;return!1})(e,u)||i.removeAttribute(e.nodeName)}))},l=0,u=a.length;l<u;l++)s(l);return i.body.innerHTML}var Nr="tooltip",Br="bs.tooltip",Fr=new RegExp("(^|\\s)bs-tooltip\\S+","g"),Gr=new Set(["sanitize","allowList","sanitizeFn"]),jr={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",container:"(string|element|boolean)",fallbackPlacements:"(null|array)",boundary:"(string|element)",customClass:"(string|function)",sanitize:"boolean",sanitizeFn:"(null|function)",allowList:"object",popperConfig:"(null|object)"},Vr={AUTO:"auto",TOP:"top",RIGHT:Qe?"left":"right",BOTTOM:"bottom",LEFT:Qe?"right":"left"},zr={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",container:!1,fallbackPlacements:null,boundary:"clippingParents",customClass:"",sanitize:!0,sanitizeFn:null,allowList:{"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},popperConfig:null},Hr={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"},Wr="fade",qr="show",Xr="show",Yr="out",Zr="hover",Qr="focus",Kr=function(e){function t(t,r){var i;if(void 0===n)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");return(i=e.call(this,t)||this)._isEnabled=!0,i._timeout=0,i._hoverState="",i._activeTrigger={},i._popper=null,i.config=i._getConfig(r),i.tip=null,i._setListeners(),i}Ae(t,e);var r=t.prototype;return r.enable=function(){this._isEnabled=!0},r.disable=function(){this._isEnabled=!1},r.toggleEnabled=function(){this._isEnabled=!this._isEnabled},r.toggle=function(e){if(this._isEnabled)if(e){var t=this.constructor.DATA_KEY,r=$e(e.delegateTarget,t);r||(r=new this.constructor(e.delegateTarget,this._getDelegateConfig()),Je(e.delegateTarget,t,r)),r._activeTrigger.click=!r._activeTrigger.click,r._isWithActiveTrigger()?r._enter(null,r):r._leave(null,r)}else{if(this.getTipElement().classList.contains(qr))return void this._leave(null,this);this._enter(null,this)}},r.dispose=function(){clearTimeout(this._timeout),dt.off(this._element,this.constructor.EVENT_KEY),dt.off(this._element.closest(".modal"),"hide.bs.modal",this._hideModalHandler),this.tip&&this.tip.parentNode.removeChild(this.tip),this._isEnabled=null,this._timeout=null,this._hoverState=null,this._activeTrigger=null,this._popper&&this._popper.destroy(),this._popper=null,this.config=null,this.tip=null,e.prototype.dispose.call(this)},r.show=function(){var e=this;if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(this.isWithContent()&&this._isEnabled){var t=dt.trigger(this._element,this.constructor.Event.SHOW),r=We(this._element),n=null===r?this._element.ownerDocument.documentElement.contains(this._element):r.contains(this._element);if(t.defaultPrevented||!n)return;var i=this.getTipElement(),o=Ie(this.constructor.NAME);i.setAttribute("id",o),this._element.setAttribute("aria-describedby",o),this.setContent(),this.config.animation&&i.classList.add(Wr);var a="function"==typeof this.config.placement?this.config.placement.call(this,i,this._element):this.config.placement,s=this._getAttachment(a);this._addAttachmentClass(s);var l=this._getContainer();Je(i,this.constructor.DATA_KEY,this),this._element.ownerDocument.documentElement.contains(this.tip)||l.appendChild(i),dt.trigger(this._element,this.constructor.Event.INSERTED),this._popper=Te(this._element,i,this._getPopperConfig(s)),i.classList.add(qr);var u,c,h="function"==typeof this.config.customClass?this.config.customClass():this.config.customClass;h&&(u=i.classList).add.apply(u,h.split(" ")),"ontouchstart"in document.documentElement&&(c=[]).concat.apply(c,document.body.children).forEach((function(e){dt.on(e,"mouseover",(function(){}))}));var f=function(){var t=e._hoverState;e._hoverState=null,dt.trigger(e._element,e.constructor.Event.SHOWN),t===Yr&&e._leave(null,e)};if(this.tip.classList.contains(Wr)){var d=Fe(this.tip);dt.one(this.tip,Re,f),Ve(this.tip,d)}else f()}},r.hide=function(){var e=this;if(this._popper){var t=this.getTipElement(),r=function(){e._hoverState!==Xr&&t.parentNode&&t.parentNode.removeChild(t),e._cleanTipClass(),e._element.removeAttribute("aria-describedby"),dt.trigger(e._element,e.constructor.Event.HIDDEN),e._popper&&(e._popper.destroy(),e._popper=null)};if(!dt.trigger(this._element,this.constructor.Event.HIDE).defaultPrevented){var n;if(t.classList.remove(qr),"ontouchstart"in document.documentElement&&(n=[]).concat.apply(n,document.body.children).forEach((function(e){return dt.off(e,"mouseover",qe)})),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,this.tip.classList.contains(Wr)){var i=Fe(t);dt.one(t,Re,r),Ve(t,i)}else r();this._hoverState=""}}},r.update=function(){null!==this._popper&&this._popper.update()},r.isWithContent=function(){return Boolean(this.getTitle())},r.getTipElement=function(){if(this.tip)return this.tip;var e=document.createElement("div");return e.innerHTML=this.config.template,this.tip=e.children[0],this.tip},r.setContent=function(){var e=this.getTipElement();this.setElementContent(St.findOne(".tooltip-inner",e),this.getTitle()),e.classList.remove(Wr,qr)},r.setElementContent=function(e,t){if(null!==e)return"object"==typeof t&&je(t)?(t.jquery&&(t=t[0]),void(this.config.html?t.parentNode!==e&&(e.innerHTML="",e.appendChild(t)):e.textContent=t.textContent)):void(this.config.html?(this.config.sanitize&&(t=Ur(t,this.config.allowList,this.config.sanitizeFn)),e.innerHTML=t):e.textContent=t)},r.getTitle=function(){var e=this._element.getAttribute("data-bs-original-title");return e||(e="function"==typeof this.config.title?this.config.title.call(this._element):this.config.title),e},r.updateAttachment=function(e){return"right"===e?"end":"left"===e?"start":e},r._getPopperConfig=function(e){var t=this,r={name:"flip",options:{altBoundary:!0}};return this.config.fallbackPlacements&&(r.options.fallbackPlacements=this.config.fallbackPlacements),Pe({},{placement:e,modifiers:[r,{name:"preventOverflow",options:{rootBoundary:this.config.boundary}},{name:"arrow",options:{element:"."+this.constructor.NAME+"-arrow"}},{name:"onChange",enabled:!0,phase:"afterWrite",fn:function(e){return t._handlePopperPlacementChange(e)}}],onFirstUpdate:function(e){e.options.placement!==e.placement&&t._handlePopperPlacementChange(e)}},this.config.popperConfig)},r._addAttachmentClass=function(e){this.getTipElement().classList.add("bs-tooltip-"+this.updateAttachment(e))},r._getContainer=function(){return!1===this.config.container?document.body:je(this.config.container)?this.config.container:St.findOne(this.config.container)},r._getAttachment=function(e){return Vr[e.toUpperCase()]},r._setListeners=function(){var e=this;this.config.trigger.split(" ").forEach((function(t){if("click"===t)dt.on(e._element,e.constructor.Event.CLICK,e.config.selector,(function(t){return e.toggle(t)}));else if("manual"!==t){var r=t===Zr?e.constructor.Event.MOUSEENTER:e.constructor.Event.FOCUSIN,n=t===Zr?e.constructor.Event.MOUSELEAVE:e.constructor.Event.FOCUSOUT;dt.on(e._element,r,e.config.selector,(function(t){return e._enter(t)})),dt.on(e._element,n,e.config.selector,(function(t){return e._leave(t)}))}})),this._hideModalHandler=function(){e._element&&e.hide()},dt.on(this._element.closest(".modal"),"hide.bs.modal",this._hideModalHandler),this.config.selector?this.config=Pe({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},r._fixTitle=function(){var e=this._element.getAttribute("title"),t=typeof this._element.getAttribute("data-bs-original-title");(e||"string"!==t)&&(this._element.setAttribute("data-bs-original-title",e||""),!e||this._element.getAttribute("aria-label")||this._element.textContent||this._element.setAttribute("aria-label",e),this._element.setAttribute("title",""))},r._enter=function(e,t){var r=this.constructor.DATA_KEY;(t=t||$e(e.delegateTarget,r))||(t=new this.constructor(e.delegateTarget,this._getDelegateConfig()),Je(e.delegateTarget,r,t)),e&&(t._activeTrigger["focusin"===e.type?Qr:Zr]=!0),t.getTipElement().classList.contains(qr)||t._hoverState===Xr?t._hoverState=Xr:(clearTimeout(t._timeout),t._hoverState=Xr,t.config.delay&&t.config.delay.show?t._timeout=setTimeout((function(){t._hoverState===Xr&&t.show()}),t.config.delay.show):t.show())},r._leave=function(e,t){var r=this.constructor.DATA_KEY;(t=t||$e(e.delegateTarget,r))||(t=new this.constructor(e.delegateTarget,this._getDelegateConfig()),Je(e.delegateTarget,r,t)),e&&(t._activeTrigger["focusout"===e.type?Qr:Zr]=!1),t._isWithActiveTrigger()||(clearTimeout(t._timeout),t._hoverState=Yr,t.config.delay&&t.config.delay.hide?t._timeout=setTimeout((function(){t._hoverState===Yr&&t.hide()}),t.config.delay.hide):t.hide())},r._isWithActiveTrigger=function(){for(var e in this._activeTrigger)if(this._activeTrigger[e])return!0;return!1},r._getConfig=function(e){var t=xt.getDataAttributes(this._element);return Object.keys(t).forEach((function(e){Gr.has(e)&&delete t[e]})),e&&"object"==typeof e.container&&e.container.jquery&&(e.container=e.container[0]),"number"==typeof(e=Pe({},this.constructor.Default,t,"object"==typeof e&&e?e:{})).delay&&(e.delay={show:e.delay,hide:e.delay}),"number"==typeof e.title&&(e.title=e.title.toString()),"number"==typeof e.content&&(e.content=e.content.toString()),ze(Nr,e,this.constructor.DefaultType),e.sanitize&&(e.template=Ur(e.template,e.allowList,e.sanitizeFn)),e},r._getDelegateConfig=function(){var e={};if(this.config)for(var t in this.config)this.constructor.Default[t]!==this.config[t]&&(e[t]=this.config[t]);return e},r._cleanTipClass=function(){var e=this.getTipElement(),t=e.getAttribute("class").match(Fr);null!==t&&t.length>0&&t.map((function(e){return e.trim()})).forEach((function(t){return e.classList.remove(t)}))},r._handlePopperPlacementChange=function(e){var t=e.state;t&&(this.tip=t.elements.popper,this._cleanTipClass(),this._addAttachmentClass(this._getAttachment(t.placement)))},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,Br),n="object"==typeof e&&e;if((r||!/dispose|hide/.test(e))&&(r||(r=new t(this,n)),"string"==typeof e)){if(void 0===r[e])throw new TypeError('No method named "'+e+'"');r[e]()}}))},Oe(t,null,[{key:"Default",get:function(){return zr}},{key:"NAME",get:function(){return Nr}},{key:"DATA_KEY",get:function(){return Br}},{key:"Event",get:function(){return Hr}},{key:"EVENT_KEY",get:function(){return".bs.tooltip"}},{key:"DefaultType",get:function(){return jr}}]),t}(pt);Ze((function(){var e=Ye();if(e){var t=e.fn.tooltip;e.fn.tooltip=Kr.jQueryInterface,e.fn.tooltip.Constructor=Kr,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=t,Kr.jQueryInterface}}}));var Jr="bs.popover",$r=new RegExp("(^|\\s)bs-popover\\S+","g"),en=Pe({},Kr.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),tn=Pe({},Kr.DefaultType,{content:"(string|element|function)"}),rn={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"},nn=function(e){function t(){return e.apply(this,arguments)||this}Ae(t,e);var r=t.prototype;return r.isWithContent=function(){return this.getTitle()||this._getContent()},r.setContent=function(){var e=this.getTipElement();this.setElementContent(St.findOne(".popover-header",e),this.getTitle());var t=this._getContent();"function"==typeof t&&(t=t.call(this._element)),this.setElementContent(St.findOne(".popover-body",e),t),e.classList.remove("fade","show")},r._addAttachmentClass=function(e){this.getTipElement().classList.add("bs-popover-"+this.updateAttachment(e))},r._getContent=function(){return this._element.getAttribute("data-bs-content")||this.config.content},r._cleanTipClass=function(){var e=this.getTipElement(),t=e.getAttribute("class").match($r);null!==t&&t.length>0&&t.map((function(e){return e.trim()})).forEach((function(t){return e.classList.remove(t)}))},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,Jr),n="object"==typeof e?e:null;if((r||!/dispose|hide/.test(e))&&(r||(r=new t(this,n),Je(this,Jr,r)),"string"==typeof e)){if(void 0===r[e])throw new TypeError('No method named "'+e+'"');r[e]()}}))},Oe(t,null,[{key:"Default",get:function(){return en}},{key:"NAME",get:function(){return"popover"}},{key:"DATA_KEY",get:function(){return Jr}},{key:"Event",get:function(){return rn}},{key:"EVENT_KEY",get:function(){return".bs.popover"}},{key:"DefaultType",get:function(){return tn}}]),t}(Kr);Ze((function(){var e=Ye();if(e){var t=e.fn.popover;e.fn.popover=nn.jQueryInterface,e.fn.popover.Constructor=nn,e.fn.popover.noConflict=function(){return e.fn.popover=t,nn.jQueryInterface}}}));var on="scrollspy",an="bs.scrollspy",sn={offset:10,method:"auto",target:""},ln={offset:"number",method:"string",target:"(string|element)"},un="dropdown-item",cn="active",hn="position",fn=function(e){function t(t,r){var n;return(n=e.call(this,t)||this)._scrollElement="BODY"===t.tagName?window:t,n._config=n._getConfig(r),n._selector=n._config.target+" .nav-link, "+n._config.target+" .list-group-item, "+n._config.target+" ."+un,n._offsets=[],n._targets=[],n._activeTarget=null,n._scrollHeight=0,dt.on(n._scrollElement,"scroll.bs.scrollspy",(function(e){return n._process(e)})),n.refresh(),n._process(),n}Ae(t,e);var r=t.prototype;return r.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?"offset":hn,r="auto"===this._config.method?t:this._config.method,n=r===hn?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),St.find(this._selector).map((function(e){var t=Ne(e),i=t?St.findOne(t):null;if(i){var o=i.getBoundingClientRect();if(o.width||o.height)return[xt[r](i).top+n,t]}return null})).filter((function(e){return e})).sort((function(e,t){return e[0]-t[0]})).forEach((function(t){e._offsets.push(t[0]),e._targets.push(t[1])}))},r.dispose=function(){e.prototype.dispose.call(this),dt.off(this._scrollElement,".bs.scrollspy"),this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},r._getConfig=function(e){if("string"!=typeof(e=Pe({},sn,"object"==typeof e&&e?e:{})).target&&je(e.target)){var t=e.target.id;t||(t=Ie(on),e.target.id=t),e.target="#"+t}return ze(on,e,ln),e},r._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},r._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},r._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},r._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),r=this._config.offset+t-this._getOffsetHeight();if(this._scrollHeight!==t&&this.refresh(),e>=r){var n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n)}else{if(this._activeTarget&&e<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(var i=this._offsets.length;i--;)this._activeTarget!==this._targets[i]&&e>=this._offsets[i]&&(void 0===this._offsets[i+1]||e<this._offsets[i+1])&&this._activate(this._targets[i])}},r._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map((function(t){return t+'[data-bs-target="'+e+'"],'+t+'[href="'+e+'"]'})),r=St.findOne(t.join(","));r.classList.contains(un)?(St.findOne(".dropdown-toggle",r.closest(".dropdown")).classList.add(cn),r.classList.add(cn)):(r.classList.add(cn),St.parents(r,".nav, .list-group").forEach((function(e){St.prev(e,".nav-link, .list-group-item").forEach((function(e){return e.classList.add(cn)})),St.prev(e,".nav-item").forEach((function(e){St.children(e,".nav-link").forEach((function(e){return e.classList.add(cn)}))}))}))),dt.trigger(this._scrollElement,"activate.bs.scrollspy",{relatedTarget:e})},r._clear=function(){St.find(this._selector).filter((function(e){return e.classList.contains(cn)})).forEach((function(e){return e.classList.remove(cn)}))},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,an);if(r||(r=new t(this,"object"==typeof e&&e)),"string"==typeof e){if(void 0===r[e])throw new TypeError('No method named "'+e+'"');r[e]()}}))},Oe(t,null,[{key:"Default",get:function(){return sn}},{key:"DATA_KEY",get:function(){return an}}]),t}(pt);dt.on(window,"load.bs.scrollspy.data-api",(function(){St.find('[data-bs-spy="scroll"]').forEach((function(e){return new fn(e,xt.getDataAttributes(e))}))})),Ze((function(){var e=Ye();if(e){var t=e.fn[on];e.fn[on]=fn.jQueryInterface,e.fn[on].Constructor=fn,e.fn[on].noConflict=function(){return e.fn[on]=t,fn.jQueryInterface}}}));var dn="bs.tab",pn="active",mn="fade",vn="show",gn=".active",yn=":scope > li > .active",bn=function(e){function t(){return e.apply(this,arguments)||this}Ae(t,e);var r=t.prototype;return r.show=function(){var e=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&this._element.classList.contains(pn)||this._element.classList.contains("disabled"))){var t,r=Be(this._element),n=this._element.closest(".nav, .list-group");if(n){var i="UL"===n.nodeName||"OL"===n.nodeName?yn:gn;t=(t=St.find(i,n))[t.length-1]}var o=null;if(t&&(o=dt.trigger(t,"hide.bs.tab",{relatedTarget:this._element})),!(dt.trigger(this._element,"show.bs.tab",{relatedTarget:t}).defaultPrevented||null!==o&&o.defaultPrevented)){this._activate(this._element,n);var a=function(){dt.trigger(t,"hidden.bs.tab",{relatedTarget:e._element}),dt.trigger(e._element,"shown.bs.tab",{relatedTarget:t})};r?this._activate(r,r.parentNode,a):a()}}},r._activate=function(e,t,r){var n=this,i=(!t||"UL"!==t.nodeName&&"OL"!==t.nodeName?St.children(t,gn):St.find(yn,t))[0],o=r&&i&&i.classList.contains(mn),a=function(){return n._transitionComplete(e,i,r)};if(i&&o){var s=Fe(i);i.classList.remove(vn),dt.one(i,Re,a),Ve(i,s)}else a()},r._transitionComplete=function(e,t,r){if(t){t.classList.remove(pn);var n=St.findOne(":scope > .dropdown-menu .active",t.parentNode);n&&n.classList.remove(pn),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!1)}e.classList.add(pn),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),Xe(e),e.classList.contains(mn)&&e.classList.add(vn),e.parentNode&&e.parentNode.classList.contains("dropdown-menu")&&(e.closest(".dropdown")&&St.find(".dropdown-toggle").forEach((function(e){return e.classList.add(pn)})),e.setAttribute("aria-expanded",!0)),r&&r()},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,dn)||new t(this);if("string"==typeof e){if(void 0===r[e])throw new TypeError('No method named "'+e+'"');r[e]()}}))},Oe(t,null,[{key:"DATA_KEY",get:function(){return dn}}]),t}(pt);dt.on(document,"click.bs.tab.data-api",'[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',(function(e){e.preventDefault(),($e(this,dn)||new bn(this)).show()})),Ze((function(){var e=Ye();if(e){var t=e.fn.tab;e.fn.tab=bn.jQueryInterface,e.fn.tab.Constructor=bn,e.fn.tab.noConflict=function(){return e.fn.tab=t,bn.jQueryInterface}}}));var _n="bs.toast",wn="click.dismiss.bs.toast",xn="hide",Sn="show",En="showing",Mn={animation:"boolean",autohide:"boolean",delay:"number"},Tn={animation:!0,autohide:!0,delay:5e3},Cn=function(e){function t(t,r){var n;return(n=e.call(this,t)||this)._config=n._getConfig(r),n._timeout=null,n._setListeners(),n}Ae(t,e);var r=t.prototype;return r.show=function(){var e=this;if(!dt.trigger(this._element,"show.bs.toast").defaultPrevented){this._clearTimeout(),this._config.animation&&this._element.classList.add("fade");var t=function(){e._element.classList.remove(En),e._element.classList.add(Sn),dt.trigger(e._element,"shown.bs.toast"),e._config.autohide&&(e._timeout=setTimeout((function(){e.hide()}),e._config.delay))};if(this._element.classList.remove(xn),Xe(this._element),this._element.classList.add(En),this._config.animation){var r=Fe(this._element);dt.one(this._element,Re,t),Ve(this._element,r)}else t()}},r.hide=function(){var e=this;if(this._element.classList.contains(Sn)&&!dt.trigger(this._element,"hide.bs.toast").defaultPrevented){var t=function(){e._element.classList.add(xn),dt.trigger(e._element,"hidden.bs.toast")};if(this._element.classList.remove(Sn),this._config.animation){var r=Fe(this._element);dt.one(this._element,Re,t),Ve(this._element,r)}else t()}},r.dispose=function(){this._clearTimeout(),this._element.classList.contains(Sn)&&this._element.classList.remove(Sn),dt.off(this._element,wn),e.prototype.dispose.call(this),this._config=null},r._getConfig=function(e){return e=Pe({},Tn,xt.getDataAttributes(this._element),"object"==typeof e&&e?e:{}),ze("toast",e,this.constructor.DefaultType),e},r._setListeners=function(){var e=this;dt.on(this._element,wn,'[data-bs-dismiss="toast"]',(function(){return e.hide()}))},r._clearTimeout=function(){clearTimeout(this._timeout),this._timeout=null},t.jQueryInterface=function(e){return this.each((function(){var r=$e(this,_n);if(r||(r=new t(this,"object"==typeof e&&e)),"string"==typeof e){if(void 0===r[e])throw new TypeError('No method named "'+e+'"');r[e](this)}}))},Oe(t,null,[{key:"DefaultType",get:function(){return Mn}},{key:"Default",get:function(){return Tn}},{key:"DATA_KEY",get:function(){return _n}}]),t}(pt);Ze((function(){var e=Ye();if(e){var t=e.fn.toast;e.fn.toast=Cn.jQueryInterface,e.fn.toast.Constructor=Cn,e.fn.toast.noConflict=function(){return e.fn.toast=t,Cn.jQueryInterface}}}))},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=e(t);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(e,r,n){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(n)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);n&&i[l[0]]||(r&&(l[2]?l[2]="".concat(r," and ").concat(l[2]):l[2]=r),t.push(l))}},t}},15:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}e.exports=function(e){var r,n,i=(n=4,function(e){if(Array.isArray(e))return e}(r=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw o}}return r}}(r,n)||function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),u="/*# ".concat(l," */"),c=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[o].concat(c).concat([u]).join("\n")}return[o].join("\n")}},35:(e,t,r)=>{e.exports=function e(t,r,n){function i(a,s){if(!r[a]){if(!t[a]){if(o)return o(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var u=r[a]={exports:{}};t[a][0].call(u.exports,(function(e){return i(t[a][1][e]||e)}),u,u.exports,e,t,r,n)}return r[a].exports}for(var o=void 0,a=0;a<n.length;a++)i(n[a]);return i}({1:[function(e,t,r){"use strict";r.byteLength=function(e){var t=u(e),r=t[0],n=t[1];return 3*(r+n)/4-n},r.toByteArray=function(e){var t,r,n=u(e),a=n[0],s=n[1],l=new o(function(e,t){return 3*(e+t)/4-t}(a,s)),c=0,h=0<s?a-4:a;for(r=0;r<h;r+=4)t=i[e.charCodeAt(r)]<<18|i[e.charCodeAt(r+1)]<<12|i[e.charCodeAt(r+2)]<<6|i[e.charCodeAt(r+3)],l[c++]=t>>16&255,l[c++]=t>>8&255,l[c++]=255&t;return 2===s&&(t=i[e.charCodeAt(r)]<<2|i[e.charCodeAt(r+1)]>>4,l[c++]=255&t),1===s&&(t=i[e.charCodeAt(r)]<<10|i[e.charCodeAt(r+1)]<<4|i[e.charCodeAt(r+2)]>>2,l[c++]=t>>8&255,l[c++]=255&t),l},r.fromByteArray=function(e){for(var t,r=e.length,i=r%3,o=[],a=0,s=r-i;a<s;a+=16383)o.push(c(e,a,s<a+16383?s:a+16383));return 1==i?(t=e[r-1],o.push(n[t>>2]+n[t<<4&63]+"==")):2==i&&(t=(e[r-2]<<8)+e[r-1],o.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),o.join("")};for(var n=[],i=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,l=a.length;s<l;++s)n[s]=a[s],i[a.charCodeAt(s)]=s;function u(e){var t=e.length;if(0<t%4)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function c(e,t,r){for(var i,o,a=[],s=t;s<r;s+=3)i=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(n[(o=i)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return a.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},{}],2:[function(e,t,r){},{}],3:[function(e,t,r){arguments[4][2][0].apply(r,arguments)},{dup:2}],4:[function(e,t,r){(function(t){"use strict";var n=e("base64-js"),i=e("ieee754"),o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;r.Buffer=t,r.SlowBuffer=function(e){return+e!=e&&(e=0),t.alloc(+e)},r.INSPECT_MAX_BYTES=50;var a=2147483647;function s(e){if(a<e)throw new RangeError('The value "'+e+'" is invalid for option "size"');var r=new Uint8Array(e);return Object.setPrototypeOf(r,t.prototype),r}function t(e,t,r){if("number"!=typeof e)return l(e,t,r);if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return c(e)}function l(e,r,n){if("string"==typeof e)return function(e,r){if("string"==typeof r&&""!==r||(r="utf8"),!t.isEncoding(r))throw new TypeError("Unknown encoding: "+r);var n=0|d(e,r),i=s(n),o=i.write(e,r);return o!==n&&(i=i.slice(0,o)),i}(e,r);if(ArrayBuffer.isView(e))return h(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(U(e,ArrayBuffer)||e&&U(e.buffer,ArrayBuffer))return function(e,r,n){if(r<0||e.byteLength<r)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<r+(n||0))throw new RangeError('"length" is outside of buffer bounds');var i;return i=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),Object.setPrototypeOf(i,t.prototype),i}(e,r,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var i=e.valueOf&&e.valueOf();if(null!=i&&i!==e)return t.from(i,r,n);var o=function(e){if(t.isBuffer(e)){var r=0|f(e.length),n=s(r);return 0===n.length||e.copy(n,0,0,r),n}return void 0!==e.length?"number"!=typeof e.length||N(e.length)?s(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return t.from(e[Symbol.toPrimitive]("string"),r,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function u(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function c(e){return u(e),s(e<0?0:0|f(e))}function h(e){for(var t=e.length<0?0:0|f(e.length),r=s(t),n=0;n<t;n+=1)r[n]=255&e[n];return r}function f(e){if(a<=e)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function d(e,r){if(t.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||U(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,i=2<arguments.length&&!0===arguments[2];if(!i&&0===n)return 0;for(var o=!1;;)switch(r){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return k(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return R(e).length;default:if(o)return i?-1:k(e).length;r=(""+r).toLowerCase(),o=!0}}function p(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function m(e,r,n,i,o){if(0===e.length)return-1;if("string"==typeof n?(i=n,n=0):2147483647<n?n=2147483647:n<-2147483648&&(n=-2147483648),N(n=+n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof r&&(r=t.from(r,i)),t.isBuffer(r))return 0===r.length?-1:v(e,r,n,i,o);if("number"==typeof r)return r&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,r,n):Uint8Array.prototype.lastIndexOf.call(e,r,n):v(e,[r],n,i,o);throw new TypeError("val must be string, number or Buffer")}function v(e,t,r,n,i){var o,a=1,s=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;s/=a=2,l/=2,r/=2}function u(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var c=-1;for(o=r;o<s;o++)if(u(e,o)===u(t,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===l)return c*a}else-1!==c&&(o-=o-c),c=-1}else for(s<r+l&&(r=s-l),o=r;0<=o;o--){for(var h=!0,f=0;f<l;f++)if(u(e,o+f)!==u(t,f)){h=!1;break}if(h)return o}return-1}function g(e,t,r,n){r=Number(r)||0;var i=e.length-r;n?i<(n=Number(n))&&(n=i):n=i;var o=t.length;o/2<n&&(n=o/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(N(s))return a;e[r+a]=s}return a}function y(e,t,r,n){return I(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function b(e,t,r,n){return I(function(e,t){for(var r,n,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)n=(r=e.charCodeAt(a))>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function _(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function w(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,a,s,l,u=e[i],c=null,h=239<u?4:223<u?3:191<u?2:1;if(i+h<=r)switch(h){case 1:u<128&&(c=u);break;case 2:128==(192&(o=e[i+1]))&&127<(l=(31&u)<<6|63&o)&&(c=l);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&2047<(l=(15&u)<<12|(63&o)<<6|63&a)&&(l<55296||57343<l)&&(c=l);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&65535<(l=(15&u)<<18|(63&o)<<12|(63&a)<<6|63&s)&&l<1114112&&(c=l)}null===c?(c=65533,h=1):65535<c&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),i+=h}return function(e){var t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=x));return r}(n)}r.kMaxLength=a,(t.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}())||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(t.prototype,"parent",{enumerable:!0,get:function(){if(t.isBuffer(this))return this.buffer}}),Object.defineProperty(t.prototype,"offset",{enumerable:!0,get:function(){if(t.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&t[Symbol.species]===t&&Object.defineProperty(t,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),t.poolSize=8192,t.from=function(e,t,r){return l(e,t,r)},Object.setPrototypeOf(t.prototype,Uint8Array.prototype),Object.setPrototypeOf(t,Uint8Array),t.alloc=function(e,t,r){return i=t,o=r,u(n=e),n<=0?s(n):void 0!==i?"string"==typeof o?s(n).fill(i,o):s(n).fill(i):s(n);var n,i,o},t.allocUnsafe=function(e){return c(e)},t.allocUnsafeSlow=function(e){return c(e)},t.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==t.prototype},t.compare=function(e,r){if(U(e,Uint8Array)&&(e=t.from(e,e.offset,e.byteLength)),U(r,Uint8Array)&&(r=t.from(r,r.offset,r.byteLength)),!t.isBuffer(e)||!t.isBuffer(r))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===r)return 0;for(var n=e.length,i=r.length,o=0,a=Math.min(n,i);o<a;++o)if(e[o]!==r[o]){n=e[o],i=r[o];break}return n<i?-1:i<n?1:0},t.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},t.concat=function(e,r){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return t.alloc(0);var n;if(void 0===r)for(n=r=0;n<e.length;++n)r+=e[n].length;var i=t.allocUnsafe(r),o=0;for(n=0;n<e.length;++n){var a=e[n];if(U(a,Uint8Array)&&(a=t.from(a)),!t.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,o),o+=a.length}return i},t.byteLength=d,t.prototype._isBuffer=!0,t.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)p(this,t,t+1);return this},t.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)p(this,t,t+3),p(this,t+1,t+2);return this},t.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)p(this,t,t+7),p(this,t+1,t+6),p(this,t+2,t+5),p(this,t+3,t+4);return this},t.prototype.toLocaleString=t.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?w(this,0,e):function(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e=e||"utf8";;)switch(e){case"hex":return M(this,t,r);case"utf8":case"utf-8":return w(this,t,r);case"ascii":return S(this,t,r);case"latin1":case"binary":return E(this,t,r);case"base64":return _(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}.apply(this,arguments)},t.prototype.equals=function(e){if(!t.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===t.compare(this,e)},t.prototype.inspect=function(){var e="",t=r.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},o&&(t.prototype[o]=t.prototype.inspect),t.prototype.compare=function(e,r,n,i,o){if(U(e,Uint8Array)&&(e=t.from(e,e.offset,e.byteLength)),!t.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===r&&(r=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===o&&(o=this.length),r<0||n>e.length||i<0||o>this.length)throw new RangeError("out of range index");if(o<=i&&n<=r)return 0;if(o<=i)return-1;if(n<=r)return 1;if(this===e)return 0;for(var a=(o>>>=0)-(i>>>=0),s=(n>>>=0)-(r>>>=0),l=Math.min(a,s),u=this.slice(i,o),c=e.slice(r,n),h=0;h<l;++h)if(u[h]!==c[h]){a=u[h],s=c[h];break}return a<s?-1:s<a?1:0},t.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},t.prototype.indexOf=function(e,t,r){return m(this,e,t,r,!0)},t.prototype.lastIndexOf=function(e,t,r){return m(this,e,t,r,!1)},t.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-t;if((void 0===r||i<r)&&(r=i),0<e.length&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n=n||"utf8";for(var o,a,s,l,u=!1;;)switch(n){case"hex":return g(this,e,t,r);case"utf8":case"utf-8":return s=t,l=r,I(k(e,this.length-s),this,s,l);case"ascii":return y(this,e,t,r);case"latin1":case"binary":return y(this,e,t,r);case"base64":return this,o=t,a=r,I(R(e),this,o,a);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return b(this,e,t,r);default:if(u)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),u=!0}},t.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var x=4096;function S(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function E(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function M(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||n<r)&&(r=n);for(var i="",o=t;o<r;++o)i+=B[e[o]];return i}function T(e,t,r){for(var n=e.slice(t,r),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(r<e+t)throw new RangeError("Trying to access beyond buffer length")}function L(e,r,n,i,o,a){if(!t.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(o<r||r<a)throw new RangeError('"value" argument is out of bounds');if(n+i>e.length)throw new RangeError("Index out of range")}function O(e,t,r,n){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function P(e,t,r,n,o){return t=+t,r>>>=0,o||O(e,0,r,4),i.write(e,t,r,n,23,4),r+4}function A(e,t,r,n,o){return t=+t,r>>>=0,o||O(e,0,r,8),i.write(e,t,r,n,52,8),r+8}t.prototype.slice=function(e,r){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):n<e&&(e=n),(r=void 0===r?n:~~r)<0?(r+=n)<0&&(r=0):n<r&&(r=n),r<e&&(r=e);var i=this.subarray(e,r);return Object.setPrototypeOf(i,t.prototype),i},t.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n},t.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);for(var n=this[e+--t],i=1;0<t&&(i*=256);)n+=this[e+--t]*i;return n},t.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},t.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},t.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},t.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},t.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},t.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return(i*=128)<=n&&(n-=Math.pow(2,8*t)),n},t.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);for(var n=t,i=1,o=this[e+--n];0<n&&(i*=256);)o+=this[e+--n]*i;return(i*=128)<=o&&(o-=Math.pow(2,8*t)),o},t.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},t.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},t.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},t.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},t.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},t.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!0,23,4)},t.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),i.read(this,e,!1,23,4)},t.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!0,52,8)},t.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),i.read(this,e,!1,52,8)},t.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||L(this,e,t,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},t.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||L(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;0<=--i&&(o*=256);)this[t+i]=e/o&255;return t+r},t.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,1,255,0),this[t]=255&e,t+1},t.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},t.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},t.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},t.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},t.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);L(this,e,t,r,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<r&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},t.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);L(this,e,t,r,i-1,-i)}var o=r-1,a=1,s=0;for(this[t+o]=255&e;0<=--o&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},t.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},t.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},t.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},t.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},t.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||L(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},t.prototype.writeFloatLE=function(e,t,r){return P(this,e,t,!0,r)},t.prototype.writeFloatBE=function(e,t,r){return P(this,e,t,!1,r)},t.prototype.writeDoubleLE=function(e,t,r){return A(this,e,t,!0,r)},t.prototype.writeDoubleBE=function(e,t,r){return A(this,e,t,!1,r)},t.prototype.copy=function(e,r,n,i){if(!t.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n=n||0,i||0===i||(i=this.length),r>=e.length&&(r=e.length),r=r||0,0<i&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(r<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-r<i-n&&(i=e.length-r+n);var o=i-n;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(r,n,i);else if(this===e&&n<r&&r<i)for(var a=o-1;0<=a;--a)e[a+r]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,i),r);return o},t.prototype.fill=function(e,r,n,i){if("string"==typeof e){if("string"==typeof r?(i=r,r=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!t.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===e.length){var o=e.charCodeAt(0);("utf8"===i&&o<128||"latin1"===i)&&(e=o)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(r<0||this.length<r||this.length<n)throw new RangeError("Out of range index");if(n<=r)return this;var a;if(r>>>=0,n=void 0===n?this.length:n>>>0,"number"==typeof(e=e||0))for(a=r;a<n;++a)this[a]=e;else{var s=t.isBuffer(e)?e:t.from(e,i),l=s.length;if(0===l)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-r;++a)this[a+r]=s[a%l]}return this};var D=/[^+/0-9A-Za-z-_]/g;function k(e,t){var r;t=t||1/0;for(var n=e.length,i=null,o=[],a=0;a<n;++a){if(55295<(r=e.charCodeAt(a))&&r<57344){if(!i){if(56319<r){-1<(t-=3)&&o.push(239,191,189);continue}if(a+1===n){-1<(t-=3)&&o.push(239,191,189);continue}i=r;continue}if(r<56320){-1<(t-=3)&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&-1<(t-=3)&&o.push(239,191,189);if(i=null,r<128){if(--t<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function R(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(D,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function I(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function U(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function N(e){return e!=e}var B=function(){for(var e="0123456789abcdef",t=new Array(256),r=0;r<16;++r)for(var n=16*r,i=0;i<16;++i)t[n+i]=e[r]+e[i];return t}()}).call(this,e("buffer").Buffer)},{"base64-js":1,buffer:4,ieee754:9}],5:[function(e,t,r){"use strict";t.exports=e("./").polyfill()},{"./":6}],6:[function(e,t,n){(function(r,i){var o;o=function(){"use strict";function t(e){return"function"==typeof e}var n=Array.isArray?Array.isArray:function(e){return"[object Array]"===Object.prototype.toString.call(e)},o=0,a=void 0,s=void 0,l=function(e,t){m[o]=e,m[o+1]=t,2===(o+=2)&&(s?s(v):w())},u="undefined"!=typeof window?window:void 0,c=u||{},h=c.MutationObserver||c.WebKitMutationObserver,f="undefined"==typeof self&&void 0!==r&&"[object process]"==={}.toString.call(r),d="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var e=setTimeout;return function(){return e(v,1)}}var m=new Array(1e3);function v(){for(var e=0;e<o;e+=2)(0,m[e])(m[e+1]),m[e]=void 0,m[e+1]=void 0;o=0}var g,y,b,_,w=void 0;function x(e,t){var r=this,n=new this.constructor(M);void 0===n[E]&&U(n);var i=r._state;if(i){var o=arguments[i-1];l((function(){return R(i,n,o,r._result)}))}else D(r,n,e,t);return n}function S(e){if(e&&"object"==typeof e&&e.constructor===this)return e;var t=new this(M);return L(t,e),t}w=f?function(){return r.nextTick(v)}:h?(y=0,b=new h(v),_=document.createTextNode(""),b.observe(_,{characterData:!0}),function(){_.data=y=++y%2}):d?((g=new MessageChannel).port1.onmessage=v,function(){return g.port2.postMessage(0)}):void 0===u&&"function"==typeof e?function(){try{var e=Function("return this")().require("vertx");return void 0!==(a=e.runOnLoop||e.runOnContext)?function(){a(v)}:p()}catch(e){return p()}}():p();var E=Math.random().toString(36).substring(2);function M(){}var T=void 0;function C(e,r,n){var i,o;r.constructor===e.constructor&&n===x&&r.constructor.resolve===S?(i=e,1===(o=r)._state?P(i,o._result):2===o._state?A(i,o._result):D(o,void 0,(function(e){return L(i,e)}),(function(e){return A(i,e)}))):void 0===n?P(e,r):t(n)?function(e,t,r){l((function(e){var n=!1,i=function(e,t,r,n){try{e.call(t,r,n)}catch(e){return e}}(r,t,(function(r){n||(n=!0,t!==r?L(e,r):P(e,r))}),(function(t){n||(n=!0,A(e,t))}),e._label);!n&&i&&(n=!0,A(e,i))}),e)}(e,r,n):P(e,r)}function L(e,t){if(e===t)A(e,new TypeError("You cannot resolve a promise with itself"));else if(i=typeof(n=t),null===n||"object"!=i&&"function"!=i)P(e,t);else{var r=void 0;try{r=t.then}catch(t){return void A(e,t)}C(e,t,r)}var n,i}function O(e){e._onerror&&e._onerror(e._result),k(e)}function P(e,t){e._state===T&&(e._result=t,e._state=1,0!==e._subscribers.length&&l(k,e))}function A(e,t){e._state===T&&(e._state=2,e._result=t,l(O,e))}function D(e,t,r,n){var i=e._subscribers,o=i.length;e._onerror=null,i[o]=t,i[o+1]=r,i[o+2]=n,0===o&&e._state&&l(k,e)}function k(e){var t=e._subscribers,r=e._state;if(0!==t.length){for(var n=void 0,i=void 0,o=e._result,a=0;a<t.length;a+=3)n=t[a],i=t[a+r],n?R(r,n,i,o):i(o);e._subscribers.length=0}}function R(e,r,n,i){var o=t(n),a=void 0,s=void 0,l=!0;if(o){try{a=n(i)}catch(e){l=!1,s=e}if(r===a)return void A(r,new TypeError("A promises callback cannot return that same promise."))}else a=i;r._state!==T||(o&&l?L(r,a):!1===l?A(r,s):1===e?P(r,a):2===e&&A(r,a))}var I=0;function U(e){e[E]=I++,e._state=void 0,e._result=void 0,e._subscribers=[]}var N=(B.prototype._enumerate=function(e){for(var t=0;this._state===T&&t<e.length;t++)this._eachEntry(e[t],t)},B.prototype._eachEntry=function(e,t){var r=this._instanceConstructor,n=r.resolve;if(n===S){var i=void 0,o=void 0,a=!1;try{i=e.then}catch(t){a=!0,o=t}if(i===x&&e._state!==T)this._settledAt(e._state,t,e._result);else if("function"!=typeof i)this._remaining--,this._result[t]=e;else if(r===F){var s=new r(M);a?A(s,o):C(s,e,i),this._willSettleAt(s,t)}else this._willSettleAt(new r((function(t){return t(e)})),t)}else this._willSettleAt(n(e),t)},B.prototype._settledAt=function(e,t,r){var n=this.promise;n._state===T&&(this._remaining--,2===e?A(n,r):this._result[t]=r),0===this._remaining&&P(n,this._result)},B.prototype._willSettleAt=function(e,t){var r=this;D(e,void 0,(function(e){return r._settledAt(1,t,e)}),(function(e){return r._settledAt(2,t,e)}))},B);function B(e,t){this._instanceConstructor=e,this.promise=new e(M),this.promise[E]||U(this.promise),n(t)?(this.length=t.length,this._remaining=t.length,this._result=new Array(this.length),0===this.length?P(this.promise,this._result):(this.length=this.length||0,this._enumerate(t),0===this._remaining&&P(this.promise,this._result))):A(this.promise,new Error("Array Methods must be provided an Array"))}var F=(G.prototype.catch=function(e){return this.then(null,e)},G.prototype.finally=function(e){var r=this.constructor;return t(e)?this.then((function(t){return r.resolve(e()).then((function(){return t}))}),(function(t){return r.resolve(e()).then((function(){throw t}))})):this.then(e,e)},G);function G(e){this[E]=I++,this._result=this._state=void 0,this._subscribers=[],M!==e&&("function"!=typeof e&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof G?function(e,t){try{t((function(t){L(e,t)}),(function(t){A(e,t)}))}catch(t){A(e,t)}}(this,e):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return F.prototype.then=x,F.all=function(e){return new N(this,e).promise},F.race=function(e){var t=this;return n(e)?new t((function(r,n){for(var i=e.length,o=0;o<i;o++)t.resolve(e[o]).then(r,n)})):new t((function(e,t){return t(new TypeError("You must pass an array to race."))}))},F.resolve=S,F.reject=function(e){var t=new this(M);return A(t,e),t},F._setScheduler=function(e){s=e},F._setAsap=function(e){l=e},F._asap=l,F.polyfill=function(){var e=void 0;if(void 0!==i)e=i;else if("undefined"!=typeof self)e=self;else try{e=Function("return this")()}catch(e){throw new Error("polyfill failed because global object is unavailable in this environment")}var t=e.Promise;if(t){var r=null;try{r=Object.prototype.toString.call(t.resolve())}catch(e){}if("[object Promise]"===r&&!t.cast)return}e.Promise=F},F.Promise=F},"object"==typeof n&&void 0!==t?t.exports=o():this.ES6Promise=o()}).call(this,e("_process"),void 0!==r.g?r.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{_process:14}],7:[function(e,t,r){!function(e,n){if(void 0!==r&&void 0!==t)n(0,t);else{var i={exports:{}};n(0,i),e.fetchJsonp=i.exports}}(this,(function(e,t){"use strict";var r="callback";function n(e){try{delete window[e]}catch(t){window[e]=void 0}}function i(e){var t=document.getElementById(e);t&&document.getElementsByTagName("head")[0].removeChild(t)}t.exports=function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],o=e,a=t.timeout||5e3,s=t.jsonpCallback||r,l=void 0;return new Promise((function(r,u){var c=t.jsonpCallbackFunction||"jsonp_"+Date.now()+"_"+Math.ceil(1e5*Math.random()),h=s+"_"+c;window[c]=function(e){r({ok:!0,json:function(){return Promise.resolve(e)}}),l&&clearTimeout(l),i(h),n(c)},o+=-1===o.indexOf("?")?"?":"&";var f=document.createElement("script");f.setAttribute("src",""+o+s+"="+c),t.charset&&f.setAttribute("charset",t.charset),f.id=h,document.getElementsByTagName("head")[0].appendChild(f),l=setTimeout((function(){u(new Error("JSONP request to "+e+" timed out")),n(c),i(h),window[c]=function(){n(c)}}),a),f.onerror=function(){u(new Error("JSONP request to "+e+" failed")),n(c),i(h),l&&clearTimeout(l)}}))}}))},{}],8:[function(e,t,r){var n=n||function(e){"use strict";if(!(void 0===e||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var t=e.document,r=function(){return e.URL||e.webkitURL||e},n=t.createElementNS("http://www.w3.org/1999/xhtml","a"),i="download"in n,o=/constructor/i.test(e.HTMLElement)||e.safari,a=/CriOS\/[\d]+/.test(navigator.userAgent),s=function(t){(e.setImmediate||e.setTimeout)((function(){throw t}),0)},l=function(e){setTimeout((function(){"string"==typeof e?r().revokeObjectURL(e):e.remove()}),4e4)},u=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},c=function(t,c,h){function f(){!function(e,t,r){for(var n=(t=[].concat(t)).length;n--;){var i=e["on"+t[n]];if("function"==typeof i)try{i.call(e,e)}catch(e){s(e)}}}(p,"writestart progress write writeend".split(" "))}h||(t=u(t));var d,p=this,m="application/octet-stream"===t.type;if(p.readyState=p.INIT,i)return d=r().createObjectURL(t),void setTimeout((function(){var e,t;n.href=d,n.download=c,e=n,t=new MouseEvent("click"),e.dispatchEvent(t),f(),l(d),p.readyState=p.DONE}));!function(){if((a||m&&o)&&e.FileReader){var n=new FileReader;return n.onloadend=function(){var t=a?n.result:n.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(t,"_blank")||(e.location.href=t),t=void 0,p.readyState=p.DONE,f()},n.readAsDataURL(t),p.readyState=p.INIT}d=d||r().createObjectURL(t),m?e.location.href=d:e.open(d,"_blank")||(e.location.href=d),p.readyState=p.DONE,f(),l(d)}()},h=c.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,r){return t=t||e.name||"download",r||(e=u(e)),navigator.msSaveOrOpenBlob(e,t)}:(h.abort=function(){},h.readyState=h.INIT=0,h.WRITING=1,h.DONE=2,h.error=h.onwritestart=h.onprogress=h.onwrite=h.onabort=h.onerror=h.onwriteend=null,function(e,t,r){return new c(e,t||e.name||"download",r)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);void 0!==t&&t.exports&&(t.exports.saveAs=n)},{}],9:[function(e,t,r){r.read=function(e,t,r,n,i){var o,a,s=8*i-n-1,l=(1<<s)-1,u=l>>1,c=-7,h=r?i-1:0,f=r?-1:1,d=e[t+h];for(h+=f,o=d&(1<<-c)-1,d>>=-c,c+=s;0<c;o=256*o+e[t+h],h+=f,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=n;0<c;a=256*a+e[t+h],h+=f,c-=8);if(0===o)o=1-u;else{if(o===l)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),o-=u}return(d?-1:1)*a*Math.pow(2,o-n)},r.write=function(e,t,r,n,i,o){var a,s,l,u=8*o-i-1,c=(1<<u)-1,h=c>>1,f=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,p=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=c):(a=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-a))<1&&(a--,l*=2),2<=(t+=1<=a+h?f/l:f*Math.pow(2,1-h))*l&&(a++,l/=2),c<=a+h?(s=0,a=c):1<=a+h?(s=(t*l-1)*Math.pow(2,i),a+=h):(s=t*Math.pow(2,h-1)*Math.pow(2,i),a=0));8<=i;e[r+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,u+=i;0<u;e[r+d]=255&a,d+=p,a/=256,u-=8);e[r+d-p]|=128*m}},{}],10:[function(e,t,r){"use strict";var n;function i(e,t){return e.b===t.b&&e.a===t.a}function o(e,t){return e.b<t.b||e.b===t.b&&e.a<=t.a}function a(e,t,r){var n=t.b-e.b,i=r.b-t.b;return 0<n+i?n<i?t.a-e.a+n/(n+i)*(e.a-r.a):t.a-r.a+i/(n+i)*(r.a-e.a):0}function s(e,t,r){var n=t.b-e.b,i=r.b-t.b;return 0<n+i?(t.a-r.a)*n+(t.a-e.a)*i:0}function l(e,t){return e.a<t.a||e.a===t.a&&e.b<=t.b}function u(e,t,r){var n=t.a-e.a,i=r.a-t.a;return 0<n+i?n<i?t.b-e.b+n/(n+i)*(e.b-r.b):t.b-r.b+i/(n+i)*(r.b-e.b):0}function c(e,t,r){var n=t.a-e.a,i=r.a-t.a;return 0<n+i?(t.b-r.b)*n+(t.b-e.b)*i:0}function h(e,t,r,n){return(e=e<0?0:e)<=(r=r<0?0:r)?0===r?(t+n)/2:t+e/(e+r)*(n-t):n+r/(e+r)*(t-n)}function f(e){var t=g(e.b);return b(t,e.c),b(t.b,e.c),_(t,e.a),t}function d(e,t){var r=!1,n=!1;e!==t&&(t.a!==e.a&&(n=!0,x(t.a,e.a)),t.d!==e.d&&(r=!0,S(t.d,e.d)),y(t,e),n||(b(t,e.a),e.a.c=e),r||(_(t,e.d),e.d.a=e))}function p(e){var t=e.b,r=!1;e.d!==e.b.d&&(r=!0,S(e.d,e.b.d)),e.c===e?x(e.a,null):(e.b.d.a=J(e),e.a.c=e.c,y(e,J(e)),r||_(e,e.d)),t.c===t?(x(t.a,null),S(t.d,null)):(e.d.a=J(t),t.a.c=t.c,y(t,J(t))),w(e)}function m(e){var t=g(e),r=t.b;return y(t,e.e),t.a=e.b.a,b(r,t.a),t.d=r.d=e.d,t=t.b,y(e.b,J(e.b)),y(e.b,t),e.b.a=t.a,t.b.a.c=t.b,t.b.d=e.b.d,t.f=e.f,t.b.f=e.b.f,t}function v(e,t){var r=!1,n=g(e),i=n.b;return t.d!==e.d&&(r=!0,S(t.d,e.d)),y(n,e.e),y(i,t),n.a=e.b.a,i.a=t.a,n.d=i.d=e.d,e.d.a=i,r||_(n,e.d),n}function g(e){var t=new K,r=new K,n=e.b.h;return(((r.h=n).b.h=t).h=e).b.h=r,t.b=r,((t.c=t).e=r).b=t,(r.c=r).e=t}function y(e,t){var r=e.c,n=t.c;r.b.e=t,(n.b.e=e).c=n,t.c=r}function b(e,t){var r=t.f,n=new ee(t,r);for(r.e=n,r=(t.f=n).c=e;r.a=n,(r=r.c)!==e;);}function _(e,t){var r=t.d,n=new Q(t,r);for(r.b=n,(t.d=n).a=e,n.c=t.c,r=e;r.d=n,(r=r.e)!==e;);}function w(e){var t=e.h;e=e.b.h,(t.b.h=e).b.h=t}function x(e,t){for(var r=e.c,n=r;n.a=t,(n=n.c)!==r;);r=e.f,((n=e.e).f=r).e=n}function S(e,t){for(var r=e.a,n=r;n.d=t,(n=n.e)!==r;);r=e.d,((n=e.b).d=r).b=n}function E(e){var t=0;return Math.abs(e[1])>Math.abs(e[0])&&(t=1),Math.abs(e[2])>Math.abs(e[t])&&(t=2),t}var M=4e150;function T(e,t){e.f+=t.f,e.b.f+=t.b.f}function C(e,t,r){return e=e.a,t=t.a,r=r.a,t.b.a===e?r.b.a===e?o(t.a,r.a)?s(r.b.a,t.a,r.a)<=0:0<=s(t.b.a,r.a,t.a):s(r.b.a,e,r.a)<=0:r.b.a===e?0<=s(t.b.a,e,t.a):(t=a(t.b.a,e,t.a),(e=a(r.b.a,e,r.a))<=t)}function L(e){e.a.i=null;var t=e.e;t.a.c=t.c,t.c.a=t.a,e.e=null}function O(e,t){p(e.a),e.c=!1,(e.a=t).i=e}function P(e){for(var t=e.a.a;(e=fe(e)).a.a===t;);return e.c&&(O(e,t=v(he(e).a.b,e.a.e)),e=fe(e)),e}function A(e,t,r){var n=new ce;return n.a=r,n.e=W(e.f,t.e,n),r.i=n}function D(e,t){switch(e.s){case 100130:return 0!=(1&t);case 100131:return 0!==t;case 100132:return 0<t;case 100133:return t<0;case 100134:return 2<=t||t<=-2}return!1}function k(e){var t=e.a,r=t.d;r.c=e.d,r.a=t,L(e)}function R(e,t,r){for(t=(e=t).a;e!==r;){e.c=!1;var n=he(e),i=n.a;if(i.a!==t.a){if(!n.c){k(e);break}O(n,i=v(t.c.b,i.b))}t.c!==i&&(d(J(i),i),d(t,i)),k(e),t=n.a,e=n}return t}function I(e,t,r,n,i,o){for(var a=!0;A(e,t,r.b),(r=r.c)!==n;);for(null===i&&(i=he(t).a.b.c);(r=(n=he(t)).a.b).a===i.a;)r.c!==i&&(d(J(r),r),d(J(i),r)),n.f=t.f-r.f,n.d=D(e,n.f),t.b=!0,!a&&F(e,t)&&(T(r,i),L(t),p(i)),a=!1,t=n,i=r;t.b=!0,o&&j(e,t)}function U(e,t,r,n,i){var o=[t.g[0],t.g[1],t.g[2]];t.d=null,t.d=e.o&&e.o(o,r,n,e.c)||null,null===t.d&&(i?e.n||(Z(e,100156),e.n=!0):t.d=r[0])}function N(e,t,r){var n=[null,null,null,null];n[0]=t.a.d,n[1]=r.a.d,U(e,t.a,n,[.5,.5,0,0],!1),d(t,r)}function B(e,t,r,n,i){var o=Math.abs(t.b-e.b)+Math.abs(t.a-e.a),a=Math.abs(r.b-e.b)+Math.abs(r.a-e.a),s=i+1;n[i]=.5*a/(o+a),n[s]=.5*o/(o+a),e.g[0]+=n[i]*t.g[0]+n[s]*r.g[0],e.g[1]+=n[i]*t.g[1]+n[s]*r.g[1],e.g[2]+=n[i]*t.g[2]+n[s]*r.g[2]}function F(e,t){var r=he(t),n=t.a,a=r.a;if(o(n.a,a.a)){if(0<s(a.b.a,n.a,a.a))return!1;if(i(n.a,a.a)){if(n.a!==a.a){r=e.e;var l=n.a.h;if(0<=l){var u=(r=r.b).d,c=r.e,h=r.c,f=h[l];u[f]=u[r.a],(h[u[f]]=f)<=--r.a&&(f<=1||o(c[u[f>>1]],c[u[f]])?le(r,f):ue(r,f)),c[l]=null,h[l]=r.b,r.b=l}else for(r.c[-(l+1)]=null;0<r.a&&null===r.c[r.d[r.a-1]];)--r.a;N(e,J(a),n)}}else m(a.b),d(n,J(a)),t.b=r.b=!0}else{if(s(n.b.a,a.a,n.a)<0)return!1;fe(t).b=t.b=!0,m(n.b),d(J(a),n)}return!0}function G(e,t){var r=he(t),n=t.a,f=r.a,p=n.a,v=f.a,g=n.b.a,y=f.b.a,b=new ee;if(s(g,e.a,p),s(y,e.a,v),p===v||Math.min(p.a,g.a)>Math.max(v.a,y.a))return!1;if(o(p,v)){if(0<s(y,p,v))return!1}else if(s(g,v,p)<0)return!1;var _,w,x=g,S=p,E=y,M=v;if(o(x,S)||(_=x,x=S,S=_),o(E,M)||(_=E,E=M,M=_),o(x,E)||(_=x,x=E,E=_,_=S,S=M,M=_),o(E,S)?o(S,M)?((_=a(x,E,S))+(w=a(E,S,M))<0&&(_=-_,w=-w),b.b=h(_,E.b,w,S.b)):((_=s(x,E,S))+(w=-s(x,M,S))<0&&(_=-_,w=-w),b.b=h(_,E.b,w,M.b)):b.b=(E.b+S.b)/2,l(x,S)||(_=x,x=S,S=_),l(E,M)||(_=E,E=M,M=_),l(x,E)||(_=x,x=E,E=_,_=S,S=M,M=_),l(E,S)?l(S,M)?((_=u(x,E,S))+(w=u(E,S,M))<0&&(_=-_,w=-w),b.a=h(_,E.a,w,S.a)):((_=c(x,E,S))+(w=-c(x,M,S))<0&&(_=-_,w=-w),b.a=h(_,E.a,w,M.a)):b.a=(E.a+S.a)/2,o(b,e.a)&&(b.b=e.a.b,b.a=e.a.a),x=o(p,v)?p:v,o(x,b)&&(b.b=x.b,b.a=x.a),i(b,p)||i(b,v))return F(e,t),!1;if(!i(g,e.a)&&0<=s(g,e.a,b)||!i(y,e.a)&&s(y,e.a,b)<=0){if(y===e.a)return m(n.b),d(f.b,n),n=he(t=P(t)).a,R(e,he(t),r),I(e,t,J(n),n,n,!0),!0;if(g!==e.a)return 0<=s(g,e.a,b)&&(fe(t).b=t.b=!0,m(n.b),n.a.b=e.a.b,n.a.a=e.a.a),s(y,e.a,b)<=0&&(t.b=r.b=!0,m(f.b),f.a.b=e.a.b,f.a.a=e.a.a),!1;for(m(f.b),d(n.e,J(f)),v=(p=r=t).a.b.a;(p=fe(p)).a.b.a===v;);return p=he(t=p).a.b.c,r.a=J(f),I(e,t,(f=R(e,r,null)).c,n.b.c,p,!0),!0}return m(n.b),m(f.b),d(J(f),n),n.a.b=b.b,n.a.a=b.a,n.a.h=re(e.e,n.a),n=n.a,f=[0,0,0,0],b=[p.d,g.d,v.d,y.d],n.g[0]=n.g[1]=n.g[2]=0,B(n,p,g,f,0),B(n,v,y,f,2),U(e,n,b,f,!0),fe(t).b=t.b=r.b=!0,!1}function j(e,t){for(var r=he(t);;){for(;r.b;)r=he(t=r);if(!(t.b||null!==(t=fe(r=t))&&t.b))break;t.b=!1;var n,i=t.a,a=r.a;if(n=i.b.a!==a.b.a)e:{var l=he(n=t),u=n.a,c=l.a,h=void 0;if(o(u.b.a,c.b.a)){if(s(u.b.a,c.b.a,u.a)<0){n=!1;break e}fe(n).b=n.b=!0,h=m(u),d(c.b,h),h.d.c=n.d}else{if(0<s(c.b.a,u.b.a,c.a)){n=!1;break e}n.b=l.b=!0,h=m(c),d(u.e,c.b),h.b.d.c=n.d}n=!0}if(n&&(r.c?(L(r),p(a),a=(r=he(t)).a):t.c&&(L(t),p(i),i=(t=fe(r)).a)),i.a!==a.a)if(i.b.a===a.b.a||t.c||r.c||i.b.a!==e.a&&a.b.a!==e.a)F(e,t);else if(G(e,t))break;i.a===a.a&&i.b.a===a.b.a&&(T(a,i),L(t),p(i),t=fe(r))}}function V(e,t){for(var r=(e.a=t).c;null===r.i;)if((r=r.c)===t.c){r=e;var n=t;(u=new ce).a=n.c.b;for(var a=(h=r.f).a;null!==(a=a.a).b&&!h.c(h.b,u,a.b););var l=he(h=a.b),u=h.a;if(a=l.a,0===s(u.b.a,n,u.a))i((u=h.a).a,n)||i(u.b.a,n)||(m(u.b),h.c&&(p(u.c),h.c=!1),d(n.c,u),V(r,n));else{var c=o(a.b.a,u.b.a)?h:l;l=void 0,h.d||c.c?(l=c===h?v(n.c.b,u.e):v(a.b.c.b,n.c).b,c.c?O(c,l):((h=A(u=r,h,l)).f=fe(h).f+h.a.f,h.d=D(u,h.f)),V(r,n)):I(r,h,n.c,n.c,null,!0)}return}if(h=(u=he(r=P(r.i))).a,(u=R(e,u,null)).c===h){u=(h=u).c,a=he(r),l=r.a,c=a.a;var h,f=!1;l.b.a!==c.b.a&&G(e,r),i(l.a,e.a)&&(d(J(u),l),u=he(r=P(r)).a,R(e,he(r),a),f=!0),i(c.a,e.a)&&(d(h,J(c)),h=R(e,a,null),f=!0),f?I(e,r,h.c,u,u,!0):(n=o(c.a,l.a)?J(c):l,I(e,r,n=v(h.c.b,n),n.c,n.c,!1),n.b.i.c=!0,j(e,r))}else I(e,r,u.c,h,h,!0)}function z(e,t){var r=new ce,n=f(e.b);n.a.b=M,n.a.a=t,n.b.a.b=-M,n.b.a.a=t,e.a=n.b.a,r.a=n,r.f=0,r.d=!1,r.c=!1,r.h=!0,r.b=!1,n=W(n=e.f,n.a,r),r.e=n}function H(e){this.a=new q,this.b=e,this.c=C}function W(e,t,r){for(;null!==(t=t.c).b&&!e.c(e.b,t.b,r););return e=new q(r,t.a,t),t.a.c=e,t.a=e}function q(e,t,r){this.b=e||null,this.a=t||this,this.c=r||this}function X(){this.d=0,this.p=this.b=this.q=null,this.j=[0,0,0],this.s=100130,this.n=!1,this.o=this.a=this.e=this.f=null,this.m=!1,this.c=this.r=this.i=this.k=this.l=this.h=null}function Y(e,t){if(e.d!==t)for(;e.d!==t;)if(e.d<t)switch(e.d){case 0:Z(e,100151),e.u(null);break;case 1:Z(e,100152),e.t()}else switch(e.d){case 2:Z(e,100154),e.v();break;case 1:Z(e,100153),e.w()}}function Z(e,t){e.p&&e.p(t,e.c)}function Q(e,t){this.b=e||this,this.d=t||this,this.a=null,this.c=!1}function K(){(this.h=this).i=this.d=this.a=this.e=this.c=this.b=null,this.f=0}function J(e){return e.b.e}function $(){this.c=new ee,this.a=new Q,this.b=new K,this.d=new K,this.b.b=this.d,this.d.b=this.b}function ee(e,t){this.e=e||this,this.f=t||this,this.d=this.c=null,this.g=[0,0,0],this.h=this.a=this.b=0}function te(){this.c=[],this.d=null,this.a=0,this.e=!1,this.b=new ie}function re(e,t){if(e.e){var r,n=e.b,i=++n.a;return 2*i>n.f&&(n.f*=2,n.c=oe(n.c,n.f+1)),0===n.b?r=i:(r=n.b,n.b=n.c[n.b]),n.e[r]=t,n.c[r]=i,n.d[i]=r,n.h&&ue(n,i),r}return n=e.a++,e.c[n]=t,-(n+1)}function ne(e){if(0===e.a)return se(e.b);var t=e.c[e.d[e.a-1]];if(0!==e.b.a&&o(ae(e.b),t))return se(e.b);for(;--e.a,0<e.a&&null===e.c[e.d[e.a-1]];);return t}function ie(){this.d=oe([0],33),this.e=[null,null],this.c=[0,0],this.a=0,this.f=32,this.b=0,this.h=!1,this.d[1]=1}function oe(e,t){for(var r=Array(t),n=0;n<e.length;n++)r[n]=e[n];for(;n<t;n++)r[n]=0;return r}function ae(e){return e.e[e.d[1]]}function se(e){var t=e.d,r=e.e,n=e.c,i=t[1],o=r[i];return 0<e.a&&(t[1]=t[e.a],n[t[1]]=1,r[i]=null,n[i]=e.b,e.b=i,0<--e.a&&le(e,1)),o}function le(e,t){for(var r=e.d,n=e.e,i=e.c,a=t,s=r[a];;){var l=a<<1;l<e.a&&o(n[r[l+1]],n[r[l]])&&(l+=1);var u=r[l];if(l>e.a||o(n[s],n[u])){i[r[a]=s]=a;break}i[r[a]=u]=a,a=l}}function ue(e,t){for(var r=e.d,n=e.e,i=e.c,a=t,s=r[a];;){var l=a>>1,u=r[l];if(0==l||o(n[u],n[s])){i[r[a]=s]=a;break}i[r[a]=u]=a,a=l}}function ce(){this.e=this.a=null,this.f=0,this.c=this.b=this.h=this.d=!1}function he(e){return e.e.c.b}function fe(e){return e.e.a.b}(n=X.prototype).x=function(){Y(this,0)},n.B=function(e,t){switch(e){case 100142:return;case 100140:switch(t){case 100130:case 100131:case 100132:case 100133:case 100134:return void(this.s=t)}break;case 100141:return void(this.m=!!t);default:return void Z(this,100900)}Z(this,100901)},n.y=function(e){switch(e){case 100142:return 0;case 100140:return this.s;case 100141:return this.m;default:Z(this,100900)}return!1},n.A=function(e,t,r){this.j[0]=e,this.j[1]=t,this.j[2]=r},n.z=function(e,t){var r=t||null;switch(e){case 100100:case 100106:this.h=r;break;case 100104:case 100110:this.l=r;break;case 100101:case 100107:this.k=r;break;case 100102:case 100108:this.i=r;break;case 100103:case 100109:this.p=r;break;case 100105:case 100111:this.o=r;break;case 100112:this.r=r;break;default:Z(this,100900)}},n.C=function(e,t){var r=!1,n=[0,0,0];Y(this,2);for(var i=0;i<3;++i){var o=e[i];o<-1e150&&(o=-1e150,r=!0),1e150<o&&(o=1e150,r=!0),n[i]=o}r&&Z(this,100155),null===(r=this.q)?d(r=f(this.b),r.b):(m(r),r=r.e),r.a.d=t,r.a.g[0]=n[0],r.a.g[1]=n[1],r.a.g[2]=n[2],r.f=1,r.b.f=-1,this.q=r},n.u=function(e){Y(this,0),this.d=1,this.b=new $,this.c=e},n.t=function(){Y(this,1),this.d=2,this.q=null},n.v=function(){Y(this,2),this.d=1},n.w=function(){Y(this,1),this.d=0;var e,t,r=!1,n=[h=this.j[0],a=this.j[1],u=this.j[2]];if(0===h&&0===a&&0===u){for(var a=[-2e150,-2e150,-2e150],l=[2e150,2e150,2e150],u=[],c=[],h=(r=this.b.c).e;h!==r;h=h.e)for(var f=0;f<3;++f){var d=h.g[f];d<l[f]&&(l[f]=d,c[f]=h),d>a[f]&&(a[f]=d,u[f]=h)}if(h=0,a[1]-l[1]>a[0]-l[0]&&(h=1),a[2]-l[2]>a[h]-l[h]&&(h=2),l[h]>=a[h])n[0]=0,n[1]=0,n[2]=1;else{for(a=0,l=c[h],u=u[h],c=[0,0,0],l=[l.g[0]-u.g[0],l.g[1]-u.g[1],l.g[2]-u.g[2]],f=[0,0,0],h=r.e;h!==r;h=h.e)f[0]=h.g[0]-u.g[0],f[1]=h.g[1]-u.g[1],f[2]=h.g[2]-u.g[2],c[0]=l[1]*f[2]-l[2]*f[1],c[1]=l[2]*f[0]-l[0]*f[2],c[2]=l[0]*f[1]-l[1]*f[0],a<(d=c[0]*c[0]+c[1]*c[1]+c[2]*c[2])&&(a=d,n[0]=c[0],n[1]=c[1],n[2]=c[2]);a<=0&&(n[0]=n[1]=n[2]=0,n[E(l)]=1)}r=!0}for(c=E(n),h=this.b.c,a=(c+1)%3,u=(c+2)%3,c=0<n[c]?1:-1,n=h.e;n!==h;n=n.e)n.b=n.g[a],n.a=c*n.g[u];if(r){for(n=0,h=(r=this.b.a).b;h!==r;h=h.b)if(!((a=h.a).f<=0))for(;n+=(a.a.b-a.b.a.b)*(a.a.a+a.b.a.a),(a=a.e)!==h.a;);if(n<0)for(r=(n=this.b.c).e;r!==n;r=r.e)r.a=-r.a}for(this.n=!1,h=(n=this.b.b).h;h!==n;h=r)r=h.h,a=h.e,i(h.a,h.b.a)&&h.e.e!==h&&(N(this,a,h),p(h),a=(h=a).e),a.e===h&&(a!==h&&(a!==r&&a!==r.b||(r=r.h),p(a)),h!==r&&h!==r.b||(r=r.h),p(h));for(this.e=n=new te,h=(r=this.b.c).e;h!==r;h=h.e)h.h=re(n,h);for(function(e){e.d=[];for(var t=0;t<e.a;t++)e.d[t]=t;e.d.sort(function(e){return function(t,r){return o(e[t],e[r])?1:-1}}(e.c)),e.e=!0,function(e){for(var t=e.a;1<=t;--t)le(e,t);e.h=!0}(e.b)}(n),this.f=new H(this),z(this,-M),z(this,M);null!==(n=ne(this.e));){for(;;){e:if(h=this.e,0===h.a)r=ae(h.b);else if(r=h.c[h.d[h.a-1]],0!==h.b.a&&(h=ae(h.b),o(h,r))){r=h;break e}if(null===r||!i(r,n))break;r=ne(this.e),N(this,n.c,r.c)}V(this,n)}for(this.a=this.f.a.a.b.a.a,n=0;null!==(r=this.f.a.a.b);)r.h||++n,L(r);for(this.f=null,(n=this.e).b=null,n.d=null,this.e=n.c=null,h=(n=this.b).a.b;h!==n.a;h=r)r=h.b,(h=h.a).e.e===h&&(T(h.c,h),p(h));if(!this.n){if(n=this.b,this.m)for(h=n.b.h;h!==n.b;h=r)r=h.h,h.b.d.c!==h.d.c?h.f=h.d.c?1:-1:p(h);else for(h=n.a.b;h!==n.a;h=r)if(r=h.b,h.c){for(h=h.a;o(h.b.a,h.a);h=h.c.b);for(;o(h.a,h.b.a);h=h.e);for(a=h.c.b,u=void 0;h.e!==a;)if(o(h.b.a,a.a)){for(;a.e!==h&&(o((t=a.e).b.a,t.a)||s(a.a,a.b.a,a.e.b.a)<=0);)a=(u=v(a.e,a)).b;a=a.c.b}else{for(;a.e!==h&&(o((e=h.c.b).a,e.b.a)||0<=s(h.b.a,h.a,h.c.b.a));)h=(u=v(h,h.c.b)).b;h=h.e}for(;a.e.e!==h;)a=(u=v(a.e,a)).b}if(this.h||this.i||this.k||this.l)if(this.m){for(r=(n=this.b).a.b;r!==n.a;r=r.b)if(r.c){for(this.h&&this.h(2,this.c),h=r.a;this.k&&this.k(h.a.d,this.c),(h=h.e)!==r.a;);this.i&&this.i(this.c)}}else{for(n=this.b,r=!!this.l,h=!1,a=-1,u=n.a.d;u!==n.a;u=u.d)if(u.c)for(h||(this.h&&this.h(4,this.c),h=!0),c=u.a;r&&a!==(l=c.b.d.c?0:1)&&(a=l,this.l&&this.l(!!a,this.c)),this.k&&this.k(c.a.d,this.c),(c=c.e)!==u.a;);h&&this.i&&this.i(this.c)}if(this.r){for(h=(n=this.b).a.b;h!==n.a;h=r)if(r=h.b,!h.c){for(u=(a=h.a).e,c=void 0;u=(c=u).e,(c.d=null)===c.b.d&&(c.c===c?x(c.a,null):(c.a.c=c.c,y(c,J(c))),(l=c.b).c===l?x(l.a,null):(l.a.c=l.c,y(l,J(l))),w(c)),c!==a;);a=h.d,((h=h.b).d=a).b=h}return this.r(this.b),void(this.c=this.b=null)}}this.b=this.c=null},this.libtess={GluTesselator:X,windingRule:{GLU_TESS_WINDING_ODD:100130,GLU_TESS_WINDING_NONZERO:100131,GLU_TESS_WINDING_POSITIVE:100132,GLU_TESS_WINDING_NEGATIVE:100133,GLU_TESS_WINDING_ABS_GEQ_TWO:100134},primitiveType:{GL_LINE_LOOP:2,GL_TRIANGLES:4,GL_TRIANGLE_STRIP:5,GL_TRIANGLE_FAN:6},errorType:{GLU_TESS_MISSING_BEGIN_POLYGON:100151,GLU_TESS_MISSING_END_POLYGON:100153,GLU_TESS_MISSING_BEGIN_CONTOUR:100152,GLU_TESS_MISSING_END_CONTOUR:100154,GLU_TESS_COORD_TOO_LARGE:100155,GLU_TESS_NEED_COMBINE_CALLBACK:100156},gluEnum:{GLU_TESS_MESH:100112,GLU_TESS_TOLERANCE:100142,GLU_TESS_WINDING_RULE:100140,GLU_TESS_BOUNDARY_ONLY:100141,GLU_INVALID_ENUM:100900,GLU_INVALID_VALUE:100901,GLU_TESS_BEGIN:100100,GLU_TESS_VERTEX:100101,GLU_TESS_END:100102,GLU_TESS_ERROR:100103,GLU_TESS_EDGE_FLAG:100104,GLU_TESS_COMBINE:100105,GLU_TESS_BEGIN_DATA:100106,GLU_TESS_VERTEX_DATA:100107,GLU_TESS_END_DATA:100108,GLU_TESS_ERROR_DATA:100109,GLU_TESS_EDGE_FLAG_DATA:100110,GLU_TESS_COMBINE_DATA:100111}},X.prototype.gluDeleteTess=X.prototype.x,X.prototype.gluTessProperty=X.prototype.B,X.prototype.gluGetTessProperty=X.prototype.y,X.prototype.gluTessNormal=X.prototype.A,X.prototype.gluTessCallback=X.prototype.z,X.prototype.gluTessVertex=X.prototype.C,X.prototype.gluTessBeginPolygon=X.prototype.u,X.prototype.gluTessBeginContour=X.prototype.t,X.prototype.gluTessEndContour=X.prototype.v,X.prototype.gluTessEndPolygon=X.prototype.w,void 0!==t&&(t.exports=this.libtess)},{}],11:[function(e,t,r){"use strict";function n(e,t,r,n){for(var i=e[t++],o=1<<i,a=1+o,s=1+a,l=i+1,u=(1<<l)-1,c=0,h=0,f=0,d=e[t++],p=new Int32Array(4096),m=null;;){for(;c<16&&0!==d;)h|=e[t++]<<c,c+=8,1===d?d=e[t++]:--d;if(c<l)break;var v=h&u;if(h>>=l,c-=l,v!=o){if(v==a)break;for(var g=v<s?v:m,y=0,b=g;o<b;)b=p[b]>>8,++y;var _=b;if(n<f+y+(g!==v?1:0))return void console.log("Warning, gif stream longer than expected.");r[f++]=_;var w=f+=y;for(g!==v&&(r[f++]=_),b=g;y--;)b=p[b],r[--w]=255&b,b>>=8;null!==m&&s<4096&&(p[s++]=m<<8|_,u+1<=s&&l<12&&(++l,u=u<<1|1)),m=v}else s=1+a,u=(1<<(l=i+1))-1,m=null}return f!==n&&console.log("Warning, gif stream shorter than expected."),r}try{r.GifWriter=function(e,t,r,n){var i=0,o=void 0===(n=void 0===n?{}:n).loop?null:n.loop,a=void 0===n.palette?null:n.palette;if(t<=0||r<=0||65535<t||65535<r)throw new Error("Width/Height invalid.");function s(e){var t=e.length;if(t<2||256<t||t&t-1)throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");return t}e[i++]=71,e[i++]=73,e[i++]=70,e[i++]=56,e[i++]=57,e[i++]=97;var l=0,u=0;if(null!==a){for(var c=s(a);c>>=1;)++l;if(c=1<<l,--l,void 0!==n.background){if(c<=(u=n.background))throw new Error("Background index out of range.");if(0===u)throw new Error("Background index explicitly passed as 0.")}}if(e[i++]=255&t,e[i++]=t>>8&255,e[i++]=255&r,e[i++]=r>>8&255,e[i++]=(null!==a?128:0)|l,e[i++]=u,e[i++]=0,null!==a)for(var h=0,f=a.length;h<f;++h){var d=a[h];e[i++]=d>>16&255,e[i++]=d>>8&255,e[i++]=255&d}if(null!==o){if(o<0||65535<o)throw new Error("Loop count invalid.");e[i++]=33,e[i++]=255,e[i++]=11,e[i++]=78,e[i++]=69,e[i++]=84,e[i++]=83,e[i++]=67,e[i++]=65,e[i++]=80,e[i++]=69,e[i++]=50,e[i++]=46,e[i++]=48,e[i++]=3,e[i++]=1,e[i++]=255&o,e[i++]=o>>8&255,e[i++]=0}var p=!1;this.addFrame=function(t,r,n,o,l,u){if(!0===p&&(--i,p=!1),u=void 0===u?{}:u,t<0||r<0||65535<t||65535<r)throw new Error("x/y invalid.");if(n<=0||o<=0||65535<n||65535<o)throw new Error("Width/Height invalid.");if(l.length<n*o)throw new Error("Not enough pixels for the frame size.");var c=!0,h=u.palette;if(null==h&&(c=!1,h=a),null==h)throw new Error("Must supply either a local or global palette.");for(var f=s(h),d=0;f>>=1;)++d;f=1<<d;var m=void 0===u.delay?0:u.delay,v=void 0===u.disposal?0:u.disposal;if(v<0||3<v)throw new Error("Disposal out of range.");var g=!1,y=0;if(void 0!==u.transparent&&null!==u.transparent&&(g=!0,(y=u.transparent)<0||f<=y))throw new Error("Transparent color index.");if(0===v&&!g&&0===m||(e[i++]=33,e[i++]=249,e[i++]=4,e[i++]=v<<2|(!0===g?1:0),e[i++]=255&m,e[i++]=m>>8&255,e[i++]=y,e[i++]=0),e[i++]=44,e[i++]=255&t,e[i++]=t>>8&255,e[i++]=255&r,e[i++]=r>>8&255,e[i++]=255&n,e[i++]=n>>8&255,e[i++]=255&o,e[i++]=o>>8&255,e[i++]=!0===c?128|d-1:0,!0===c)for(var b=0,_=h.length;b<_;++b){var w=h[b];e[i++]=w>>16&255,e[i++]=w>>8&255,e[i++]=255&w}return i=function(e,t,r,n){e[t++]=r;var i=t++,o=1<<r,a=o-1,s=1+o,l=1+s,u=r+1,c=0,h=0;function f(r){for(;r<=c;)e[t++]=255&h,h>>=8,c-=8,t===i+256&&(e[i]=255,i=t++)}function d(e){h|=e<<c,c+=u,f(8)}var p=n[0]&a,m={};d(o);for(var v=1,g=n.length;v<g;++v){var y=n[v]&a,b=p<<8|y,_=m[b];if(void 0===_){for(h|=p<<c,c+=u;8<=c;)e[t++]=255&h,h>>=8,c-=8,t===i+256&&(e[i]=255,i=t++);4096===l?(d(o),l=1+s,u=r+1,m={}):(1<<u<=l&&++u,m[b]=l++),p=y}else p=_}return d(p),d(s),f(1),i+1===t?e[i]=0:(e[i]=t-i-1,e[t++]=0),t}(e,i,d<2?2:d,l)},this.end=function(){return!1===p&&(e[i++]=59,p=!0),i},this.getOutputBuffer=function(){return e},this.setOutputBuffer=function(t){e=t},this.getOutputBufferPosition=function(){return i},this.setOutputBufferPosition=function(e){i=e}},r.GifReader=function(e){var t=0;if(71!==e[t++]||73!==e[t++]||70!==e[t++]||56!==e[t++]||56!=(e[t++]+1&253)||97!==e[t++])throw new Error("Invalid GIF 87a/89a header.");var r=e[t++]|e[t++]<<8,i=e[t++]|e[t++]<<8,o=e[t++],a=o>>7,s=1<<1+(7&o);e[t++],e[t++];var l=null,u=null;a&&(l=t,t+=3*(u=s));var c=!0,h=[],f=0,d=null,p=0,m=null;for(this.width=r,this.height=i;c&&t<e.length;)switch(e[t++]){case 33:switch(e[t++]){case 255:if(11!==e[t]||78==e[t+1]&&69==e[t+2]&&84==e[t+3]&&83==e[t+4]&&67==e[t+5]&&65==e[t+6]&&80==e[t+7]&&69==e[t+8]&&50==e[t+9]&&46==e[t+10]&&48==e[t+11]&&3==e[t+12]&&1==e[t+13]&&0==e[t+16])t+=14,m=e[t++]|e[t++]<<8,t++;else for(t+=12;;){if(!(0<=(C=e[t++])))throw Error("Invalid block size");if(0===C)break;t+=C}break;case 249:if(4!==e[t++]||0!==e[t+4])throw new Error("Invalid graphics extension block.");var v=e[t++];f=e[t++]|e[t++]<<8,d=e[t++],0==(1&v)&&(d=null),p=v>>2&7,t++;break;case 254:for(;;){if(!(0<=(C=e[t++])))throw Error("Invalid block size");if(0===C)break;t+=C}break;default:throw new Error("Unknown graphic control label: 0x"+e[t-1].toString(16))}break;case 44:var g=e[t++]|e[t++]<<8,y=e[t++]|e[t++]<<8,b=e[t++]|e[t++]<<8,_=e[t++]|e[t++]<<8,w=e[t++],x=w>>6&1,S=l,E=u,M=!1;w>>7&&(M=!0,S=t,t+=3*(E=1<<1+(7&w)));var T=t;for(t++;;){var C;if(!(0<=(C=e[t++])))throw Error("Invalid block size");if(0===C)break;t+=C}h.push({x:g,y,width:b,height:_,has_local_palette:M,palette_offset:S,palette_size:E,data_offset:T,data_length:t-T,transparent_index:d,interlaced:!!x,delay:f,disposal:p});break;case 59:c=!1;break;default:throw new Error("Unknown gif block: 0x"+e[t-1].toString(16))}this.numFrames=function(){return h.length},this.loopCount=function(){return m},this.frameInfo=function(e){if(e<0||e>=h.length)throw new Error("Frame index out of range.");return h[e]},this.decodeAndBlitFrameBGRA=function(t,i){var o=this.frameInfo(t),a=o.width*o.height,s=new Uint8Array(a);n(e,o.data_offset,s,a);var l=o.palette_offset,u=o.transparent_index;null===u&&(u=256);var c=o.width,h=r-c,f=c,d=4*(o.y*r+o.x),p=4*((o.y+o.height)*r+o.x),m=d,v=4*h;!0===o.interlaced&&(v+=4*r*7);for(var g=8,y=0,b=s.length;y<b;++y){var _=s[y];if(0===f&&(f=c,p<=(m+=v)&&(v=4*h+4*r*(g-1),m=d+(c+h)*(g<<1),g>>=1)),_===u)m+=4;else{var w=e[l+3*_],x=e[l+3*_+1],S=e[l+3*_+2];i[m++]=S,i[m++]=x,i[m++]=w,i[m++]=255}--f}},this.decodeAndBlitFrameRGBA=function(t,i){var o=this.frameInfo(t),a=o.width*o.height,s=new Uint8Array(a);n(e,o.data_offset,s,a);var l=o.palette_offset,u=o.transparent_index;null===u&&(u=256);var c=o.width,h=r-c,f=c,d=4*(o.y*r+o.x),p=4*((o.y+o.height)*r+o.x),m=d,v=4*h;!0===o.interlaced&&(v+=4*r*7);for(var g=8,y=0,b=s.length;y<b;++y){var _=s[y];if(0===f&&(f=c,p<=(m+=v)&&(v=4*h+4*r*(g-1),m=d+(c+h)*(g<<1),g>>=1)),_===u)m+=4;else{var w=e[l+3*_],x=e[l+3*_+1],S=e[l+3*_+2];i[m++]=w,i[m++]=x,i[m++]=S,i[m++]=255}--f}}}}catch(e){}},{}],12:[function(e,t,r){(function(n){!function(t){"use strict";function r(e){if(null==this)throw TypeError();var t=String(this),r=t.length,n=e?Number(e):0;if(n!=n&&(n=0),!(n<0||r<=n)){var i,o=t.charCodeAt(n);return 55296<=o&&o<=56319&&n+1<r&&56320<=(i=t.charCodeAt(n+1))&&i<=57343?1024*(o-55296)+i-56320+65536:o}}var i;String.prototype.codePointAt||((i=function(){try{var e={},t=Object.defineProperty,r=t(e,e,e)&&t}catch(e){}return r}())?i(String.prototype,"codePointAt",{value:r,configurable:!0,writable:!0}):String.prototype.codePointAt=r);function o(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function a(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new o,this.dtree=new o}var s=new o,l=new o,u=new Uint8Array(30),c=new Uint16Array(30),h=new Uint8Array(30),f=new Uint16Array(30),d=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),p=new o,m=new Uint8Array(320);function v(e,t,r,n){var i,o;for(i=0;i<r;++i)e[i]=0;for(i=0;i<30-r;++i)e[i+r]=i/r|0;for(o=n,i=0;i<30;++i)t[i]=o,o+=1<<e[i]}var g=new Uint16Array(16);function y(e,t,r,n){var i,o;for(i=0;i<16;++i)e.table[i]=0;for(i=0;i<n;++i)e.table[t[r+i]]++;for(i=o=e.table[0]=0;i<16;++i)g[i]=o,o+=e.table[i];for(i=0;i<n;++i)t[r+i]&&(e.trans[g[t[r+i]]++]=i)}function b(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function _(e,t,r){if(!t)return r;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,n+r}function w(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;for(var r=0,n=0,i=0,o=e.tag;n=2*n+(1&o),o>>>=1,++i,r+=t.table[i],0<=(n-=t.table[i]););return e.tag=o,e.bitcount-=i,t.trans[r+n]}function x(e,t,r){var n,i,o,a,s,l;for(n=_(e,5,257),i=_(e,5,1),o=_(e,4,4),a=0;a<19;++a)m[a]=0;for(a=0;a<o;++a){var u=_(e,3,0);m[d[a]]=u}for(y(p,m,0,19),s=0;s<n+i;){var c=w(e,p);switch(c){case 16:var h=m[s-1];for(l=_(e,2,3);l;--l)m[s++]=h;break;case 17:for(l=_(e,3,3);l;--l)m[s++]=0;break;case 18:for(l=_(e,7,11);l;--l)m[s++]=0;break;default:m[s++]=c}}y(t,m,0,n),y(r,m,n,i)}function S(e,t,r){for(;;){var n,i,o,a,s=w(e,t);if(256===s)return 0;if(s<256)e.dest[e.destLen++]=s;else for(n=_(e,u[s-=257],c[s]),i=w(e,r),a=o=e.destLen-_(e,h[i],f[i]);a<o+n;++a)e.dest[e.destLen++]=e.dest[a]}}function E(e){for(var t,r;8<e.bitcount;)e.sourceIndex--,e.bitcount-=8;if((t=256*(t=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return-3;for(e.sourceIndex+=4,r=t;r;--r)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,0}!function(e,t){var r;for(r=0;r<7;++r)e.table[r]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,r=0;r<24;++r)e.trans[r]=256+r;for(r=0;r<144;++r)e.trans[24+r]=r;for(r=0;r<8;++r)e.trans[168+r]=280+r;for(r=0;r<112;++r)e.trans[176+r]=144+r;for(r=0;r<5;++r)t.table[r]=0;for(t.table[5]=32,r=0;r<32;++r)t.trans[r]=r}(s,l),v(u,c,4,3),v(h,f,2,1),u[28]=0,c[28]=258;function M(e,t,r,n,i){return Math.pow(1-i,3)*e+3*Math.pow(1-i,2)*i*t+3*(1-i)*Math.pow(i,2)*r+Math.pow(i,3)*n}function T(){this.x1=Number.NaN,this.y1=Number.NaN,this.x2=Number.NaN,this.y2=Number.NaN}function C(){this.commands=[],this.fill="black",this.stroke=null,this.strokeWidth=1}function L(e){throw new Error(e)}function O(e,t){e||L(t)}T.prototype.isEmpty=function(){return isNaN(this.x1)||isNaN(this.y1)||isNaN(this.x2)||isNaN(this.y2)},T.prototype.addPoint=function(e,t){"number"==typeof e&&((isNaN(this.x1)||isNaN(this.x2))&&(this.x1=e,this.x2=e),e<this.x1&&(this.x1=e),e>this.x2&&(this.x2=e)),"number"==typeof t&&((isNaN(this.y1)||isNaN(this.y2))&&(this.y1=t,this.y2=t),t<this.y1&&(this.y1=t),t>this.y2&&(this.y2=t))},T.prototype.addX=function(e){this.addPoint(e,null)},T.prototype.addY=function(e){this.addPoint(null,e)},T.prototype.addBezier=function(e,t,r,n,i,o,a,s){var l=this,u=[e,t],c=[r,n],h=[i,o],f=[a,s];this.addPoint(e,t),this.addPoint(a,s);for(var d=0;d<=1;d++){var p=6*u[d]-12*c[d]+6*h[d],m=-3*u[d]+9*c[d]-9*h[d]+3*f[d],v=3*c[d]-3*u[d];if(0!=m){var g=Math.pow(p,2)-4*v*m;if(!(g<0)){var y=(-p+Math.sqrt(g))/(2*m);0<y&&y<1&&(0===d&&l.addX(M(u[d],c[d],h[d],f[d],y)),1===d&&l.addY(M(u[d],c[d],h[d],f[d],y)));var b=(-p-Math.sqrt(g))/(2*m);0<b&&b<1&&(0===d&&l.addX(M(u[d],c[d],h[d],f[d],b)),1===d&&l.addY(M(u[d],c[d],h[d],f[d],b)))}}else{if(0==p)continue;var _=-v/p;0<_&&_<1&&(0===d&&l.addX(M(u[d],c[d],h[d],f[d],_)),1===d&&l.addY(M(u[d],c[d],h[d],f[d],_)))}}},T.prototype.addQuad=function(e,t,r,n,i,o){var a=e+2/3*(r-e),s=t+2/3*(n-t),l=a+1/3*(i-e),u=s+1/3*(o-t);this.addBezier(e,t,a,s,l,u,i,o)},C.prototype.moveTo=function(e,t){this.commands.push({type:"M",x:e,y:t})},C.prototype.lineTo=function(e,t){this.commands.push({type:"L",x:e,y:t})},C.prototype.curveTo=C.prototype.bezierCurveTo=function(e,t,r,n,i,o){this.commands.push({type:"C",x1:e,y1:t,x2:r,y2:n,x:i,y:o})},C.prototype.quadTo=C.prototype.quadraticCurveTo=function(e,t,r,n){this.commands.push({type:"Q",x1:e,y1:t,x:r,y:n})},C.prototype.close=C.prototype.closePath=function(){this.commands.push({type:"Z"})},C.prototype.extend=function(e){if(e.commands)e=e.commands;else if(e instanceof T){var t=e;return this.moveTo(t.x1,t.y1),this.lineTo(t.x2,t.y1),this.lineTo(t.x2,t.y2),this.lineTo(t.x1,t.y2),void this.close()}Array.prototype.push.apply(this.commands,e)},C.prototype.getBoundingBox=function(){for(var e=new T,t=0,r=0,n=0,i=0,o=0;o<this.commands.length;o++){var a=this.commands[o];switch(a.type){case"M":e.addPoint(a.x,a.y),t=n=a.x,r=i=a.y;break;case"L":e.addPoint(a.x,a.y),n=a.x,i=a.y;break;case"Q":e.addQuad(n,i,a.x1,a.y1,a.x,a.y),n=a.x,i=a.y;break;case"C":e.addBezier(n,i,a.x1,a.y1,a.x2,a.y2,a.x,a.y),n=a.x,i=a.y;break;case"Z":n=t,i=r;break;default:throw new Error("Unexpected path command "+a.type)}}return e.isEmpty()&&e.addPoint(0,0),e},C.prototype.draw=function(e){e.beginPath();for(var t=0;t<this.commands.length;t+=1){var r=this.commands[t];"M"===r.type?e.moveTo(r.x,r.y):"L"===r.type?e.lineTo(r.x,r.y):"C"===r.type?e.bezierCurveTo(r.x1,r.y1,r.x2,r.y2,r.x,r.y):"Q"===r.type?e.quadraticCurveTo(r.x1,r.y1,r.x,r.y):"Z"===r.type&&e.closePath()}this.fill&&(e.fillStyle=this.fill,e.fill()),this.stroke&&(e.strokeStyle=this.stroke,e.lineWidth=this.strokeWidth,e.stroke())},C.prototype.toPathData=function(e){function t(){for(var t,r=arguments,n="",i=0;i<arguments.length;i+=1){var o=r[i];0<=o&&0<i&&(n+=" "),n+=(t=o,Math.round(t)===t?""+Math.round(t):t.toFixed(e))}return n}e=void 0!==e?e:2;for(var r="",n=0;n<this.commands.length;n+=1){var i=this.commands[n];"M"===i.type?r+="M"+t(i.x,i.y):"L"===i.type?r+="L"+t(i.x,i.y):"C"===i.type?r+="C"+t(i.x1,i.y1,i.x2,i.y2,i.x,i.y):"Q"===i.type?r+="Q"+t(i.x1,i.y1,i.x,i.y):"Z"===i.type&&(r+="Z")}return r},C.prototype.toSVG=function(e){var t='<path d="';return t+=this.toPathData(e),t+='"',this.fill&&"black"!==this.fill&&(null===this.fill?t+=' fill="none"':t+=' fill="'+this.fill+'"'),this.stroke&&(t+=' stroke="'+this.stroke+'" stroke-width="'+this.strokeWidth+'"'),t+"/>"},C.prototype.toDOMElement=function(e){var t=this.toPathData(e),r=document.createElementNS("http://www.w3.org/2000/svg","path");return r.setAttribute("d",t),r};var P={fail:L,argument:O,assert:O},A=2147483648,D={},k={},R={};function I(e){return function(){return e}}k.BYTE=function(e){return P.argument(0<=e&&e<=255,"Byte value should be between 0 and 255."),[e]},R.BYTE=I(1),k.CHAR=function(e){return[e.charCodeAt(0)]},R.CHAR=I(1),k.CHARARRAY=function(e){for(var t=[],r=0;r<e.length;r+=1)t[r]=e.charCodeAt(r);return t},R.CHARARRAY=function(e){return e.length},k.USHORT=function(e){return[e>>8&255,255&e]},R.USHORT=I(2),k.SHORT=function(e){return 32768<=e&&(e=-(65536-e)),[e>>8&255,255&e]},R.SHORT=I(2),k.UINT24=function(e){return[e>>16&255,e>>8&255,255&e]},R.UINT24=I(3),k.ULONG=function(e){return[e>>24&255,e>>16&255,e>>8&255,255&e]},R.ULONG=I(4),k.LONG=function(e){return A<=e&&(e=-(2*A-e)),[e>>24&255,e>>16&255,e>>8&255,255&e]},R.LONG=I(4),k.FIXED=k.ULONG,R.FIXED=R.ULONG,k.FWORD=k.SHORT,R.FWORD=R.SHORT,k.UFWORD=k.USHORT,R.UFWORD=R.USHORT,k.LONGDATETIME=function(e){return[0,0,0,0,e>>24&255,e>>16&255,e>>8&255,255&e]},R.LONGDATETIME=I(8),k.TAG=function(e){return P.argument(4===e.length,"Tag should be exactly 4 ASCII characters."),[e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]},R.TAG=I(4),k.Card8=k.BYTE,R.Card8=R.BYTE,k.Card16=k.USHORT,R.Card16=R.USHORT,k.OffSize=k.BYTE,R.OffSize=R.BYTE,k.SID=k.USHORT,R.SID=R.USHORT,k.NUMBER=function(e){return-107<=e&&e<=107?[e+139]:108<=e&&e<=1131?[247+((e-=108)>>8),255&e]:-1131<=e&&e<=-108?[251+((e=-e-108)>>8),255&e]:-32768<=e&&e<=32767?k.NUMBER16(e):k.NUMBER32(e)},R.NUMBER=function(e){return k.NUMBER(e).length},k.NUMBER16=function(e){return[28,e>>8&255,255&e]},R.NUMBER16=I(3),k.NUMBER32=function(e){return[29,e>>24&255,e>>16&255,e>>8&255,255&e]},R.NUMBER32=I(5),k.REAL=function(e){var t=e.toString(),r=/\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);if(r){var n=parseFloat("1e"+((r[2]?+r[2]:0)+r[1].length));t=(Math.round(e*n)/n).toString()}for(var i="",o=0,a=t.length;o<a;o+=1){var s=t[o];i+="e"===s?"-"===t[++o]?"c":"b":"."===s?"a":"-"===s?"e":s}for(var l=[30],u=0,c=(i+=1&i.length?"f":"ff").length;u<c;u+=2)l.push(parseInt(i.substr(u,2),16));return l},R.REAL=function(e){return k.REAL(e).length},k.NAME=k.CHARARRAY,R.NAME=R.CHARARRAY,k.STRING=k.CHARARRAY,R.STRING=R.CHARARRAY,D.UTF8=function(e,t,r){for(var n=[],i=r,o=0;o<i;o++,t+=1)n[o]=e.getUint8(t);return String.fromCharCode.apply(null,n)},D.UTF16=function(e,t,r){for(var n=[],i=r/2,o=0;o<i;o++,t+=2)n[o]=e.getUint16(t);return String.fromCharCode.apply(null,n)},k.UTF16=function(e){for(var t=[],r=0;r<e.length;r+=1){var n=e.charCodeAt(r);t[t.length]=n>>8&255,t[t.length]=255&n}return t},R.UTF16=function(e){return 2*e.length};var U={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-cyrillic":"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",macintosh:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"};D.MACSTRING=function(e,t,r,n){var i=U[n];if(void 0!==i){for(var o="",a=0;a<r;a++){var s=e.getUint8(t+a);o+=s<=127?String.fromCharCode(s):i[127&s]}return o}};var N,B="function"==typeof WeakMap&&new WeakMap;function F(e){return-128<=e&&e<=127}function G(e,t,r){for(var n=0,i=e.length;t<i&&n<64&&0===e[t];)++t,++n;return r.push(128|n-1),t}function j(e,t,r){for(var n=0,i=e.length,o=t;o<i&&n<64;){var a=e[o];if(!F(a))break;if(0===a&&o+1<i&&0===e[o+1])break;++o,++n}r.push(n-1);for(var s=t;s<o;++s)r.push(e[s]+256&255);return o}function V(e,t,r){for(var n=0,i=e.length,o=t;o<i&&n<64;){var a=e[o];if(0===a)break;if(F(a)&&o+1<i&&F(e[o+1]))break;++o,++n}r.push(64|n-1);for(var s=t;s<o;++s){var l=e[s];r.push(l+65536>>8&255,l+256&255)}return o}k.MACSTRING=function(e,t){var r=function(e){if(!N)for(var t in N={},U)N[t]=new String(t);var r=N[e];if(void 0!==r){if(B){var n=B.get(r);if(void 0!==n)return n}var i=U[e];if(void 0!==i){for(var o={},a=0;a<i.length;a++)o[i.charCodeAt(a)]=a+128;return B&&B.set(r,o),o}}}(t);if(void 0!==r){for(var n=[],i=0;i<e.length;i++){var o=e.charCodeAt(i);if(128<=o&&void 0===(o=r[o]))return;n[i]=o}return n}},R.MACSTRING=function(e,t){var r=k.MACSTRING(e,t);return void 0!==r?r.length:0},k.VARDELTAS=function(e){for(var t=0,r=[];t<e.length;){var n=e[t];t=0===n?G(e,t,r):-128<=n&&n<=127?j(e,t,r):V(e,t,r)}return r},k.INDEX=function(e){for(var t=1,r=[t],n=[],i=0;i<e.length;i+=1){var o=k.OBJECT(e[i]);Array.prototype.push.apply(n,o),t+=o.length,r.push(t)}if(0===n.length)return[0,0];for(var a=[],s=1+Math.floor(Math.log(t)/Math.log(2))/8|0,l=[void 0,k.BYTE,k.USHORT,k.UINT24,k.ULONG][s],u=0;u<r.length;u+=1){var c=l(r[u]);Array.prototype.push.apply(a,c)}return Array.prototype.concat(k.Card16(e.length),k.OffSize(s),a,n)},R.INDEX=function(e){return k.INDEX(e).length},k.DICT=function(e){for(var t=[],r=Object.keys(e),n=r.length,i=0;i<n;i+=1){var o=parseInt(r[i],0),a=e[o];t=(t=t.concat(k.OPERAND(a.value,a.type))).concat(k.OPERATOR(o))}return t},R.DICT=function(e){return k.DICT(e).length},k.OPERATOR=function(e){return e<1200?[e]:[12,e-1200]},k.OPERAND=function(e,t){var r=[];if(Array.isArray(t))for(var n=0;n<t.length;n+=1)P.argument(e.length===t.length,"Not enough arguments given for type"+t),r=r.concat(k.OPERAND(e[n],t[n]));else if("SID"===t)r=r.concat(k.NUMBER(e));else if("offset"===t)r=r.concat(k.NUMBER32(e));else if("number"===t)r=r.concat(k.NUMBER(e));else{if("real"!==t)throw new Error("Unknown operand type "+t);r=r.concat(k.REAL(e))}return r},k.OP=k.BYTE,R.OP=R.BYTE;var z="function"==typeof WeakMap&&new WeakMap;function H(e,t,r){for(var n=0;n<t.length;n+=1){var i=t[n];this[i.name]=i.value}if(this.tableName=e,this.fields=t,r)for(var o=Object.keys(r),a=0;a<o.length;a+=1){var s=o[a],l=r[s];void 0!==this[s]&&(this[s]=l)}}function W(e,t,r){void 0===r&&(r=t.length);var n=new Array(t.length+1);n[0]={name:e+"Count",type:"USHORT",value:r};for(var i=0;i<t.length;i++)n[i+1]={name:e+i,type:"USHORT",value:t[i]};return n}function q(e,t,r){var n=t.length,i=new Array(n+1);i[0]={name:e+"Count",type:"USHORT",value:n};for(var o=0;o<n;o++)i[o+1]={name:e+o,type:"TABLE",value:r(t[o],o)};return i}function X(e,t,r){var n=t.length,i=[];i[0]={name:e+"Count",type:"USHORT",value:n};for(var o=0;o<n;o++)i=i.concat(r(t[o],o));return i}function Y(e){1===e.format?H.call(this,"coverageTable",[{name:"coverageFormat",type:"USHORT",value:1}].concat(W("glyph",e.glyphs))):P.assert(!1,"Can't create coverage table format 2 yet.")}function Z(e){H.call(this,"scriptListTable",X("scriptRecord",e,(function(e,t){var r=e.script,n=r.defaultLangSys;return P.assert(!!n,"Unable to write GSUB: script "+e.tag+" has no default language system."),[{name:"scriptTag"+t,type:"TAG",value:e.tag},{name:"script"+t,type:"TABLE",value:new H("scriptTable",[{name:"defaultLangSys",type:"TABLE",value:new H("defaultLangSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:n.reqFeatureIndex}].concat(W("featureIndex",n.featureIndexes)))}].concat(X("langSys",r.langSysRecords,(function(e,t){var r=e.langSys;return[{name:"langSysTag"+t,type:"TAG",value:e.tag},{name:"langSys"+t,type:"TABLE",value:new H("langSys",[{name:"lookupOrder",type:"USHORT",value:0},{name:"reqFeatureIndex",type:"USHORT",value:r.reqFeatureIndex}].concat(W("featureIndex",r.featureIndexes)))}]}))))}]})))}function Q(e){H.call(this,"featureListTable",X("featureRecord",e,(function(e,t){var r=e.feature;return[{name:"featureTag"+t,type:"TAG",value:e.tag},{name:"feature"+t,type:"TABLE",value:new H("featureTable",[{name:"featureParams",type:"USHORT",value:r.featureParams}].concat(W("lookupListIndex",r.lookupListIndexes)))}]})))}function K(e,t){H.call(this,"lookupListTable",q("lookup",e,(function(e){var r=t[e.lookupType];return P.assert(!!r,"Unable to write GSUB lookup type "+e.lookupType+" tables."),new H("lookupTable",[{name:"lookupType",type:"USHORT",value:e.lookupType},{name:"lookupFlag",type:"USHORT",value:e.lookupFlag}].concat(q("subtable",e.subtables,r)))})))}k.CHARSTRING=function(e){if(z){var t=z.get(e);if(void 0!==t)return t}for(var r=[],n=e.length,i=0;i<n;i+=1){var o=e[i];r=r.concat(k[o.type](o.value))}return z&&z.set(e,r),r},R.CHARSTRING=function(e){return k.CHARSTRING(e).length},k.OBJECT=function(e){var t=k[e.type];return P.argument(void 0!==t,"No encoding function for type "+e.type),t(e.value)},R.OBJECT=function(e){var t=R[e.type];return P.argument(void 0!==t,"No sizeOf function for type "+e.type),t(e.value)},k.TABLE=function(e){for(var t=[],r=e.fields.length,n=[],i=[],o=0;o<r;o+=1){var a=e.fields[o],s=k[a.type];P.argument(void 0!==s,"No encoding function for field type "+a.type+" ("+a.name+")");var l=e[a.name];void 0===l&&(l=a.value);var u=s(l);"TABLE"===a.type?(i.push(t.length),t=t.concat([0,0]),n.push(u)):t=t.concat(u)}for(var c=0;c<n.length;c+=1){var h=i[c],f=t.length;P.argument(f<65536,"Table "+e.tableName+" too big."),t[h]=f>>8,t[h+1]=255&f,t=t.concat(n[c])}return t},R.TABLE=function(e){for(var t=0,r=e.fields.length,n=0;n<r;n+=1){var i=e.fields[n],o=R[i.type];P.argument(void 0!==o,"No sizeOf function for field type "+i.type+" ("+i.name+")");var a=e[i.name];void 0===a&&(a=i.value),t+=o(a),"TABLE"===i.type&&(t+=2)}return t},k.RECORD=k.TABLE,R.RECORD=R.TABLE,k.LITERAL=function(e){return e},R.LITERAL=function(e){return e.length},H.prototype.encode=function(){return k.TABLE(this)},H.prototype.sizeOf=function(){return R.TABLE(this)};var J={Table:H,Record:H,Coverage:(Y.prototype=Object.create(H.prototype)).constructor=Y,ScriptList:(Z.prototype=Object.create(H.prototype)).constructor=Z,FeatureList:(Q.prototype=Object.create(H.prototype)).constructor=Q,LookupList:(K.prototype=Object.create(H.prototype)).constructor=K,ushortList:W,tableList:q,recordList:X};function $(e,t){return e.getUint8(t)}function ee(e,t){return e.getUint16(t,!1)}function te(e,t){return e.getUint32(t,!1)}function re(e,t){return e.getInt16(t,!1)+e.getUint16(t+2,!1)/65535}var ne={byte:1,uShort:2,short:2,uLong:4,fixed:4,longDateTime:8,tag:4};function ie(e,t){this.data=e,this.offset=t,this.relativeOffset=0}ie.prototype.parseByte=function(){var e=this.data.getUint8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},ie.prototype.parseChar=function(){var e=this.data.getInt8(this.offset+this.relativeOffset);return this.relativeOffset+=1,e},ie.prototype.parseCard8=ie.prototype.parseByte,ie.prototype.parseCard16=ie.prototype.parseUShort=function(){var e=this.data.getUint16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},ie.prototype.parseSID=ie.prototype.parseUShort,ie.prototype.parseOffset16=ie.prototype.parseUShort,ie.prototype.parseShort=function(){var e=this.data.getInt16(this.offset+this.relativeOffset);return this.relativeOffset+=2,e},ie.prototype.parseF2Dot14=function(){var e=this.data.getInt16(this.offset+this.relativeOffset)/16384;return this.relativeOffset+=2,e},ie.prototype.parseOffset32=ie.prototype.parseULong=function(){var e=te(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},ie.prototype.parseFixed=function(){var e=re(this.data,this.offset+this.relativeOffset);return this.relativeOffset+=4,e},ie.prototype.parseString=function(e){var t=this.data,r=this.offset+this.relativeOffset,n="";this.relativeOffset+=e;for(var i=0;i<e;i++)n+=String.fromCharCode(t.getUint8(r+i));return n},ie.prototype.parseTag=function(){return this.parseString(4)},ie.prototype.parseLongDateTime=function(){var e=te(this.data,this.offset+this.relativeOffset+4);return e-=2082844800,this.relativeOffset+=8,e},ie.prototype.parseVersion=function(e){var t=ee(this.data,this.offset+this.relativeOffset),r=ee(this.data,this.offset+this.relativeOffset+2);return this.relativeOffset+=4,void 0===e&&(e=4096),t+r/e/10},ie.prototype.skip=function(e,t){void 0===t&&(t=1),this.relativeOffset+=ne[e]*t},ie.prototype.parseULongList=function(e){void 0===e&&(e=this.parseULong());for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,i=0;i<e;i++)t[i]=r.getUint32(n),n+=4;return this.relativeOffset+=4*e,t},ie.prototype.parseOffset16List=ie.prototype.parseUShortList=function(e){void 0===e&&(e=this.parseUShort());for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,i=0;i<e;i++)t[i]=r.getUint16(n),n+=2;return this.relativeOffset+=2*e,t},ie.prototype.parseShortList=function(e){for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,i=0;i<e;i++)t[i]=r.getInt16(n),n+=2;return this.relativeOffset+=2*e,t},ie.prototype.parseByteList=function(e){for(var t=new Array(e),r=this.data,n=this.offset+this.relativeOffset,i=0;i<e;i++)t[i]=r.getUint8(n++);return this.relativeOffset+=e,t},ie.prototype.parseList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),n=0;n<e;n++)r[n]=t.call(this);return r},ie.prototype.parseList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),n=0;n<e;n++)r[n]=t.call(this);return r},ie.prototype.parseRecordList=function(e,t){t||(t=e,e=this.parseUShort());for(var r=new Array(e),n=Object.keys(t),i=0;i<e;i++){for(var o={},a=0;a<n.length;a++){var s=n[a],l=t[s];o[s]=l.call(this)}r[i]=o}return r},ie.prototype.parseRecordList32=function(e,t){t||(t=e,e=this.parseULong());for(var r=new Array(e),n=Object.keys(t),i=0;i<e;i++){for(var o={},a=0;a<n.length;a++){var s=n[a],l=t[s];o[s]=l.call(this)}r[i]=o}return r},ie.prototype.parseStruct=function(e){if("function"==typeof e)return e.call(this);for(var t=Object.keys(e),r={},n=0;n<t.length;n++){var i=t[n],o=e[i];r[i]=o.call(this)}return r},ie.prototype.parseValueRecord=function(e){if(void 0===e&&(e=this.parseUShort()),0!==e){var t={};return 1&e&&(t.xPlacement=this.parseShort()),2&e&&(t.yPlacement=this.parseShort()),4&e&&(t.xAdvance=this.parseShort()),8&e&&(t.yAdvance=this.parseShort()),16&e&&(t.xPlaDevice=void 0,this.parseShort()),32&e&&(t.yPlaDevice=void 0,this.parseShort()),64&e&&(t.xAdvDevice=void 0,this.parseShort()),128&e&&(t.yAdvDevice=void 0,this.parseShort()),t}},ie.prototype.parseValueRecordList=function(){for(var e=this.parseUShort(),t=this.parseUShort(),r=new Array(t),n=0;n<t;n++)r[n]=this.parseValueRecord(e);return r},ie.prototype.parsePointer=function(e){var t=this.parseOffset16();if(0<t)return new ie(this.data,this.offset+t).parseStruct(e)},ie.prototype.parsePointer32=function(e){var t=this.parseOffset32();if(0<t)return new ie(this.data,this.offset+t).parseStruct(e)},ie.prototype.parseListOfLists=function(e){for(var t=this,r=this.parseOffset16List(),n=r.length,i=this.relativeOffset,o=new Array(n),a=0;a<n;a++){var s=r[a];if(0!==s)if(t.relativeOffset=s,e){for(var l=t.parseOffset16List(),u=new Array(l.length),c=0;c<l.length;c++)t.relativeOffset=s+l[c],u[c]=e.call(t);o[a]=u}else o[a]=t.parseUShortList();else o[a]=void 0}return this.relativeOffset=i,o},ie.prototype.parseCoverage=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort(),r=this.parseUShort();if(1===t)return{format:1,glyphs:this.parseUShortList(r)};if(2!==t)throw new Error("0x"+e.toString(16)+": Coverage format must be 1 or 2.");for(var n=new Array(r),i=0;i<r;i++)n[i]={start:this.parseUShort(),end:this.parseUShort(),index:this.parseUShort()};return{format:2,ranges:n}},ie.prototype.parseClassDef=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{format:1,startGlyph:this.parseUShort(),classes:this.parseUShortList()};if(2===t)return{format:2,ranges:this.parseRecordList({start:ie.uShort,end:ie.uShort,classId:ie.uShort})};throw new Error("0x"+e.toString(16)+": ClassDef format must be 1 or 2.")},ie.list=function(e,t){return function(){return this.parseList(e,t)}},ie.list32=function(e,t){return function(){return this.parseList32(e,t)}},ie.recordList=function(e,t){return function(){return this.parseRecordList(e,t)}},ie.recordList32=function(e,t){return function(){return this.parseRecordList32(e,t)}},ie.pointer=function(e){return function(){return this.parsePointer(e)}},ie.pointer32=function(e){return function(){return this.parsePointer32(e)}},ie.tag=ie.prototype.parseTag,ie.byte=ie.prototype.parseByte,ie.uShort=ie.offset16=ie.prototype.parseUShort,ie.uShortList=ie.prototype.parseUShortList,ie.uLong=ie.offset32=ie.prototype.parseULong,ie.uLongList=ie.prototype.parseULongList,ie.struct=ie.prototype.parseStruct,ie.coverage=ie.prototype.parseCoverage,ie.classDef=ie.prototype.parseClassDef;var oe={reserved:ie.uShort,reqFeatureIndex:ie.uShort,featureIndexes:ie.uShortList};ie.prototype.parseScriptList=function(){return this.parsePointer(ie.recordList({tag:ie.tag,script:ie.pointer({defaultLangSys:ie.pointer(oe),langSysRecords:ie.recordList({tag:ie.tag,langSys:ie.pointer(oe)})})}))||[]},ie.prototype.parseFeatureList=function(){return this.parsePointer(ie.recordList({tag:ie.tag,feature:ie.pointer({featureParams:ie.offset16,lookupListIndexes:ie.uShortList})}))||[]},ie.prototype.parseLookupList=function(e){return this.parsePointer(ie.list(ie.pointer((function(){var t=this.parseUShort();P.argument(1<=t&&t<=9,"GPOS/GSUB lookup type "+t+" unknown.");var r=this.parseUShort(),n=16&r;return{lookupType:t,lookupFlag:r,subtables:this.parseList(ie.pointer(e[t])),markFilteringSet:n?this.parseUShort():void 0}}))))||[]},ie.prototype.parseFeatureVariationsList=function(){return this.parsePointer32((function(){var e=this.parseUShort(),t=this.parseUShort();return P.argument(1===e&&t<1,"GPOS/GSUB feature variations table unknown."),this.parseRecordList32({conditionSetOffset:ie.offset32,featureTableSubstitutionOffset:ie.offset32})}))||[]};var ae={getByte:$,getCard8:$,getUShort:ee,getCard16:ee,getShort:function(e,t){return e.getInt16(t,!1)},getULong:te,getFixed:re,getTag:function(e,t){for(var r="",n=t;n<t+4;n+=1)r+=String.fromCharCode(e.getInt8(n));return r},getOffset:function(e,t,r){for(var n=0,i=0;i<r;i+=1)n<<=8,n+=e.getUint8(t+i);return n},getBytes:function(e,t,r){for(var n=[],i=t;i<r;i+=1)n.push(e.getUint8(i));return n},bytesToString:function(e){for(var t="",r=0;r<e.length;r+=1)t+=String.fromCharCode(e[r]);return t},Parser:ie},se=function(e,t){var r={};r.version=ae.getUShort(e,t),P.argument(0===r.version,"cmap table version should be 0."),r.numTables=ae.getUShort(e,t+2);for(var n=-1,i=r.numTables-1;0<=i;--i){var o=ae.getUShort(e,t+4+8*i),a=ae.getUShort(e,t+4+8*i+2);if(3===o&&(0===a||1===a||10===a)||0===o&&(0===a||1===a||2===a||3===a||4===a)){n=ae.getULong(e,t+4+8*i+4);break}}if(-1===n)throw new Error("No valid cmap sub-tables found.");var s=new ae.Parser(e,t+n);if(r.format=s.parseUShort(),12===r.format)!function(e,t){var r;t.parseUShort(),e.length=t.parseULong(),e.language=t.parseULong(),e.groupCount=r=t.parseULong(),e.glyphIndexMap={};for(var n=0;n<r;n+=1)for(var i=t.parseULong(),o=t.parseULong(),a=t.parseULong(),s=i;s<=o;s+=1)e.glyphIndexMap[s]=a,a++}(r,s);else{if(4!==r.format)throw new Error("Only format 4 and 12 cmap tables are supported (found format "+r.format+").");!function(e,t,r,n,i){var o;e.length=t.parseUShort(),e.language=t.parseUShort(),e.segCount=o=t.parseUShort()>>1,t.skip("uShort",3),e.glyphIndexMap={};for(var a=new ae.Parser(r,n+i+14),s=new ae.Parser(r,n+i+16+2*o),l=new ae.Parser(r,n+i+16+4*o),u=new ae.Parser(r,n+i+16+6*o),c=n+i+16+8*o,h=0;h<o-1;h+=1)for(var f=void 0,d=a.parseUShort(),p=s.parseUShort(),m=l.parseShort(),v=u.parseUShort(),g=p;g<=d;g+=1)0!==v?(c=u.offset+u.relativeOffset-2,c+=v,c+=2*(g-p),0!==(f=ae.getUShort(r,c))&&(f=f+m&65535)):f=g+m&65535,e.glyphIndexMap[g]=f}(r,s,e,t,n)}return r},le=function(e){var t,r=!0;for(t=e.length-1;0<t;--t)if(65535<e.get(t).unicode){console.log("Adding CMAP format 12 (needed!)"),r=!1;break}var n=[{name:"version",type:"USHORT",value:0},{name:"numTables",type:"USHORT",value:r?1:2},{name:"platformID",type:"USHORT",value:3},{name:"encodingID",type:"USHORT",value:1},{name:"offset",type:"ULONG",value:r?12:20}];r||(n=n.concat([{name:"cmap12PlatformID",type:"USHORT",value:3},{name:"cmap12EncodingID",type:"USHORT",value:10},{name:"cmap12Offset",type:"ULONG",value:0}])),n=n.concat([{name:"format",type:"USHORT",value:4},{name:"cmap4Length",type:"USHORT",value:0},{name:"language",type:"USHORT",value:0},{name:"segCountX2",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);var i,o,a,s=new J.Table("cmap",n);for(s.segments=[],t=0;t<e.length;t+=1){for(var l=e.get(t),u=0;u<l.unicodes.length;u+=1)i=s,o=l.unicodes[u],a=t,i.segments.push({end:o,start:o,delta:-(o-a),offset:0,glyphIndex:a});s.segments=s.segments.sort((function(e,t){return e.start-t.start}))}s.segments.push({end:65535,start:65535,delta:1,offset:0});var c=s.segments.length,h=0,f=[],d=[],p=[],m=[],v=[],g=[];for(t=0;t<c;t+=1){var y=s.segments[t];y.end<=65535&&y.start<=65535?(f=f.concat({name:"end_"+t,type:"USHORT",value:y.end}),d=d.concat({name:"start_"+t,type:"USHORT",value:y.start}),p=p.concat({name:"idDelta_"+t,type:"SHORT",value:y.delta}),m=m.concat({name:"idRangeOffset_"+t,type:"USHORT",value:y.offset}),void 0!==y.glyphId&&(v=v.concat({name:"glyph_"+t,type:"USHORT",value:y.glyphId}))):h+=1,r||void 0===y.glyphIndex||(g=(g=(g=g.concat({name:"cmap12Start_"+t,type:"ULONG",value:y.start})).concat({name:"cmap12End_"+t,type:"ULONG",value:y.end})).concat({name:"cmap12Glyph_"+t,type:"ULONG",value:y.glyphIndex}))}if(s.segCountX2=2*(c-h),s.searchRange=2*Math.pow(2,Math.floor(Math.log(c-h)/Math.log(2))),s.entrySelector=Math.log(s.searchRange/2)/Math.log(2),s.rangeShift=s.segCountX2-s.searchRange,s.fields=s.fields.concat(f),s.fields.push({name:"reservedPad",type:"USHORT",value:0}),s.fields=s.fields.concat(d),s.fields=s.fields.concat(p),s.fields=s.fields.concat(m),s.fields=s.fields.concat(v),s.cmap4Length=14+2*f.length+2+2*d.length+2*p.length+2*m.length+2*v.length,!r){var b=16+4*g.length;s.cmap12Offset=20+s.cmap4Length,s.fields=s.fields.concat([{name:"cmap12Format",type:"USHORT",value:12},{name:"cmap12Reserved",type:"USHORT",value:0},{name:"cmap12Length",type:"ULONG",value:b},{name:"cmap12Language",type:"ULONG",value:0},{name:"cmap12nGroups",type:"ULONG",value:g.length/3}]),s.fields=s.fields.concat(g)}return s},ue=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","266 ff","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],ce=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],he=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],fe=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];function de(e){this.font=e}function pe(e){this.cmap=e}function me(e,t){this.encoding=e,this.charset=t}function ve(e){switch(e.version){case 1:this.names=fe.slice();break;case 2:this.names=new Array(e.numberOfGlyphs);for(var t=0;t<e.numberOfGlyphs;t++)e.glyphNameIndex[t]<fe.length?this.names[t]=fe[e.glyphNameIndex[t]]:this.names[t]=e.names[e.glyphNameIndex[t]-fe.length];break;case 2.5:this.names=new Array(e.numberOfGlyphs);for(var r=0;r<e.numberOfGlyphs;r++)this.names[r]=fe[r+e.glyphNameIndex[r]];break;case 3:default:this.names=[]}}de.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.font.glyphs;if(r)for(var n=0;n<r.length;n+=1)for(var i=r.get(n),o=0;o<i.unicodes.length;o+=1)if(i.unicodes[o]===t)return n;return null},pe.prototype.charToGlyphIndex=function(e){return this.cmap.glyphIndexMap[e.codePointAt(0)]||0},me.prototype.charToGlyphIndex=function(e){var t=e.codePointAt(0),r=this.encoding[t];return this.charset.indexOf(r)},ve.prototype.nameToGlyphIndex=function(e){return this.names.indexOf(e)},ve.prototype.glyphIndexToName=function(e){return this.names[e]};var ge=function(e,t,r,n,i){e.beginPath(),e.moveTo(t,r),e.lineTo(n,i),e.stroke()};function ye(e){this.bindConstructorValues(e)}function be(e,t,r){Object.defineProperty(e,t,{get:function(){return e.path,e[r]},set:function(t){e[r]=t},enumerable:!0,configurable:!0})}function _e(e,t){if(this.font=e,this.glyphs={},Array.isArray(t))for(var r=0;r<t.length;r++)this.glyphs[r]=t[r];this.length=t&&t.length||0}ye.prototype.bindConstructorValues=function(e){var t,r;this.index=e.index||0,this.name=e.name||null,this.unicode=e.unicode||void 0,this.unicodes=e.unicodes||void 0!==e.unicode?[e.unicode]:[],e.xMin&&(this.xMin=e.xMin),e.yMin&&(this.yMin=e.yMin),e.xMax&&(this.xMax=e.xMax),e.yMax&&(this.yMax=e.yMax),e.advanceWidth&&(this.advanceWidth=e.advanceWidth),Object.defineProperty(this,"path",(t=e.path,r=t||new C,{configurable:!0,get:function(){return"function"==typeof r&&(r=r()),r},set:function(e){r=e}}))},ye.prototype.addUnicode=function(e){0===this.unicodes.length&&(this.unicode=e),this.unicodes.push(e)},ye.prototype.getBoundingBox=function(){return this.path.getBoundingBox()},ye.prototype.getPath=function(e,t,r,n,i){var o,a;e=void 0!==e?e:0,t=void 0!==t?t:0,r=void 0!==r?r:72;var s=(n=n||{}).xScale,l=n.yScale;if(n.hinting&&i&&i.hinting&&(a=this.path&&i.hinting.exec(this,r)),a)o=i.hinting.getCommands(a),e=Math.round(e),t=Math.round(t),s=l=1;else{o=this.path.commands;var u=1/this.path.unitsPerEm*r;void 0===s&&(s=u),void 0===l&&(l=u)}for(var c=new C,h=0;h<o.length;h+=1){var f=o[h];"M"===f.type?c.moveTo(e+f.x*s,t+-f.y*l):"L"===f.type?c.lineTo(e+f.x*s,t+-f.y*l):"Q"===f.type?c.quadraticCurveTo(e+f.x1*s,t+-f.y1*l,e+f.x*s,t+-f.y*l):"C"===f.type?c.curveTo(e+f.x1*s,t+-f.y1*l,e+f.x2*s,t+-f.y2*l,e+f.x*s,t+-f.y*l):"Z"===f.type&&c.closePath()}return c},ye.prototype.getContours=function(){if(void 0===this.points)return[];for(var e=[],t=[],r=0;r<this.points.length;r+=1){var n=this.points[r];t.push(n),n.lastPointOfContour&&(e.push(t),t=[])}return P.argument(0===t.length,"There are still points left in the current contour."),e},ye.prototype.getMetrics=function(){for(var e=this.path.commands,t=[],r=[],n=0;n<e.length;n+=1){var i=e[n];"Z"!==i.type&&(t.push(i.x),r.push(i.y)),"Q"!==i.type&&"C"!==i.type||(t.push(i.x1),r.push(i.y1)),"C"===i.type&&(t.push(i.x2),r.push(i.y2))}var o={xMin:Math.min.apply(null,t),yMin:Math.min.apply(null,r),xMax:Math.max.apply(null,t),yMax:Math.max.apply(null,r),leftSideBearing:this.leftSideBearing};return isFinite(o.xMin)||(o.xMin=0),isFinite(o.xMax)||(o.xMax=this.advanceWidth),isFinite(o.yMin)||(o.yMin=0),isFinite(o.yMax)||(o.yMax=0),o.rightSideBearing=this.advanceWidth-o.leftSideBearing-(o.xMax-o.xMin),o},ye.prototype.draw=function(e,t,r,n,i){this.getPath(t,r,n,i).draw(e)},ye.prototype.drawPoints=function(e,t,r,n){function i(t,r,n,i){var o=2*Math.PI;e.beginPath();for(var a=0;a<t.length;a+=1)e.moveTo(r+t[a].x*i,n+t[a].y*i),e.arc(r+t[a].x*i,n+t[a].y*i,2,0,o,!1);e.closePath(),e.fill()}t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:24;for(var o=1/this.path.unitsPerEm*n,a=[],s=[],l=this.path,u=0;u<l.commands.length;u+=1){var c=l.commands[u];void 0!==c.x&&a.push({x:c.x,y:-c.y}),void 0!==c.x1&&s.push({x:c.x1,y:-c.y1}),void 0!==c.x2&&s.push({x:c.x2,y:-c.y2})}e.fillStyle="blue",i(a,t,r,o),e.fillStyle="red",i(s,t,r,o)},ye.prototype.drawMetrics=function(e,t,r,n){var i;t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:24,i=1/this.path.unitsPerEm*n,e.lineWidth=1,e.strokeStyle="black",ge(e,t,-1e4,t,1e4),ge(e,-1e4,r,1e4,r);var o=this.xMin||0,a=this.yMin||0,s=this.xMax||0,l=this.yMax||0,u=this.advanceWidth||0;e.strokeStyle="blue",ge(e,t+o*i,-1e4,t+o*i,1e4),ge(e,t+s*i,-1e4,t+s*i,1e4),ge(e,-1e4,r+-a*i,1e4,r+-a*i),ge(e,-1e4,r+-l*i,1e4,r+-l*i),e.strokeStyle="green",ge(e,t+u*i,-1e4,t+u*i,1e4)},_e.prototype.get=function(e){return"function"==typeof this.glyphs[e]&&(this.glyphs[e]=this.glyphs[e]()),this.glyphs[e]},_e.prototype.push=function(e,t){this.glyphs[e]=t,this.length++};var we={GlyphSet:_e,glyphLoader:function(e,t){return new ye({index:t,font:e})},ttfGlyphLoader:function(e,t,r,n,i,o){return function(){var a=new ye({index:t,font:e});return a.path=function(){r(a,n,i);var t=o(e.glyphs,a);return t.unitsPerEm=e.unitsPerEm,t},be(a,"xMin","_xMin"),be(a,"xMax","_xMax"),be(a,"yMin","_yMin"),be(a,"yMax","_yMax"),a}},cffGlyphLoader:function(e,t,r,n){return function(){var i=new ye({index:t,font:e});return i.path=function(){var t=r(e,i,n);return t.unitsPerEm=e.unitsPerEm,t},i}}};function xe(e,t){if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r+=1)if(!xe(e[r],t[r]))return!1;return!0}return!1}function Se(e){return e.length<1240?107:e.length<33900?1131:32768}function Ee(e,t,r){var n,i,o=[],a=[],s=ae.getCard16(e,t);if(0!==s){var l=ae.getByte(e,t+2);n=t+(s+1)*l+2;for(var u=t+3,c=0;c<s+1;c+=1)o.push(ae.getOffset(e,u,l)),u+=l;i=n+o[s]}else i=t+2;for(var h=0;h<o.length-1;h+=1){var f=ae.getBytes(e,n+o[h],n+o[h+1]);r&&(f=r(f)),a.push(f)}return{objects:a,startOffset:t,endOffset:i}}function Me(e,t){if(28===t)return e.parseByte()<<8|e.parseByte();if(29===t)return e.parseByte()<<24|e.parseByte()<<16|e.parseByte()<<8|e.parseByte();if(30===t)return function(e){for(var t="",r=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"];;){var n=e.parseByte(),i=n>>4,o=15&n;if(15==i)break;if(t+=r[i],15==o)break;t+=r[o]}return parseFloat(t)}(e);if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.parseByte()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.parseByte()-108;throw new Error("Invalid b0 "+t)}function Te(e,t,r){t=void 0!==t?t:0;var n=new ae.Parser(e,t),i=[],o=[];for(r=void 0!==r?r:e.length;n.relativeOffset<r;){var a=n.parseByte();a<=21?(12===a&&(a=1200+n.parseByte()),i.push([a,o]),o=[]):o.push(Me(n,a))}return function(e){for(var t={},r=0;r<e.length;r+=1){var n,i=e[r][0],o=e[r][1];if(n=1===o.length?o[0]:o,t.hasOwnProperty(i)&&!isNaN(t[i]))throw new Error("Object "+t+" already has key "+i);t[i]=n}return t}(i)}function Ce(e,t){return t<=390?ue[t]:e[t-391]}function Le(e,t,r){for(var n,i={},o=0;o<t.length;o+=1){var a=t[o];if(Array.isArray(a.type)){var s=[];s.length=a.type.length;for(var l=0;l<a.type.length;l++)void 0===(n=void 0!==e[a.op]?e[a.op][l]:void 0)&&(n=void 0!==a.value&&void 0!==a.value[l]?a.value[l]:null),"SID"===a.type[l]&&(n=Ce(r,n)),s[l]=n;i[a.name]=s}else void 0===(n=e[a.op])&&(n=void 0!==a.value?a.value:null),"SID"===a.type&&(n=Ce(r,n)),i[a.name]=n}return i}var Oe=[{name:"version",op:0,type:"SID"},{name:"notice",op:1,type:"SID"},{name:"copyright",op:1200,type:"SID"},{name:"fullName",op:2,type:"SID"},{name:"familyName",op:3,type:"SID"},{name:"weight",op:4,type:"SID"},{name:"isFixedPitch",op:1201,type:"number",value:0},{name:"italicAngle",op:1202,type:"number",value:0},{name:"underlinePosition",op:1203,type:"number",value:-100},{name:"underlineThickness",op:1204,type:"number",value:50},{name:"paintType",op:1205,type:"number",value:0},{name:"charstringType",op:1206,type:"number",value:2},{name:"fontMatrix",op:1207,type:["real","real","real","real","real","real"],value:[.001,0,0,.001,0,0]},{name:"uniqueId",op:13,type:"number"},{name:"fontBBox",op:5,type:["number","number","number","number"],value:[0,0,0,0]},{name:"strokeWidth",op:1208,type:"number",value:0},{name:"xuid",op:14,type:[],value:null},{name:"charset",op:15,type:"offset",value:0},{name:"encoding",op:16,type:"offset",value:0},{name:"charStrings",op:17,type:"offset",value:0},{name:"private",op:18,type:["number","offset"],value:[0,0]},{name:"ros",op:1230,type:["SID","SID","number"]},{name:"cidFontVersion",op:1231,type:"number",value:0},{name:"cidFontRevision",op:1232,type:"number",value:0},{name:"cidFontType",op:1233,type:"number",value:0},{name:"cidCount",op:1234,type:"number",value:8720},{name:"uidBase",op:1235,type:"number"},{name:"fdArray",op:1236,type:"offset"},{name:"fdSelect",op:1237,type:"offset"},{name:"fontName",op:1238,type:"SID"}],Pe=[{name:"subrs",op:19,type:"offset",value:0},{name:"defaultWidthX",op:20,type:"number",value:0},{name:"nominalWidthX",op:21,type:"number",value:0}];function Ae(e,t,r,n){return Le(Te(e,t,r),Pe,n)}function De(e,t,r,n){for(var i,o,a=[],s=0;s<r.length;s+=1){var l=(o=n,Le(Te(i=new DataView(new Uint8Array(r[s]).buffer),0,i.byteLength),Oe,o));l._subrs=[],l._subrsBias=0;var u=l.private[0],c=l.private[1];if(0!==u&&0!==c){var h=Ae(e,c+t,u,n);if(l._defaultWidthX=h.defaultWidthX,l._nominalWidthX=h.nominalWidthX,0!==h.subrs){var f=Ee(e,c+h.subrs+t);l._subrs=f.objects,l._subrsBias=Se(l._subrs)}l._privateDict=h}a.push(l)}return a}function ke(e,t,r){var n,i,o,a,s,l,u,c,h=new C,f=[],d=0,p=!1,m=!1,v=0,g=0;if(e.isCIDFont){var y=e.tables.cff.topDict._fdSelect[t.index],b=e.tables.cff.topDict._fdArray[y];s=b._subrs,l=b._subrsBias,u=b._defaultWidthX,c=b._nominalWidthX}else s=e.tables.cff.topDict._subrs,l=e.tables.cff.topDict._subrsBias,u=e.tables.cff.topDict._defaultWidthX,c=e.tables.cff.topDict._nominalWidthX;var _=u;function w(e,t){m&&h.closePath(),h.moveTo(e,t),m=!0}function x(){f.length%2==0||p||(_=f.shift()+c),d+=f.length>>1,f.length=0,p=!0}return function r(u){for(var y,b,S,E,M,T,C,L,O,P,A,D,k=0;k<u.length;){var R=u[k];switch(k+=1,R){case 1:case 3:x();break;case 4:1<f.length&&!p&&(_=f.shift()+c,p=!0),g+=f.pop(),w(v,g);break;case 5:for(;0<f.length;)v+=f.shift(),g+=f.shift(),h.lineTo(v,g);break;case 6:for(;0<f.length&&(v+=f.shift(),h.lineTo(v,g),0!==f.length);)g+=f.shift(),h.lineTo(v,g);break;case 7:for(;0<f.length&&(g+=f.shift(),h.lineTo(v,g),0!==f.length);)v+=f.shift(),h.lineTo(v,g);break;case 8:for(;0<f.length;)n=v+f.shift(),i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),v=o+f.shift(),g=a+f.shift(),h.curveTo(n,i,o,a,v,g);break;case 10:M=f.pop()+l,(T=s[M])&&r(T);break;case 11:return;case 12:switch(R=u[k],k+=1,R){case 35:n=v+f.shift(),i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),C=o+f.shift(),L=a+f.shift(),O=C+f.shift(),P=L+f.shift(),A=O+f.shift(),D=P+f.shift(),v=A+f.shift(),g=D+f.shift(),f.shift(),h.curveTo(n,i,o,a,C,L),h.curveTo(O,P,A,D,v,g);break;case 34:n=v+f.shift(),i=g,o=n+f.shift(),a=i+f.shift(),C=o+f.shift(),L=a,O=C+f.shift(),P=a,A=O+f.shift(),D=g,v=A+f.shift(),h.curveTo(n,i,o,a,C,L),h.curveTo(O,P,A,D,v,g);break;case 36:n=v+f.shift(),i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),C=o+f.shift(),L=a,O=C+f.shift(),P=a,A=O+f.shift(),D=P+f.shift(),v=A+f.shift(),h.curveTo(n,i,o,a,C,L),h.curveTo(O,P,A,D,v,g);break;case 37:n=v+f.shift(),i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),C=o+f.shift(),L=a+f.shift(),O=C+f.shift(),P=L+f.shift(),A=O+f.shift(),D=P+f.shift(),Math.abs(A-v)>Math.abs(D-g)?v=A+f.shift():g=D+f.shift(),h.curveTo(n,i,o,a,C,L),h.curveTo(O,P,A,D,v,g);break;default:console.log("Glyph "+t.index+": unknown operator 1200"+R),f.length=0}break;case 14:0<f.length&&!p&&(_=f.shift()+c,p=!0),m&&(h.closePath(),m=!1);break;case 18:x();break;case 19:case 20:x(),k+=d+7>>3;break;case 21:2<f.length&&!p&&(_=f.shift()+c,p=!0),g+=f.pop(),w(v+=f.pop(),g);break;case 22:1<f.length&&!p&&(_=f.shift()+c,p=!0),w(v+=f.pop(),g);break;case 23:x();break;case 24:for(;2<f.length;)n=v+f.shift(),i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),v=o+f.shift(),g=a+f.shift(),h.curveTo(n,i,o,a,v,g);v+=f.shift(),g+=f.shift(),h.lineTo(v,g);break;case 25:for(;6<f.length;)v+=f.shift(),g+=f.shift(),h.lineTo(v,g);n=v+f.shift(),i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),v=o+f.shift(),g=a+f.shift(),h.curveTo(n,i,o,a,v,g);break;case 26:for(f.length%2&&(v+=f.shift());0<f.length;)n=v,i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),v=o,g=a+f.shift(),h.curveTo(n,i,o,a,v,g);break;case 27:for(f.length%2&&(g+=f.shift());0<f.length;)n=v+f.shift(),i=g,o=n+f.shift(),a=i+f.shift(),v=o+f.shift(),g=a,h.curveTo(n,i,o,a,v,g);break;case 28:y=u[k],b=u[k+1],f.push((y<<24|b<<16)>>16),k+=2;break;case 29:M=f.pop()+e.gsubrsBias,(T=e.gsubrs[M])&&r(T);break;case 30:for(;0<f.length&&(n=v,i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),v=o+f.shift(),g=a+(1===f.length?f.shift():0),h.curveTo(n,i,o,a,v,g),0!==f.length);)n=v+f.shift(),i=g,o=n+f.shift(),a=i+f.shift(),g=a+f.shift(),v=o+(1===f.length?f.shift():0),h.curveTo(n,i,o,a,v,g);break;case 31:for(;0<f.length&&(n=v+f.shift(),i=g,o=n+f.shift(),a=i+f.shift(),g=a+f.shift(),v=o+(1===f.length?f.shift():0),h.curveTo(n,i,o,a,v,g),0!==f.length);)n=v,i=g+f.shift(),o=n+f.shift(),a=i+f.shift(),v=o+f.shift(),g=a+(1===f.length?f.shift():0),h.curveTo(n,i,o,a,v,g);break;default:R<32?console.log("Glyph "+t.index+": unknown operator "+R):R<247?f.push(R-139):R<251?(y=u[k],k+=1,f.push(256*(R-247)+y+108)):R<255?(y=u[k],k+=1,f.push(256*-(R-251)-y-108)):(y=u[k],b=u[k+1],S=u[k+2],E=u[k+3],k+=4,f.push((y<<24|b<<16|S<<8|E)/65536))}}}(r),t.advanceWidth=_,h}function Re(e,t){var r,n=ue.indexOf(e);return 0<=n&&(r=n),0<=(n=t.indexOf(e))?r=n+ue.length:(r=ue.length+t.length,t.push(e)),r}function Ie(e,t,r){for(var n={},i=0;i<e.length;i+=1){var o=e[i],a=t[o.name];void 0===a||xe(a,o.value)||("SID"===o.type&&(a=Re(a,r)),n[o.op]={name:o.name,type:o.type,value:a})}return n}function Ue(e,t){var r=new J.Record("Top DICT",[{name:"dict",type:"DICT",value:{}}]);return r.dict=Ie(Oe,e,t),r}function Ne(e){var t=new J.Record("Top DICT INDEX",[{name:"topDicts",type:"INDEX",value:[]}]);return t.topDicts=[{name:"topDict_0",type:"TABLE",value:e}],t}function Be(e){var t=[],r=e.path;t.push({name:"width",type:"NUMBER",value:e.advanceWidth});for(var n=0,i=0,o=0;o<r.commands.length;o+=1){var a=void 0,s=void 0,l=r.commands[o];if("Q"===l.type&&(l={type:"C",x:l.x,y:l.y,x1:1/3*n+2/3*l.x1,y1:1/3*i+2/3*l.y1,x2:1/3*l.x+2/3*l.x1,y2:1/3*l.y+2/3*l.y1}),"M"===l.type)a=Math.round(l.x-n),s=Math.round(l.y-i),t.push({name:"dx",type:"NUMBER",value:a}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rmoveto",type:"OP",value:21}),n=Math.round(l.x),i=Math.round(l.y);else if("L"===l.type)a=Math.round(l.x-n),s=Math.round(l.y-i),t.push({name:"dx",type:"NUMBER",value:a}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rlineto",type:"OP",value:5}),n=Math.round(l.x),i=Math.round(l.y);else if("C"===l.type){var u=Math.round(l.x1-n),c=Math.round(l.y1-i),h=Math.round(l.x2-l.x1),f=Math.round(l.y2-l.y1);a=Math.round(l.x-l.x2),s=Math.round(l.y-l.y2),t.push({name:"dx1",type:"NUMBER",value:u}),t.push({name:"dy1",type:"NUMBER",value:c}),t.push({name:"dx2",type:"NUMBER",value:h}),t.push({name:"dy2",type:"NUMBER",value:f}),t.push({name:"dx",type:"NUMBER",value:a}),t.push({name:"dy",type:"NUMBER",value:s}),t.push({name:"rrcurveto",type:"OP",value:8}),n=Math.round(l.x),i=Math.round(l.y)}}return t.push({name:"endchar",type:"OP",value:14}),t}var Fe=function(e,t,r){r.tables.cff={};var n,i,o,a=Ee(e,(n=e,i=t,(o={}).formatMajor=ae.getCard8(n,i),o.formatMinor=ae.getCard8(n,i+1),o.size=ae.getCard8(n,i+2),o.offsetSize=ae.getCard8(n,i+3),o.startOffset=i,o.endOffset=i+4,o).endOffset,ae.bytesToString),s=Ee(e,a.endOffset),l=Ee(e,s.endOffset,ae.bytesToString),u=Ee(e,l.endOffset);r.gsubrs=u.objects,r.gsubrsBias=Se(r.gsubrs);var c=De(e,t,s.objects,l.objects);if(1!==c.length)throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = "+c.length);var h=c[0];if((r.tables.cff.topDict=h)._privateDict&&(r.defaultWidthX=h._privateDict.defaultWidthX,r.nominalWidthX=h._privateDict.nominalWidthX),void 0!==h.ros[0]&&void 0!==h.ros[1]&&(r.isCIDFont=!0),r.isCIDFont){var f=h.fdArray,d=h.fdSelect;if(0===f||0===d)throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");var p=De(e,t,Ee(e,f+=t).objects,l.objects);h._fdArray=p,d+=t,h._fdSelect=function(e,t,r,n){var i,o=[],a=new ae.Parser(e,t),s=a.parseCard8();if(0===s)for(var l=0;l<r;l++){if(n<=(i=a.parseCard8()))throw new Error("CFF table CID Font FDSelect has bad FD index value "+i+" (FD count "+n+")");o.push(i)}else{if(3!==s)throw new Error("CFF Table CID Font FDSelect table has unsupported format "+s);var u,c=a.parseCard16(),h=a.parseCard16();if(0!==h)throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID "+h);for(var f=0;f<c;f++){if(i=a.parseCard8(),u=a.parseCard16(),n<=i)throw new Error("CFF table CID Font FDSelect has bad FD index value "+i+" (FD count "+n+")");if(r<u)throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID "+u);for(;h<u;h++)o.push(i);h=u}if(u!==r)throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID "+u)}return o}(e,d,r.numGlyphs,p.length)}var m=t+h.private[1],v=Ae(e,m,h.private[0],l.objects);if(r.defaultWidthX=v.defaultWidthX,r.nominalWidthX=v.nominalWidthX,0!==v.subrs){var g=Ee(e,m+v.subrs);r.subrs=g.objects,r.subrsBias=Se(r.subrs)}else r.subrs=[],r.subrsBias=0;var y=Ee(e,t+h.charStrings);r.nGlyphs=y.objects.length;var b=function(e,t,r,n){var i,o,a=new ae.Parser(e,t);--r;var s=[".notdef"],l=a.parseCard8();if(0===l)for(var u=0;u<r;u+=1)i=a.parseSID(),s.push(Ce(n,i));else if(1===l)for(;s.length<=r;){i=a.parseSID(),o=a.parseCard8();for(var c=0;c<=o;c+=1)s.push(Ce(n,i)),i+=1}else{if(2!==l)throw new Error("Unknown charset format "+l);for(;s.length<=r;){i=a.parseSID(),o=a.parseCard16();for(var h=0;h<=o;h+=1)s.push(Ce(n,i)),i+=1}}return s}(e,t+h.charset,r.nGlyphs,l.objects);0===h.encoding?r.cffEncoding=new me(ce,b):1===h.encoding?r.cffEncoding=new me(he,b):r.cffEncoding=function(e,t,r){var n,i={},o=new ae.Parser(e,t),a=o.parseCard8();if(0===a)for(var s=o.parseCard8(),l=0;l<s;l+=1)i[n=o.parseCard8()]=l;else{if(1!==a)throw new Error("Unknown encoding format "+a);var u=o.parseCard8();n=1;for(var c=0;c<u;c+=1)for(var h=o.parseCard8(),f=o.parseCard8(),d=h;d<=h+f;d+=1)i[d]=n,n+=1}return new me(i,r)}(e,t+h.encoding,b),r.encoding=r.encoding||r.cffEncoding,r.glyphs=new we.GlyphSet(r);for(var _=0;_<r.nGlyphs;_+=1){var w=y.objects[_];r.glyphs.push(_,we.cffGlyphLoader(r,_,ke,w))}},Ge=function(e,t){for(var r,n=new J.Table("CFF ",[{name:"header",type:"RECORD"},{name:"nameIndex",type:"RECORD"},{name:"topDictIndex",type:"RECORD"},{name:"stringIndex",type:"RECORD"},{name:"globalSubrIndex",type:"RECORD"},{name:"charsets",type:"RECORD"},{name:"charStringsIndex",type:"RECORD"},{name:"privateDict",type:"RECORD"}]),i=1/t.unitsPerEm,o={version:t.version,fullName:t.fullName,familyName:t.familyName,weight:t.weightName,fontBBox:t.fontBBox||[0,0,0,0],fontMatrix:[i,0,0,i,0,0],charset:999,encoding:0,charStrings:999,private:[0,999]},a=[],s=1;s<e.length;s+=1)r=e.get(s),a.push(r.name);var l=[];n.header=new J.Record("Header",[{name:"major",type:"Card8",value:1},{name:"minor",type:"Card8",value:0},{name:"hdrSize",type:"Card8",value:4},{name:"major",type:"Card8",value:1}]),n.nameIndex=function(e){var t=new J.Record("Name INDEX",[{name:"names",type:"INDEX",value:[]}]);t.names=[];for(var r=0;r<e.length;r+=1)t.names.push({name:"name_"+r,type:"NAME",value:e[r]});return t}([t.postScriptName]);var u,c,h,f=Ue(o,l);n.topDictIndex=Ne(f),n.globalSubrIndex=new J.Record("Global Subr INDEX",[{name:"subrs",type:"INDEX",value:[]}]),n.charsets=function(e,t){for(var r=new J.Record("Charsets",[{name:"format",type:"Card8",value:0}]),n=0;n<e.length;n+=1){var i=Re(e[n],t);r.fields.push({name:"glyph_"+n,type:"SID",value:i})}return r}(a,l),n.charStringsIndex=function(e){for(var t=new J.Record("CharStrings INDEX",[{name:"charStrings",type:"INDEX",value:[]}]),r=0;r<e.length;r+=1){var n=e.get(r),i=Be(n);t.charStrings.push({name:n.name,type:"CHARSTRING",value:i})}return t}(e),n.privateDict=(u={},c=l,(h=new J.Record("Private DICT",[{name:"dict",type:"DICT",value:{}}])).dict=Ie(Pe,u,c),h),n.stringIndex=function(e){var t=new J.Record("String INDEX",[{name:"strings",type:"INDEX",value:[]}]);t.strings=[];for(var r=0;r<e.length;r+=1)t.strings.push({name:"string_"+r,type:"STRING",value:e[r]});return t}(l);var d=n.header.sizeOf()+n.nameIndex.sizeOf()+n.topDictIndex.sizeOf()+n.stringIndex.sizeOf()+n.globalSubrIndex.sizeOf();return o.charset=d,o.encoding=0,o.charStrings=o.charset+n.charsets.sizeOf(),o.private[1]=o.charStrings+n.charStringsIndex.sizeOf(),f=Ue(o,l),n.topDictIndex=Ne(f),n},je=function(e,t){var r={},n=new ae.Parser(e,t);return r.version=n.parseVersion(),r.fontRevision=Math.round(1e3*n.parseFixed())/1e3,r.checkSumAdjustment=n.parseULong(),r.magicNumber=n.parseULong(),P.argument(1594834165===r.magicNumber,"Font header has wrong magic number."),r.flags=n.parseUShort(),r.unitsPerEm=n.parseUShort(),r.created=n.parseLongDateTime(),r.modified=n.parseLongDateTime(),r.xMin=n.parseShort(),r.yMin=n.parseShort(),r.xMax=n.parseShort(),r.yMax=n.parseShort(),r.macStyle=n.parseUShort(),r.lowestRecPPEM=n.parseUShort(),r.fontDirectionHint=n.parseShort(),r.indexToLocFormat=n.parseShort(),r.glyphDataFormat=n.parseShort(),r},Ve=function(e){var t=Math.round((new Date).getTime()/1e3)+2082844800,r=t;return e.createdTimestamp&&(r=e.createdTimestamp+2082844800),new J.Table("head",[{name:"version",type:"FIXED",value:65536},{name:"fontRevision",type:"FIXED",value:65536},{name:"checkSumAdjustment",type:"ULONG",value:0},{name:"magicNumber",type:"ULONG",value:1594834165},{name:"flags",type:"USHORT",value:0},{name:"unitsPerEm",type:"USHORT",value:1e3},{name:"created",type:"LONGDATETIME",value:r},{name:"modified",type:"LONGDATETIME",value:t},{name:"xMin",type:"SHORT",value:0},{name:"yMin",type:"SHORT",value:0},{name:"xMax",type:"SHORT",value:0},{name:"yMax",type:"SHORT",value:0},{name:"macStyle",type:"USHORT",value:0},{name:"lowestRecPPEM",type:"USHORT",value:0},{name:"fontDirectionHint",type:"SHORT",value:2},{name:"indexToLocFormat",type:"SHORT",value:0},{name:"glyphDataFormat",type:"SHORT",value:0}],e)},ze=function(e,t){var r={},n=new ae.Parser(e,t);return r.version=n.parseVersion(),r.ascender=n.parseShort(),r.descender=n.parseShort(),r.lineGap=n.parseShort(),r.advanceWidthMax=n.parseUShort(),r.minLeftSideBearing=n.parseShort(),r.minRightSideBearing=n.parseShort(),r.xMaxExtent=n.parseShort(),r.caretSlopeRise=n.parseShort(),r.caretSlopeRun=n.parseShort(),r.caretOffset=n.parseShort(),n.relativeOffset+=8,r.metricDataFormat=n.parseShort(),r.numberOfHMetrics=n.parseUShort(),r},He=function(e){return new J.Table("hhea",[{name:"version",type:"FIXED",value:65536},{name:"ascender",type:"FWORD",value:0},{name:"descender",type:"FWORD",value:0},{name:"lineGap",type:"FWORD",value:0},{name:"advanceWidthMax",type:"UFWORD",value:0},{name:"minLeftSideBearing",type:"FWORD",value:0},{name:"minRightSideBearing",type:"FWORD",value:0},{name:"xMaxExtent",type:"FWORD",value:0},{name:"caretSlopeRise",type:"SHORT",value:1},{name:"caretSlopeRun",type:"SHORT",value:0},{name:"caretOffset",type:"SHORT",value:0},{name:"reserved1",type:"SHORT",value:0},{name:"reserved2",type:"SHORT",value:0},{name:"reserved3",type:"SHORT",value:0},{name:"reserved4",type:"SHORT",value:0},{name:"metricDataFormat",type:"SHORT",value:0},{name:"numberOfHMetrics",type:"USHORT",value:0}],e)},We=function(e,t,r,n,i){for(var o,a,s=new ae.Parser(e,t),l=0;l<n;l+=1){l<r&&(o=s.parseUShort(),a=s.parseShort());var u=i.get(l);u.advanceWidth=o,u.leftSideBearing=a}},qe=function(e){for(var t=new J.Table("hmtx",[]),r=0;r<e.length;r+=1){var n=e.get(r),i=n.advanceWidth||0,o=n.leftSideBearing||0;t.fields.push({name:"advanceWidth_"+r,type:"USHORT",value:i}),t.fields.push({name:"leftSideBearing_"+r,type:"SHORT",value:o})}return t},Xe=function(e){for(var t=new J.Table("ltag",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"numTags",type:"ULONG",value:e.length}]),r="",n=12+4*e.length,i=0;i<e.length;++i){var o=r.indexOf(e[i]);o<0&&(o=r.length,r+=e[i]),t.fields.push({name:"offset "+i,type:"USHORT",value:n+o}),t.fields.push({name:"length "+i,type:"USHORT",value:e[i].length})}return t.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),t},Ye=function(e,t){var r=new ae.Parser(e,t),n=r.parseULong();P.argument(1===n,"Unsupported ltag table version."),r.skip("uLong",1);for(var i=r.parseULong(),o=[],a=0;a<i;a++){for(var s="",l=t+r.parseUShort(),u=r.parseUShort(),c=l;c<l+u;++c)s+=String.fromCharCode(e.getInt8(c));o.push(s)}return o},Ze=function(e,t){var r={},n=new ae.Parser(e,t);return r.version=n.parseVersion(),r.numGlyphs=n.parseUShort(),1===r.version&&(r.maxPoints=n.parseUShort(),r.maxContours=n.parseUShort(),r.maxCompositePoints=n.parseUShort(),r.maxCompositeContours=n.parseUShort(),r.maxZones=n.parseUShort(),r.maxTwilightPoints=n.parseUShort(),r.maxStorage=n.parseUShort(),r.maxFunctionDefs=n.parseUShort(),r.maxInstructionDefs=n.parseUShort(),r.maxStackElements=n.parseUShort(),r.maxSizeOfInstructions=n.parseUShort(),r.maxComponentElements=n.parseUShort(),r.maxComponentDepth=n.parseUShort()),r},Qe=function(e){return new J.Table("maxp",[{name:"version",type:"FIXED",value:20480},{name:"numGlyphs",type:"USHORT",value:e}])},Ke=["copyright","fontFamily","fontSubfamily","uniqueID","fullName","version","postScriptName","trademark","manufacturer","designer","description","manufacturerURL","designerURL","license","licenseURL","reserved","preferredFamily","preferredSubfamily","compatibleFullName","sampleText","postScriptFindFontName","wwsFamily","wwsSubfamily"],Je={0:"en",1:"fr",2:"de",3:"it",4:"nl",5:"sv",6:"es",7:"da",8:"pt",9:"no",10:"he",11:"ja",12:"ar",13:"fi",14:"el",15:"is",16:"mt",17:"tr",18:"hr",19:"zh-Hant",20:"ur",21:"hi",22:"th",23:"ko",24:"lt",25:"pl",26:"hu",27:"es",28:"lv",29:"se",30:"fo",31:"fa",32:"ru",33:"zh",34:"nl-BE",35:"ga",36:"sq",37:"ro",38:"cz",39:"sk",40:"si",41:"yi",42:"sr",43:"mk",44:"bg",45:"uk",46:"be",47:"uz",48:"kk",49:"az-Cyrl",50:"az-Arab",51:"hy",52:"ka",53:"mo",54:"ky",55:"tg",56:"tk",57:"mn-CN",58:"mn",59:"ps",60:"ks",61:"ku",62:"sd",63:"bo",64:"ne",65:"sa",66:"mr",67:"bn",68:"as",69:"gu",70:"pa",71:"or",72:"ml",73:"kn",74:"ta",75:"te",76:"si",77:"my",78:"km",79:"lo",80:"vi",81:"id",82:"tl",83:"ms",84:"ms-Arab",85:"am",86:"ti",87:"om",88:"so",89:"sw",90:"rw",91:"rn",92:"ny",93:"mg",94:"eo",128:"cy",129:"eu",130:"ca",131:"la",132:"qu",133:"gn",134:"ay",135:"tt",136:"ug",137:"dz",138:"jv",139:"su",140:"gl",141:"af",142:"br",143:"iu",144:"gd",145:"gv",146:"ga",147:"to",148:"el-polyton",149:"kl",150:"az",151:"nn"},$e={0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:5,11:1,12:4,13:0,14:6,15:0,16:0,17:0,18:0,19:2,20:4,21:9,22:21,23:3,24:29,25:29,26:29,27:29,28:29,29:0,30:0,31:4,32:7,33:25,34:0,35:0,36:0,37:0,38:29,39:29,40:0,41:5,42:7,43:7,44:7,45:7,46:7,47:7,48:7,49:7,50:4,51:24,52:23,53:7,54:7,55:7,56:7,57:27,58:7,59:4,60:4,61:4,62:4,63:26,64:9,65:9,66:9,67:13,68:13,69:11,70:10,71:12,72:17,73:16,74:14,75:15,76:18,77:19,78:20,79:22,80:30,81:0,82:0,83:0,84:4,85:28,86:28,87:28,88:0,89:0,90:0,91:0,92:0,93:0,94:0,128:0,129:0,130:0,131:0,132:0,133:0,134:0,135:7,136:4,137:26,138:0,139:0,140:0,141:0,142:0,143:28,144:0,145:0,146:0,147:0,148:6,149:0,150:0,151:0},et={1078:"af",1052:"sq",1156:"gsw",1118:"am",5121:"ar-DZ",15361:"ar-BH",3073:"ar",2049:"ar-IQ",11265:"ar-JO",13313:"ar-KW",12289:"ar-LB",4097:"ar-LY",6145:"ary",8193:"ar-OM",16385:"ar-QA",1025:"ar-SA",10241:"ar-SY",7169:"aeb",14337:"ar-AE",9217:"ar-YE",1067:"hy",1101:"as",2092:"az-Cyrl",1068:"az",1133:"ba",1069:"eu",1059:"be",2117:"bn",1093:"bn-IN",8218:"bs-Cyrl",5146:"bs",1150:"br",1026:"bg",1027:"ca",3076:"zh-HK",5124:"zh-MO",2052:"zh",4100:"zh-SG",1028:"zh-TW",1155:"co",1050:"hr",4122:"hr-BA",1029:"cs",1030:"da",1164:"prs",1125:"dv",2067:"nl-BE",1043:"nl",3081:"en-AU",10249:"en-BZ",4105:"en-CA",9225:"en-029",16393:"en-IN",6153:"en-IE",8201:"en-JM",17417:"en-MY",5129:"en-NZ",13321:"en-PH",18441:"en-SG",7177:"en-ZA",11273:"en-TT",2057:"en-GB",1033:"en",12297:"en-ZW",1061:"et",1080:"fo",1124:"fil",1035:"fi",2060:"fr-BE",3084:"fr-CA",1036:"fr",5132:"fr-LU",6156:"fr-MC",4108:"fr-CH",1122:"fy",1110:"gl",1079:"ka",3079:"de-AT",1031:"de",5127:"de-LI",4103:"de-LU",2055:"de-CH",1032:"el",1135:"kl",1095:"gu",1128:"ha",1037:"he",1081:"hi",1038:"hu",1039:"is",1136:"ig",1057:"id",1117:"iu",2141:"iu-Latn",2108:"ga",1076:"xh",1077:"zu",1040:"it",2064:"it-CH",1041:"ja",1099:"kn",1087:"kk",1107:"km",1158:"quc",1159:"rw",1089:"sw",1111:"kok",1042:"ko",1088:"ky",1108:"lo",1062:"lv",1063:"lt",2094:"dsb",1134:"lb",1071:"mk",2110:"ms-BN",1086:"ms",1100:"ml",1082:"mt",1153:"mi",1146:"arn",1102:"mr",1148:"moh",1104:"mn",2128:"mn-CN",1121:"ne",1044:"nb",2068:"nn",1154:"oc",1096:"or",1123:"ps",1045:"pl",1046:"pt",2070:"pt-PT",1094:"pa",1131:"qu-BO",2155:"qu-EC",3179:"qu",1048:"ro",1047:"rm",1049:"ru",9275:"smn",4155:"smj-NO",5179:"smj",3131:"se-FI",1083:"se",2107:"se-SE",8251:"sms",6203:"sma-NO",7227:"sms",1103:"sa",7194:"sr-Cyrl-BA",3098:"sr",6170:"sr-Latn-BA",2074:"sr-Latn",1132:"nso",1074:"tn",1115:"si",1051:"sk",1060:"sl",11274:"es-AR",16394:"es-BO",13322:"es-CL",9226:"es-CO",5130:"es-CR",7178:"es-DO",12298:"es-EC",17418:"es-SV",4106:"es-GT",18442:"es-HN",2058:"es-MX",19466:"es-NI",6154:"es-PA",15370:"es-PY",10250:"es-PE",20490:"es-PR",3082:"es",1034:"es",21514:"es-US",14346:"es-UY",8202:"es-VE",2077:"sv-FI",1053:"sv",1114:"syr",1064:"tg",2143:"tzm",1097:"ta",1092:"tt",1098:"te",1054:"th",1105:"bo",1055:"tr",1090:"tk",1152:"ug",1058:"uk",1070:"hsb",1056:"ur",2115:"uz-Cyrl",1091:"uz",1066:"vi",1106:"cy",1160:"wo",1157:"sah",1144:"ii",1130:"yo"};function tt(e,t,r){switch(e){case 0:if(65535===t)return"und";if(r)return r[t];break;case 1:return Je[t];case 3:return et[t]}}var rt="utf-16",nt={0:"macintosh",1:"x-mac-japanese",2:"x-mac-chinesetrad",3:"x-mac-korean",6:"x-mac-greek",7:"x-mac-cyrillic",9:"x-mac-devanagai",10:"x-mac-gurmukhi",11:"x-mac-gujarati",12:"x-mac-oriya",13:"x-mac-bengali",14:"x-mac-tamil",15:"x-mac-telugu",16:"x-mac-kannada",17:"x-mac-malayalam",18:"x-mac-sinhalese",19:"x-mac-burmese",20:"x-mac-khmer",21:"x-mac-thai",22:"x-mac-lao",23:"x-mac-georgian",24:"x-mac-armenian",25:"x-mac-chinesesimp",26:"x-mac-tibetan",27:"x-mac-mongolian",28:"x-mac-ethiopic",29:"x-mac-ce",30:"x-mac-vietnamese",31:"x-mac-extarabic"},it={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"};function ot(e,t,r){switch(e){case 0:return rt;case 1:return it[r]||nt[t];case 3:if(1===t||10===t)return rt}}function at(e){var t={};for(var r in e)t[e[r]]=parseInt(r);return t}function st(e,t,r,n,i,o){return new J.Record("NameRecord",[{name:"platformID",type:"USHORT",value:e},{name:"encodingID",type:"USHORT",value:t},{name:"languageID",type:"USHORT",value:r},{name:"nameID",type:"USHORT",value:n},{name:"length",type:"USHORT",value:i},{name:"offset",type:"USHORT",value:o}])}function lt(e,t){var r=function(e,t){var r=e.length,n=t.length-r+1;e:for(var i=0;i<n;i++)for(;i<n;i++){for(var o=0;o<r;o++)if(t[i+o]!==e[o])continue e;return i}return-1}(e,t);if(r<0){r=t.length;for(var n=0,i=e.length;n<i;++n)t.push(e[n])}return r}var ut=function(e,t,r){for(var n={},i=new ae.Parser(e,t),o=i.parseUShort(),a=i.parseUShort(),s=i.offset+i.parseUShort(),l=0;l<a;l++){var u=i.parseUShort(),c=i.parseUShort(),h=i.parseUShort(),f=i.parseUShort(),d=Ke[f]||f,p=i.parseUShort(),m=i.parseUShort(),v=tt(u,h,r),g=ot(u,c,h);if(void 0!==g&&void 0!==v){var y;if(y=g===rt?D.UTF16(e,s+m,p):D.MACSTRING(e,s+m,p,g)){var b=n[d];void 0===b&&(b=n[d]={}),b[v]=y}}}return 1===o&&i.parseUShort(),n},ct=function(e,t){var r,n=[],i={},o=at(Ke);for(var a in e){var s=o[a];if(void 0===s&&(s=a),r=parseInt(s),isNaN(r))throw new Error('Name table entry "'+a+'" does not exist, see nameTableNames for complete list.');i[r]=e[a],n.push(r)}for(var l=at(Je),u=at(et),c=[],h=[],f=0;f<n.length;f++){var d=i[r=n[f]];for(var p in d){var m=d[p],v=1,g=l[p],y=$e[g],b=ot(v,y,g),_=k.MACSTRING(m,b);void 0===_&&(v=0,(g=t.indexOf(p))<0&&(g=t.length,t.push(p)),y=4,_=k.UTF16(m));var w=lt(_,h);c.push(st(v,y,g,r,_.length,w));var x=u[p];if(void 0!==x){var S=k.UTF16(m),E=lt(S,h);c.push(st(3,1,x,r,S.length,E))}}}c.sort((function(e,t){return e.platformID-t.platformID||e.encodingID-t.encodingID||e.languageID-t.languageID||e.nameID-t.nameID}));for(var M=new J.Table("name",[{name:"format",type:"USHORT",value:0},{name:"count",type:"USHORT",value:c.length},{name:"stringOffset",type:"USHORT",value:6+12*c.length}]),T=0;T<c.length;T++)M.fields.push({name:"record_"+T,type:"RECORD",value:c[T]});return M.fields.push({name:"strings",type:"LITERAL",value:h}),M},ht=[{begin:0,end:127},{begin:128,end:255},{begin:256,end:383},{begin:384,end:591},{begin:592,end:687},{begin:688,end:767},{begin:768,end:879},{begin:880,end:1023},{begin:11392,end:11519},{begin:1024,end:1279},{begin:1328,end:1423},{begin:1424,end:1535},{begin:42240,end:42559},{begin:1536,end:1791},{begin:1984,end:2047},{begin:2304,end:2431},{begin:2432,end:2559},{begin:2560,end:2687},{begin:2688,end:2815},{begin:2816,end:2943},{begin:2944,end:3071},{begin:3072,end:3199},{begin:3200,end:3327},{begin:3328,end:3455},{begin:3584,end:3711},{begin:3712,end:3839},{begin:4256,end:4351},{begin:6912,end:7039},{begin:4352,end:4607},{begin:7680,end:7935},{begin:7936,end:8191},{begin:8192,end:8303},{begin:8304,end:8351},{begin:8352,end:8399},{begin:8400,end:8447},{begin:8448,end:8527},{begin:8528,end:8591},{begin:8592,end:8703},{begin:8704,end:8959},{begin:8960,end:9215},{begin:9216,end:9279},{begin:9280,end:9311},{begin:9312,end:9471},{begin:9472,end:9599},{begin:9600,end:9631},{begin:9632,end:9727},{begin:9728,end:9983},{begin:9984,end:10175},{begin:12288,end:12351},{begin:12352,end:12447},{begin:12448,end:12543},{begin:12544,end:12591},{begin:12592,end:12687},{begin:43072,end:43135},{begin:12800,end:13055},{begin:13056,end:13311},{begin:44032,end:55215},{begin:55296,end:57343},{begin:67840,end:67871},{begin:19968,end:40959},{begin:57344,end:63743},{begin:12736,end:12783},{begin:64256,end:64335},{begin:64336,end:65023},{begin:65056,end:65071},{begin:65040,end:65055},{begin:65104,end:65135},{begin:65136,end:65279},{begin:65280,end:65519},{begin:65520,end:65535},{begin:3840,end:4095},{begin:1792,end:1871},{begin:1920,end:1983},{begin:3456,end:3583},{begin:4096,end:4255},{begin:4608,end:4991},{begin:5024,end:5119},{begin:5120,end:5759},{begin:5760,end:5791},{begin:5792,end:5887},{begin:6016,end:6143},{begin:6144,end:6319},{begin:10240,end:10495},{begin:40960,end:42127},{begin:5888,end:5919},{begin:66304,end:66351},{begin:66352,end:66383},{begin:66560,end:66639},{begin:118784,end:119039},{begin:119808,end:120831},{begin:1044480,end:1048573},{begin:65024,end:65039},{begin:917504,end:917631},{begin:6400,end:6479},{begin:6480,end:6527},{begin:6528,end:6623},{begin:6656,end:6687},{begin:11264,end:11359},{begin:11568,end:11647},{begin:19904,end:19967},{begin:43008,end:43055},{begin:65536,end:65663},{begin:65856,end:65935},{begin:66432,end:66463},{begin:66464,end:66527},{begin:66640,end:66687},{begin:66688,end:66735},{begin:67584,end:67647},{begin:68096,end:68191},{begin:119552,end:119647},{begin:73728,end:74751},{begin:119648,end:119679},{begin:7040,end:7103},{begin:7168,end:7247},{begin:7248,end:7295},{begin:43136,end:43231},{begin:43264,end:43311},{begin:43312,end:43359},{begin:43520,end:43615},{begin:65936,end:65999},{begin:66e3,end:66047},{begin:66208,end:66271},{begin:127024,end:127135}],ft=function(e,t){var r={},n=new ae.Parser(e,t);r.version=n.parseUShort(),r.xAvgCharWidth=n.parseShort(),r.usWeightClass=n.parseUShort(),r.usWidthClass=n.parseUShort(),r.fsType=n.parseUShort(),r.ySubscriptXSize=n.parseShort(),r.ySubscriptYSize=n.parseShort(),r.ySubscriptXOffset=n.parseShort(),r.ySubscriptYOffset=n.parseShort(),r.ySuperscriptXSize=n.parseShort(),r.ySuperscriptYSize=n.parseShort(),r.ySuperscriptXOffset=n.parseShort(),r.ySuperscriptYOffset=n.parseShort(),r.yStrikeoutSize=n.parseShort(),r.yStrikeoutPosition=n.parseShort(),r.sFamilyClass=n.parseShort(),r.panose=[];for(var i=0;i<10;i++)r.panose[i]=n.parseByte();return r.ulUnicodeRange1=n.parseULong(),r.ulUnicodeRange2=n.parseULong(),r.ulUnicodeRange3=n.parseULong(),r.ulUnicodeRange4=n.parseULong(),r.achVendID=String.fromCharCode(n.parseByte(),n.parseByte(),n.parseByte(),n.parseByte()),r.fsSelection=n.parseUShort(),r.usFirstCharIndex=n.parseUShort(),r.usLastCharIndex=n.parseUShort(),r.sTypoAscender=n.parseShort(),r.sTypoDescender=n.parseShort(),r.sTypoLineGap=n.parseShort(),r.usWinAscent=n.parseUShort(),r.usWinDescent=n.parseUShort(),1<=r.version&&(r.ulCodePageRange1=n.parseULong(),r.ulCodePageRange2=n.parseULong()),2<=r.version&&(r.sxHeight=n.parseShort(),r.sCapHeight=n.parseShort(),r.usDefaultChar=n.parseUShort(),r.usBreakChar=n.parseUShort(),r.usMaxContent=n.parseUShort()),r},dt=function(e){return new J.Table("OS/2",[{name:"version",type:"USHORT",value:3},{name:"xAvgCharWidth",type:"SHORT",value:0},{name:"usWeightClass",type:"USHORT",value:0},{name:"usWidthClass",type:"USHORT",value:0},{name:"fsType",type:"USHORT",value:0},{name:"ySubscriptXSize",type:"SHORT",value:650},{name:"ySubscriptYSize",type:"SHORT",value:699},{name:"ySubscriptXOffset",type:"SHORT",value:0},{name:"ySubscriptYOffset",type:"SHORT",value:140},{name:"ySuperscriptXSize",type:"SHORT",value:650},{name:"ySuperscriptYSize",type:"SHORT",value:699},{name:"ySuperscriptXOffset",type:"SHORT",value:0},{name:"ySuperscriptYOffset",type:"SHORT",value:479},{name:"yStrikeoutSize",type:"SHORT",value:49},{name:"yStrikeoutPosition",type:"SHORT",value:258},{name:"sFamilyClass",type:"SHORT",value:0},{name:"bFamilyType",type:"BYTE",value:0},{name:"bSerifStyle",type:"BYTE",value:0},{name:"bWeight",type:"BYTE",value:0},{name:"bProportion",type:"BYTE",value:0},{name:"bContrast",type:"BYTE",value:0},{name:"bStrokeVariation",type:"BYTE",value:0},{name:"bArmStyle",type:"BYTE",value:0},{name:"bLetterform",type:"BYTE",value:0},{name:"bMidline",type:"BYTE",value:0},{name:"bXHeight",type:"BYTE",value:0},{name:"ulUnicodeRange1",type:"ULONG",value:0},{name:"ulUnicodeRange2",type:"ULONG",value:0},{name:"ulUnicodeRange3",type:"ULONG",value:0},{name:"ulUnicodeRange4",type:"ULONG",value:0},{name:"achVendID",type:"CHARARRAY",value:"XXXX"},{name:"fsSelection",type:"USHORT",value:0},{name:"usFirstCharIndex",type:"USHORT",value:0},{name:"usLastCharIndex",type:"USHORT",value:0},{name:"sTypoAscender",type:"SHORT",value:0},{name:"sTypoDescender",type:"SHORT",value:0},{name:"sTypoLineGap",type:"SHORT",value:0},{name:"usWinAscent",type:"USHORT",value:0},{name:"usWinDescent",type:"USHORT",value:0},{name:"ulCodePageRange1",type:"ULONG",value:0},{name:"ulCodePageRange2",type:"ULONG",value:0},{name:"sxHeight",type:"SHORT",value:0},{name:"sCapHeight",type:"SHORT",value:0},{name:"usDefaultChar",type:"USHORT",value:0},{name:"usBreakChar",type:"USHORT",value:0},{name:"usMaxContext",type:"USHORT",value:0}],e)},pt=function(e){for(var t=0;t<ht.length;t+=1){var r=ht[t];if(e>=r.begin&&e<r.end)return t}return-1},mt=function(e,t){var r={},n=new ae.Parser(e,t);switch(r.version=n.parseVersion(),r.italicAngle=n.parseFixed(),r.underlinePosition=n.parseShort(),r.underlineThickness=n.parseShort(),r.isFixedPitch=n.parseULong(),r.minMemType42=n.parseULong(),r.maxMemType42=n.parseULong(),r.minMemType1=n.parseULong(),r.maxMemType1=n.parseULong(),r.version){case 1:r.names=fe.slice();break;case 2:r.numberOfGlyphs=n.parseUShort(),r.glyphNameIndex=new Array(r.numberOfGlyphs);for(var i=0;i<r.numberOfGlyphs;i++)r.glyphNameIndex[i]=n.parseUShort();r.names=[];for(var o=0;o<r.numberOfGlyphs;o++)if(r.glyphNameIndex[o]>=fe.length){var a=n.parseChar();r.names.push(n.parseString(a))}break;case 2.5:r.numberOfGlyphs=n.parseUShort(),r.offset=new Array(r.numberOfGlyphs);for(var s=0;s<r.numberOfGlyphs;s++)r.offset[s]=n.parseChar()}return r},vt=function(){return new J.Table("post",[{name:"version",type:"FIXED",value:196608},{name:"italicAngle",type:"FIXED",value:0},{name:"underlinePosition",type:"FWORD",value:0},{name:"underlineThickness",type:"FWORD",value:0},{name:"isFixedPitch",type:"ULONG",value:0},{name:"minMemType42",type:"ULONG",value:0},{name:"maxMemType42",type:"ULONG",value:0},{name:"minMemType1",type:"ULONG",value:0},{name:"maxMemType1",type:"ULONG",value:0}])},gt=new Array(9);gt[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(ie.coverage),deltaGlyphId:this.parseUShort()}:2===t?{substFormat:2,coverage:this.parsePointer(ie.coverage),substitute:this.parseOffset16List()}:void P.assert(!1,"0x"+e.toString(16)+": lookup type 1 format must be 1 or 2.")},gt[2]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB Multiple Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ie.coverage),sequences:this.parseListOfLists()}},gt[3]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB Alternate Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ie.coverage),alternateSets:this.parseListOfLists()}},gt[4]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB ligature table identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ie.coverage),ligatureSets:this.parseListOfLists((function(){return{ligGlyph:this.parseUShort(),components:this.parseUShortList(this.parseUShort()-1)}}))}};var yt={sequenceIndex:ie.uShort,lookupListIndex:ie.uShort};gt[5]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();if(1===t)return{substFormat:t,coverage:this.parsePointer(ie.coverage),ruleSets:this.parseListOfLists((function(){var e=this.parseUShort(),t=this.parseUShort();return{input:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,yt)}}))};if(2===t)return{substFormat:t,coverage:this.parsePointer(ie.coverage),classDef:this.parsePointer(ie.classDef),classSets:this.parseListOfLists((function(){var e=this.parseUShort(),t=this.parseUShort();return{classes:this.parseUShortList(e-1),lookupRecords:this.parseRecordList(t,yt)}}))};if(3===t){var r=this.parseUShort(),n=this.parseUShort();return{substFormat:t,coverages:this.parseList(r,ie.pointer(ie.coverage)),lookupRecords:this.parseRecordList(n,yt)}}P.assert(!1,"0x"+e.toString(16)+": lookup type 5 format must be 1, 2 or 3.")},gt[6]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{substFormat:1,coverage:this.parsePointer(ie.coverage),chainRuleSets:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(yt)}}))}:2===t?{substFormat:2,coverage:this.parsePointer(ie.coverage),backtrackClassDef:this.parsePointer(ie.classDef),inputClassDef:this.parsePointer(ie.classDef),lookaheadClassDef:this.parsePointer(ie.classDef),chainClassSet:this.parseListOfLists((function(){return{backtrack:this.parseUShortList(),input:this.parseUShortList(this.parseShort()-1),lookahead:this.parseUShortList(),lookupRecords:this.parseRecordList(yt)}}))}:3===t?{substFormat:3,backtrackCoverage:this.parseList(ie.pointer(ie.coverage)),inputCoverage:this.parseList(ie.pointer(ie.coverage)),lookaheadCoverage:this.parseList(ie.pointer(ie.coverage)),lookupRecords:this.parseRecordList(yt)}:void P.assert(!1,"0x"+e.toString(16)+": lookup type 6 format must be 1, 2 or 3.")},gt[7]=function(){var e=this.parseUShort();P.argument(1===e,"GSUB Extension Substitution subtable identifier-format must be 1");var t=this.parseUShort(),r=new ie(this.data,this.offset+this.parseULong());return{substFormat:1,lookupType:t,extension:gt[t].call(r)}},gt[8]=function(){var e=this.parseUShort();return P.argument(1===e,"GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"),{substFormat:e,coverage:this.parsePointer(ie.coverage),backtrackCoverage:this.parseList(ie.pointer(ie.coverage)),lookaheadCoverage:this.parseList(ie.pointer(ie.coverage)),substitutes:this.parseUShortList()}};var bt=new Array(9);bt[1]=function(e){return 1===e.substFormat?new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)},{name:"deltaGlyphID",type:"USHORT",value:e.deltaGlyphId}]):new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:2},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.ushortList("substitute",e.substitute)))},bt[3]=function(e){return P.assert(1===e.substFormat,"Lookup type 3 substFormat must be 1."),new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.tableList("altSet",e.alternateSets,(function(e){return new J.Table("alternateSetTable",J.ushortList("alternate",e))}))))},bt[4]=function(e){return P.assert(1===e.substFormat,"Lookup type 4 substFormat must be 1."),new J.Table("substitutionTable",[{name:"substFormat",type:"USHORT",value:1},{name:"coverage",type:"TABLE",value:new J.Coverage(e.coverage)}].concat(J.tableList("ligSet",e.ligatureSets,(function(e){return new J.Table("ligatureSetTable",J.tableList("ligature",e,(function(e){return new J.Table("ligatureTable",[{name:"ligGlyph",type:"USHORT",value:e.ligGlyph}].concat(J.ushortList("component",e.components,e.components.length+1)))})))}))))};var _t=function(e,t){var r=new ie(e,t=t||0),n=r.parseVersion(1);return P.argument(1===n||1.1===n,"Unsupported GSUB table version."),1===n?{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(gt)}:{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(gt),variations:r.parseFeatureVariationsList()}},wt=function(e){return new J.Table("GSUB",[{name:"version",type:"ULONG",value:65536},{name:"scripts",type:"TABLE",value:new J.ScriptList(e.scripts)},{name:"features",type:"TABLE",value:new J.FeatureList(e.features)},{name:"lookups",type:"TABLE",value:new J.LookupList(e.lookups,bt)}])},xt=function(e,t){var r=new ae.Parser(e,t),n=r.parseULong();P.argument(1===n,"Unsupported META table version."),r.parseULong(),r.parseULong();for(var i=r.parseULong(),o={},a=0;a<i;a++){var s=r.parseTag(),l=r.parseULong(),u=r.parseULong(),c=D.UTF8(e,t+l,u);o[s]=c}return o},St=function(e){var t=Object.keys(e).length,r="",n=16+12*t,i=new J.Table("meta",[{name:"version",type:"ULONG",value:1},{name:"flags",type:"ULONG",value:0},{name:"offset",type:"ULONG",value:n},{name:"numTags",type:"ULONG",value:t}]);for(var o in e){var a=r.length;r+=e[o],i.fields.push({name:"tag "+o,type:"TAG",value:o}),i.fields.push({name:"offset "+o,type:"ULONG",value:n+a}),i.fields.push({name:"length "+o,type:"ULONG",value:e[o].length})}return i.fields.push({name:"stringPool",type:"CHARARRAY",value:r}),i};function Et(e){return Math.log(e)/Math.log(2)|0}function Mt(e){for(;e.length%4!=0;)e.push(0);for(var t=0,r=0;r<e.length;r+=4)t+=(e[r]<<24)+(e[r+1]<<16)+(e[r+2]<<8)+e[r+3];return t%Math.pow(2,32)}function Tt(e,t,r,n){return new J.Record("Table Record",[{name:"tag",type:"TAG",value:void 0!==e?e:""},{name:"checkSum",type:"ULONG",value:void 0!==t?t:0},{name:"offset",type:"ULONG",value:void 0!==r?r:0},{name:"length",type:"ULONG",value:void 0!==n?n:0}])}function Ct(e){var t=new J.Table("sfnt",[{name:"version",type:"TAG",value:"OTTO"},{name:"numTables",type:"USHORT",value:0},{name:"searchRange",type:"USHORT",value:0},{name:"entrySelector",type:"USHORT",value:0},{name:"rangeShift",type:"USHORT",value:0}]);t.tables=e,t.numTables=e.length;var r=Math.pow(2,Et(t.numTables));t.searchRange=16*r,t.entrySelector=Et(r),t.rangeShift=16*t.numTables-t.searchRange;for(var n=[],i=[],o=t.sizeOf()+Tt().sizeOf()*t.numTables;o%4!=0;)o+=1,i.push({name:"padding",type:"BYTE",value:0});for(var a=0;a<e.length;a+=1){var s=e[a];P.argument(4===s.tableName.length,"Table name"+s.tableName+" is invalid.");var l=s.sizeOf(),u=Tt(s.tableName,Mt(s.encode()),o,l);for(n.push({name:u.tag+" Table Record",type:"RECORD",value:u}),i.push({name:s.tableName+" table",type:"RECORD",value:s}),o+=l,P.argument(!isNaN(o),"Something went wrong calculating the offset.");o%4!=0;)o+=1,i.push({name:"padding",type:"BYTE",value:0})}return n.sort((function(e,t){return e.value.tag>t.value.tag?1:-1})),t.fields=t.fields.concat(n),t.fields=t.fields.concat(i),t}function Lt(e,t,r){for(var n=0;n<t.length;n+=1){var i=e.charToGlyphIndex(t[n]);if(0<i)return e.glyphs.get(i).getMetrics()}return r}var Ot=function(e){for(var t,r=[],n=[],i=[],o=[],a=[],s=[],l=[],u=0,c=0,h=0,f=0,d=0,p=0;p<e.glyphs.length;p+=1){var m=e.glyphs.get(p),v=0|m.unicode;if(isNaN(m.advanceWidth))throw new Error("Glyph "+m.name+" ("+p+"): advanceWidth is not a number.");(v<t||void 0===t)&&0<v&&(t=v),u<v&&(u=v);var g=pt(v);if(g<32)c|=1<<g;else if(g<64)h|=1<<g-32;else if(g<96)f|=1<<g-64;else{if(!(g<123))throw new Error("Unicode ranges bits > 123 are reserved for internal usage");d|=1<<g-96}if(".notdef"!==m.name){var y=m.getMetrics();r.push(y.xMin),n.push(y.yMin),i.push(y.xMax),o.push(y.yMax),s.push(y.leftSideBearing),l.push(y.rightSideBearing),a.push(m.advanceWidth)}}var b={xMin:Math.min.apply(null,r),yMin:Math.min.apply(null,n),xMax:Math.max.apply(null,i),yMax:Math.max.apply(null,o),advanceWidthMax:Math.max.apply(null,a),advanceWidthAvg:function(e){for(var t=0,r=0;r<e.length;r+=1)t+=e[r];return t/e.length}(a),minLeftSideBearing:Math.min.apply(null,s),maxLeftSideBearing:Math.max.apply(null,s),minRightSideBearing:Math.min.apply(null,l)};b.ascender=e.ascender,b.descender=e.descender;var _=Ve({flags:3,unitsPerEm:e.unitsPerEm,xMin:b.xMin,yMin:b.yMin,xMax:b.xMax,yMax:b.yMax,lowestRecPPEM:3,createdTimestamp:e.createdTimestamp}),w=He({ascender:b.ascender,descender:b.descender,advanceWidthMax:b.advanceWidthMax,minLeftSideBearing:b.minLeftSideBearing,minRightSideBearing:b.minRightSideBearing,xMaxExtent:b.maxLeftSideBearing+(b.xMax-b.xMin),numberOfHMetrics:e.glyphs.length}),x=Qe(e.glyphs.length),S=dt({xAvgCharWidth:Math.round(b.advanceWidthAvg),usWeightClass:e.tables.os2.usWeightClass,usWidthClass:e.tables.os2.usWidthClass,usFirstCharIndex:t,usLastCharIndex:u,ulUnicodeRange1:c,ulUnicodeRange2:h,ulUnicodeRange3:f,ulUnicodeRange4:d,fsSelection:e.tables.os2.fsSelection,sTypoAscender:b.ascender,sTypoDescender:b.descender,sTypoLineGap:0,usWinAscent:b.yMax,usWinDescent:Math.abs(b.yMin),ulCodePageRange1:1,sxHeight:Lt(e,"xyvw",{yMax:Math.round(b.ascender/2)}).yMax,sCapHeight:Lt(e,"HIKLEFJMNTZBDPRAGOQSUVWXY",b).yMax,usDefaultChar:e.hasChar(" ")?32:0,usBreakChar:e.hasChar(" ")?32:0}),E=qe(e.glyphs),M=le(e.glyphs),T=e.getEnglishName("fontFamily"),C=e.getEnglishName("fontSubfamily"),L=T+" "+C,O=e.getEnglishName("postScriptName");O=O||T.replace(/\s/g,"")+"-"+C;var P={};for(var A in e.names)P[A]=e.names[A];P.uniqueID||(P.uniqueID={en:e.getEnglishName("manufacturer")+":"+L}),P.postScriptName||(P.postScriptName={en:O}),P.preferredFamily||(P.preferredFamily=e.names.fontFamily),P.preferredSubfamily||(P.preferredSubfamily=e.names.fontSubfamily);var D=[],k=ct(P,D),R=0<D.length?Xe(D):void 0,I=vt(),U=Ge(e.glyphs,{version:e.getEnglishName("version"),fullName:L,familyName:T,weightName:C,postScriptName:O,unitsPerEm:e.unitsPerEm,fontBBox:[0,b.yMin,b.ascender,b.advanceWidthMax]}),N=e.metas&&0<Object.keys(e.metas).length?St(e.metas):void 0,B=[_,w,x,S,k,M,I,U,E];R&&B.push(R),e.tables.gsub&&B.push(wt(e.tables.gsub)),N&&B.push(N);for(var F=Ct(B),G=Mt(F.encode()),j=F.fields,V=!1,z=0;z<j.length;z+=1)if("head table"===j[z].name){j[z].value.checkSumAdjustment=2981146554-G,V=!0;break}if(!V)throw new Error("Could not find head table with checkSum to adjust.");return F};function Pt(e,t){for(var r=0,n=e.length-1;r<=n;){var i=r+n>>>1,o=e[i].tag;if(o===t)return i;o<t?r=1+i:n=i-1}return-r-1}function At(e,t){for(var r=0,n=e.length-1;r<=n;){var i=r+n>>>1,o=e[i];if(o===t)return i;o<t?r=1+i:n=i-1}return-r-1}function Dt(e,t){for(var r,n=0,i=e.length-1;n<=i;){var o=n+i>>>1,a=(r=e[o]).start;if(a===t)return r;a<t?n=1+o:i=o-1}if(0<n)return t>(r=e[n-1]).end?0:r}function kt(e,t){this.font=e,this.tableName=t}function Rt(e){kt.call(this,e,"gpos")}function It(e){kt.call(this,e,"gsub")}function Ut(e,t){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Nt(e,t,r){for(var n=e.subtables,i=0;i<n.length;i++){var o=n[i];if(o.substFormat===t)return o}if(r)return n.push(r),r}function Bt(e){for(var t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n<e.length;++n)r[n]=e[n];return t}function Ft(e,t){if(!e)throw t}function Gt(e,t,r,n,i){var o;return 0<(t&n)?(o=e.parseByte(),0==(t&i)&&(o=-o),r+o):0<(t&i)?r:r+e.parseShort()}function jt(e,t,r){var n,i,o=new ae.Parser(t,r);if(e.numberOfContours=o.parseShort(),e._xMin=o.parseShort(),e._yMin=o.parseShort(),e._xMax=o.parseShort(),e._yMax=o.parseShort(),0<e.numberOfContours){for(var a=e.endPointIndices=[],s=0;s<e.numberOfContours;s+=1)a.push(o.parseUShort());e.instructionLength=o.parseUShort(),e.instructions=[];for(var l=0;l<e.instructionLength;l+=1)e.instructions.push(o.parseByte());var u=a[a.length-1]+1;n=[];for(var c=0;c<u;c+=1)if(i=o.parseByte(),n.push(i),0<(8&i))for(var h=o.parseByte(),f=0;f<h;f+=1)n.push(i),c+=1;if(P.argument(n.length===u,"Bad flags."),0<a.length){var d,p=[];if(0<u){for(var m=0;m<u;m+=1)i=n[m],(d={}).onCurve=!!(1&i),d.lastPointOfContour=0<=a.indexOf(m),p.push(d);for(var v=0,g=0;g<u;g+=1)i=n[g],(d=p[g]).x=Gt(o,i,v,2,16),v=d.x;for(var y=0,b=0;b<u;b+=1)i=n[b],(d=p[b]).y=Gt(o,i,y,4,32),y=d.y}e.points=p}else e.points=[]}else if(0===e.numberOfContours)e.points=[];else{e.isComposite=!0,e.points=[],e.components=[];for(var _=!0;_;){n=o.parseUShort();var w={glyphIndex:o.parseUShort(),xScale:1,scale01:0,scale10:0,yScale:1,dx:0,dy:0};0<(1&n)?0<(2&n)?(w.dx=o.parseShort(),w.dy=o.parseShort()):w.matchedPoints=[o.parseUShort(),o.parseUShort()]:0<(2&n)?(w.dx=o.parseChar(),w.dy=o.parseChar()):w.matchedPoints=[o.parseByte(),o.parseByte()],0<(8&n)?w.xScale=w.yScale=o.parseF2Dot14():0<(64&n)?(w.xScale=o.parseF2Dot14(),w.yScale=o.parseF2Dot14()):0<(128&n)&&(w.xScale=o.parseF2Dot14(),w.scale01=o.parseF2Dot14(),w.scale10=o.parseF2Dot14(),w.yScale=o.parseF2Dot14()),e.components.push(w),_=!!(32&n)}if(256&n){e.instructionLength=o.parseUShort(),e.instructions=[];for(var x=0;x<e.instructionLength;x+=1)e.instructions.push(o.parseByte())}}}function Vt(e,t){for(var r=[],n=0;n<e.length;n+=1){var i=e[n],o={x:t.xScale*i.x+t.scale01*i.y+t.dx,y:t.scale10*i.x+t.yScale*i.y+t.dy,onCurve:i.onCurve,lastPointOfContour:i.lastPointOfContour};r.push(o)}return r}function zt(e){var t=new C;if(!e)return t;for(var r=function(e){for(var t=[],r=[],n=0;n<e.length;n+=1){var i=e[n];r.push(i),i.lastPointOfContour&&(t.push(r),r=[])}return P.argument(0===r.length,"There are still points left in the current contour."),t}(e),n=0;n<r.length;++n){var i=r[n],o=null,a=i[i.length-1],s=i[0];if(a.onCurve)t.moveTo(a.x,a.y);else if(s.onCurve)t.moveTo(s.x,s.y);else{var l={x:.5*(a.x+s.x),y:.5*(a.y+s.y)};t.moveTo(l.x,l.y)}for(var u=0;u<i.length;++u)if(o=a,a=s,s=i[(u+1)%i.length],a.onCurve)t.lineTo(a.x,a.y);else{var c=s;o.onCurve||(a.x,o.x,a.y,o.y),s.onCurve||(c={x:.5*(a.x+s.x),y:.5*(a.y+s.y)}),t.quadraticCurveTo(a.x,a.y,c.x,c.y)}t.closePath()}return t}function Ht(e,t){if(t.isComposite)for(var r=0;r<t.components.length;r+=1){var n=t.components[r],i=e.get(n.glyphIndex);if(i.getPath(),i.points){var o=void 0;if(void 0===n.matchedPoints)o=Vt(i.points,n);else{if(n.matchedPoints[0]>t.points.length-1||n.matchedPoints[1]>i.points.length-1)throw Error("Matched points out of range in "+t.name);var a=t.points[n.matchedPoints[0]],s=i.points[n.matchedPoints[1]],l={xScale:n.xScale,scale01:n.scale01,scale10:n.scale10,yScale:n.yScale,dx:0,dy:0};s=Vt([s],l)[0],l.dx=a.x-s.x,l.dy=a.y-s.y,o=Vt(i.points,l)}t.points=t.points.concat(o)}}return zt(t.points)}(Rt.prototype=kt.prototype={searchTag:Pt,binSearch:At,getTable:function(e){var t=this.font.tables[this.tableName];return!t&&e&&(t=this.font.tables[this.tableName]=this.createDefaultTable()),t},getScriptNames:function(){var e=this.getTable();return e?e.scripts.map((function(e){return e.tag})):[]},getDefaultScriptName:function(){var e=this.getTable();if(e){for(var t=!1,r=0;r<e.scripts.length;r++){var n=e.scripts[r].tag;if("DFLT"===n)return n;"latn"===n&&(t=!0)}return t?"latn":void 0}},getScriptTable:function(e,t){var r=this.getTable(t);if(r){e=e||"DFLT";var n=r.scripts,i=Pt(r.scripts,e);if(0<=i)return n[i].script;if(t){var o={tag:e,script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}};return n.splice(-1-i,0,o),o.script}}},getLangSysTable:function(e,t,r){var n=this.getScriptTable(e,r);if(n){if(!t||"dflt"===t||"DFLT"===t)return n.defaultLangSys;var i=Pt(n.langSysRecords,t);if(0<=i)return n.langSysRecords[i].langSys;if(r){var o={tag:t,langSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]}};return n.langSysRecords.splice(-1-i,0,o),o.langSys}}},getFeatureTable:function(e,t,r,n){var i=this.getLangSysTable(e,t,n);if(i){for(var o,a=i.featureIndexes,s=this.font.tables[this.tableName].features,l=0;l<a.length;l++)if((o=s[a[l]]).tag===r)return o.feature;if(n){var u=s.length;return P.assert(0===u||r>=s[u-1].tag,"Features must be added in alphabetical order."),o={tag:r,feature:{params:0,lookupListIndexes:[]}},s.push(o),a.push(u),o.feature}}},getLookupTables:function(e,t,r,n,i){var o=this.getFeatureTable(e,t,r,i),a=[];if(o){for(var s,l=o.lookupListIndexes,u=this.font.tables[this.tableName].lookups,c=0;c<l.length;c++)(s=u[l[c]]).lookupType===n&&a.push(s);if(0===a.length&&i){s={lookupType:n,lookupFlag:0,subtables:[],markFilteringSet:void 0};var h=u.length;return u.push(s),l.push(h),[s]}}return a},getGlyphClass:function(e,t){switch(e.format){case 1:return e.startGlyph<=t&&t<e.startGlyph+e.classes.length?e.classes[t-e.startGlyph]:0;case 2:var r=Dt(e.ranges,t);return r?r.classId:0}},getCoverageIndex:function(e,t){switch(e.format){case 1:var r=At(e.glyphs,t);return 0<=r?r:-1;case 2:var n=Dt(e.ranges,t);return n?n.index+t-n.start:-1}},expandCoverage:function(e){if(1===e.format)return e.glyphs;for(var t=[],r=e.ranges,n=0;n<r.length;n++)for(var i=r[n],o=i.start,a=i.end,s=o;s<=a;s++)t.push(s);return t}}).init=function(){var e=this.getDefaultScriptName();this.defaultKerningTables=this.getKerningTables(e)},Rt.prototype.getKerningValue=function(e,t,r){for(var n=0;n<e.length;n++)for(var i=e[n].subtables,o=0;o<i.length;o++){var a=i[o],s=this.getCoverageIndex(a.coverage,t);if(!(s<0))switch(a.posFormat){case 1:for(var l=a.pairSets[s],u=0;u<l.length;u++){var c=l[u];if(c.secondGlyph===r)return c.value1&&c.value1.xAdvance||0}break;case 2:var h=this.getGlyphClass(a.classDef1,t),f=this.getGlyphClass(a.classDef2,r),d=a.classRecords[h][f];return d.value1&&d.value1.xAdvance||0}}return 0},Rt.prototype.getKerningTables=function(e,t){if(this.font.tables.gpos)return this.getLookupTables(e,t,"kern",2)},(It.prototype=kt.prototype).createDefaultTable=function(){return{version:1,scripts:[{tag:"DFLT",script:{defaultLangSys:{reserved:0,reqFeatureIndex:65535,featureIndexes:[]},langSysRecords:[]}}],features:[],lookups:[]}},It.prototype.getSingle=function(e,t,r){for(var n=[],i=this.getLookupTables(t,r,e,1),o=0;o<i.length;o++)for(var a=i[o].subtables,s=0;s<a.length;s++){var l=a[s],u=this.expandCoverage(l.coverage),c=void 0;if(1===l.substFormat){var h=l.deltaGlyphId;for(c=0;c<u.length;c++){var f=u[c];n.push({sub:f,by:f+h})}}else{var d=l.substitute;for(c=0;c<u.length;c++)n.push({sub:u[c],by:d[c]})}}return n},It.prototype.getAlternates=function(e,t,r){for(var n=[],i=this.getLookupTables(t,r,e,3),o=0;o<i.length;o++)for(var a=i[o].subtables,s=0;s<a.length;s++)for(var l=a[s],u=this.expandCoverage(l.coverage),c=l.alternateSets,h=0;h<u.length;h++)n.push({sub:u[h],by:c[h]});return n},It.prototype.getLigatures=function(e,t,r){for(var n=[],i=this.getLookupTables(t,r,e,4),o=0;o<i.length;o++)for(var a=i[o].subtables,s=0;s<a.length;s++)for(var l=a[s],u=this.expandCoverage(l.coverage),c=l.ligatureSets,h=0;h<u.length;h++)for(var f=u[h],d=c[h],p=0;p<d.length;p++){var m=d[p];n.push({sub:[f].concat(m.components),by:m.ligGlyph})}return n},It.prototype.addSingle=function(e,t,r,n){var i=Nt(this.getLookupTables(r,n,e,1,!0)[0],2,{substFormat:2,coverage:{format:1,glyphs:[]},substitute:[]});P.assert(1===i.coverage.format,"Ligature: unable to modify coverage table format "+i.coverage.format);var o=t.sub,a=this.binSearch(i.coverage.glyphs,o);a<0&&(a=-1-a,i.coverage.glyphs.splice(a,0,o),i.substitute.splice(a,0,0)),i.substitute[a]=t.by},It.prototype.addAlternate=function(e,t,r,n){var i=Nt(this.getLookupTables(r,n,e,3,!0)[0],1,{substFormat:1,coverage:{format:1,glyphs:[]},alternateSets:[]});P.assert(1===i.coverage.format,"Ligature: unable to modify coverage table format "+i.coverage.format);var o=t.sub,a=this.binSearch(i.coverage.glyphs,o);a<0&&(a=-1-a,i.coverage.glyphs.splice(a,0,o),i.alternateSets.splice(a,0,0)),i.alternateSets[a]=t.by},It.prototype.addLigature=function(e,t,r,n){var i=this.getLookupTables(r,n,e,4,!0)[0],o=i.subtables[0];o||(o={substFormat:1,coverage:{format:1,glyphs:[]},ligatureSets:[]},i.subtables[0]=o),P.assert(1===o.coverage.format,"Ligature: unable to modify coverage table format "+o.coverage.format);var a=t.sub[0],s=t.sub.slice(1),l={ligGlyph:t.by,components:s},u=this.binSearch(o.coverage.glyphs,a);if(0<=u){for(var c=o.ligatureSets[u],h=0;h<c.length;h++)if(Ut(c[h].components,s))return;c.push(l)}else u=-1-u,o.coverage.glyphs.splice(u,0,a),o.ligatureSets.splice(u,0,[l])},It.prototype.getFeature=function(e,t,r){if(/ss\d\d/.test(e))return this.getSingle(e,t,r);switch(e){case"aalt":case"salt":return this.getSingle(e,t,r).concat(this.getAlternates(e,t,r));case"dlig":case"liga":case"rlig":return this.getLigatures(e,t,r)}},It.prototype.add=function(e,t,r,n){if(/ss\d\d/.test(e))return this.addSingle(e,t,r,n);switch(e){case"aalt":case"salt":return"number"==typeof t.by?this.addSingle(e,t,r,n):this.addAlternate(e,t,r,n);case"dlig":case"liga":case"rlig":return this.addLigature(e,t,r,n)}};var Wt,qt,Xt,Yt,Zt={getPath:zt,parse:function(e,t,r,n){for(var i=new we.GlyphSet(n),o=0;o<r.length-1;o+=1){var a=r[o];a!==r[o+1]?i.push(o,we.ttfGlyphLoader(n,o,jt,e,t+a,Ht)):i.push(o,we.glyphLoader(n,o))}return i}};function Qt(e){this.font=e,this.getCommands=function(e){return Zt.getPath(e).commands},this._fpgmState=this._prepState=void 0,this._errorState=0}function Kt(e){return e}function Jt(e){return Math.sign(e)*Math.round(Math.abs(e))}function $t(e){return Math.sign(e)*Math.round(Math.abs(2*e))/2}function er(e){return Math.sign(e)*(Math.round(Math.abs(e)+.5)-.5)}function tr(e){return Math.sign(e)*Math.ceil(Math.abs(e))}function rr(e){return Math.sign(e)*Math.floor(Math.abs(e))}function nr(e){var t=this.srPeriod,r=this.srPhase,n=1;return e<0&&(e=-e,n=-1),e+=this.srThreshold-r,e=Math.trunc(e/t)*t,(e+=r)<0?r*n:e*n}var ir={x:1,y:0,axis:"x",distance:function(e,t,r,n){return(r?e.xo:e.x)-(n?t.xo:t.x)},interpolate:function(e,t,r,n){var i,o,a,s,l,u,c;if(!n||n===this)return i=e.xo-t.xo,o=e.xo-r.xo,l=t.x-t.xo,u=r.x-r.xo,0===(c=(a=Math.abs(i))+(s=Math.abs(o)))?void(e.x=e.xo+(l+u)/2):void(e.x=e.xo+(l*s+u*a)/c);i=n.distance(e,t,!0,!0),o=n.distance(e,r,!0,!0),l=n.distance(t,t,!1,!0),u=n.distance(r,r,!1,!0),0!==(c=(a=Math.abs(i))+(s=Math.abs(o)))?ir.setRelative(e,e,(l*s+u*a)/c,n,!0):ir.setRelative(e,e,(l+u)/2,n,!0)},normalSlope:Number.NEGATIVE_INFINITY,setRelative:function(e,t,r,n,i){if(n&&n!==this){var o=i?t.xo:t.x,a=i?t.yo:t.y,s=o+r*n.x,l=a+r*n.y;e.x=s+(e.y-l)/n.normalSlope}else e.x=(i?t.xo:t.x)+r},slope:0,touch:function(e){e.xTouched=!0},touched:function(e){return e.xTouched},untouch:function(e){e.xTouched=!1}},or={x:0,y:1,axis:"y",distance:function(e,t,r,n){return(r?e.yo:e.y)-(n?t.yo:t.y)},interpolate:function(e,t,r,n){var i,o,a,s,l,u,c;if(!n||n===this)return i=e.yo-t.yo,o=e.yo-r.yo,l=t.y-t.yo,u=r.y-r.yo,0===(c=(a=Math.abs(i))+(s=Math.abs(o)))?void(e.y=e.yo+(l+u)/2):void(e.y=e.yo+(l*s+u*a)/c);i=n.distance(e,t,!0,!0),o=n.distance(e,r,!0,!0),l=n.distance(t,t,!1,!0),u=n.distance(r,r,!1,!0),0!==(c=(a=Math.abs(i))+(s=Math.abs(o)))?or.setRelative(e,e,(l*s+u*a)/c,n,!0):or.setRelative(e,e,(l+u)/2,n,!0)},normalSlope:0,setRelative:function(e,t,r,n,i){if(n&&n!==this){var o=i?t.xo:t.x,a=i?t.yo:t.y,s=o+r*n.x,l=a+r*n.y;e.y=l+n.normalSlope*(e.x-s)}else e.y=(i?t.yo:t.y)+r},slope:Number.POSITIVE_INFINITY,touch:function(e){e.yTouched=!0},touched:function(e){return e.yTouched},untouch:function(e){e.yTouched=!1}};function ar(e,t){this.x=e,this.y=t,this.axis=void 0,this.slope=t/e,this.normalSlope=-e/t,Object.freeze(this)}function sr(e,t){var r=Math.sqrt(e*e+t*t);return t/=r,1==(e/=r)&&0===t?ir:0===e&&1===t?or:new ar(e,t)}function lr(e,t,r,n){this.x=this.xo=Math.round(64*e)/64,this.y=this.yo=Math.round(64*t)/64,this.lastPointOfContour=r,this.onCurve=n,this.prevPointOnContour=void 0,this.nextPointOnContour=void 0,this.xTouched=!1,this.yTouched=!1,Object.preventExtensions(this)}Object.freeze(ir),Object.freeze(or),ar.prototype.distance=function(e,t,r,n){return this.x*ir.distance(e,t,r,n)+this.y*or.distance(e,t,r,n)},ar.prototype.interpolate=function(e,t,r,n){var i,o,a,s,l,u,c;a=n.distance(e,t,!0,!0),s=n.distance(e,r,!0,!0),i=n.distance(t,t,!1,!0),o=n.distance(r,r,!1,!0),0!==(c=(l=Math.abs(a))+(u=Math.abs(s)))?this.setRelative(e,e,(i*u+o*l)/c,n,!0):this.setRelative(e,e,(i+o)/2,n,!0)},ar.prototype.setRelative=function(e,t,r,n,i){n=n||this;var o=i?t.xo:t.x,a=i?t.yo:t.y,s=o+r*n.x,l=a+r*n.y,u=n.normalSlope,c=this.slope,h=e.x,f=e.y;e.x=(c*h-u*s+l-f)/(c-u),e.y=c*(e.x-h)+f},ar.prototype.touch=function(e){e.xTouched=!0,e.yTouched=!0},lr.prototype.nextTouched=function(e){for(var t=this.nextPointOnContour;!e.touched(t)&&t!==this;)t=t.nextPointOnContour;return t},lr.prototype.prevTouched=function(e){for(var t=this.prevPointOnContour;!e.touched(t)&&t!==this;)t=t.prevPointOnContour;return t};var ur=Object.freeze(new lr(0,0)),cr={cvCutIn:17/16,deltaBase:9,deltaShift:.125,loop:1,minDis:1,autoFlip:!0};function hr(e,t){switch(this.env=e,this.stack=[],this.prog=t,e){case"glyf":this.zp0=this.zp1=this.zp2=1,this.rp0=this.rp1=this.rp2=0;case"prep":this.fv=this.pv=this.dpv=ir,this.round=Jt}}function fr(e){for(var t=e.tZone=new Array(e.gZone.length),r=0;r<t.length;r++)t[r]=new lr(0,0)}function dr(e,t){var r,n=e.prog,i=e.ip,o=1;do{if(88===(r=n[++i]))o++;else if(89===r)o--;else if(64===r)i+=n[i+1]+1;else if(65===r)i+=2*n[i+1]+1;else if(176<=r&&r<=183)i+=r-176+1;else if(184<=r&&r<=191)i+=2*(r-184+1);else if(t&&1===o&&27===r)break}while(0<o);e.ip=i}function pr(e,r){t.DEBUG&&console.log(r.step,"SVTCA["+e.axis+"]"),r.fv=r.pv=r.dpv=e}function mr(e,r){t.DEBUG&&console.log(r.step,"SPVTCA["+e.axis+"]"),r.pv=r.dpv=e}function vr(e,r){t.DEBUG&&console.log(r.step,"SFVTCA["+e.axis+"]"),r.fv=e}function gr(e,r){var n,i,o=r.stack,a=o.pop(),s=o.pop(),l=r.z2[a],u=r.z1[s];t.DEBUG&&console.log("SPVTL["+e+"]",a,s),i=e?(n=l.y-u.y,u.x-l.x):(n=u.x-l.x,u.y-l.y),r.pv=r.dpv=sr(n,i)}function yr(e,r){var n,i,o=r.stack,a=o.pop(),s=o.pop(),l=r.z2[a],u=r.z1[s];t.DEBUG&&console.log("SFVTL["+e+"]",a,s),i=e?(n=l.y-u.y,u.x-l.x):(n=u.x-l.x,u.y-l.y),r.fv=sr(n,i)}function br(e){t.DEBUG&&console.log(e.step,"POP[]"),e.stack.pop()}function _r(e,r){var n=r.stack.pop(),i=r.z0[n],o=r.fv,a=r.pv;t.DEBUG&&console.log(r.step,"MDAP["+e+"]",n);var s=a.distance(i,ur);e&&(s=r.round(s)),o.setRelative(i,ur,s,a),o.touch(i),r.rp0=r.rp1=n}function wr(e,r){var n,i,o,a=r.z2,s=a.length-2;t.DEBUG&&console.log(r.step,"IUP["+e.axis+"]");for(var l=0;l<s;l++)n=a[l],e.touched(n)||(i=n.prevTouched(e))!==n&&(i===(o=n.nextTouched(e))&&e.setRelative(n,n,e.distance(i,i,!1,!0),e,!0),e.interpolate(n,i,o,e))}function xr(e,r){for(var n=r.stack,i=e?r.rp1:r.rp2,o=(e?r.z0:r.z1)[i],a=r.fv,s=r.pv,l=r.loop,u=r.z2;l--;){var c=n.pop(),h=u[c],f=s.distance(o,o,!1,!0);a.setRelative(h,h,f,s),a.touch(h),t.DEBUG&&console.log(r.step,(1<r.loop?"loop "+(r.loop-l)+": ":"")+"SHP["+(e?"rp1":"rp2")+"]",c)}r.loop=1}function Sr(e,r){var n=r.stack,i=e?r.rp1:r.rp2,o=(e?r.z0:r.z1)[i],a=r.fv,s=r.pv,l=n.pop(),u=r.z2[r.contours[l]],c=u;t.DEBUG&&console.log(r.step,"SHC["+e+"]",l);for(var h=s.distance(o,o,!1,!0);c!==o&&a.setRelative(c,c,h,s),(c=c.nextPointOnContour)!==u;);}function Er(e,r){var n,i,o=r.stack,a=e?r.rp1:r.rp2,s=(e?r.z0:r.z1)[a],l=r.fv,u=r.pv,c=o.pop();switch(t.DEBUG&&console.log(r.step,"SHZ["+e+"]",c),c){case 0:n=r.tZone;break;case 1:n=r.gZone;break;default:throw new Error("Invalid zone")}for(var h=u.distance(s,s,!1,!0),f=n.length-2,d=0;d<f;d++)i=n[d],l.setRelative(i,i,h,u)}function Mr(e,r){var n=r.stack,i=n.pop()/64,o=n.pop(),a=r.z1[o],s=r.z0[r.rp0],l=r.fv,u=r.pv;l.setRelative(a,s,i,u),l.touch(a),t.DEBUG&&console.log(r.step,"MSIRP["+e+"]",i,o),r.rp1=r.rp0,r.rp2=o,e&&(r.rp0=o)}function Tr(e,r){var n=r.stack,i=n.pop(),o=n.pop(),a=r.z0[o],s=r.fv,l=r.pv,u=r.cvt[i];t.DEBUG&&console.log(r.step,"MIAP["+e+"]",i,"(",u,")",o);var c=l.distance(a,ur);e&&(Math.abs(c-u)<r.cvCutIn&&(c=u),c=r.round(c)),s.setRelative(a,ur,c,l),0===r.zp0&&(a.xo=a.x,a.yo=a.y),s.touch(a),r.rp0=r.rp1=o}function Cr(e,r){var n=r.stack,i=n.pop(),o=r.z2[i];t.DEBUG&&console.log(r.step,"GC["+e+"]",i),n.push(64*r.dpv.distance(o,ur,e,!1))}function Lr(e,r){var n=r.stack,i=n.pop(),o=n.pop(),a=r.z1[i],s=r.z0[o],l=r.dpv.distance(s,a,e,e);t.DEBUG&&console.log(r.step,"MD["+e+"]",i,o,"->",l),r.stack.push(Math.round(64*l))}function Or(e,r){var n=r.stack,i=n.pop(),o=r.fv,a=r.pv,s=r.ppem,l=r.deltaBase+16*(e-1),u=r.deltaShift,c=r.z0;t.DEBUG&&console.log(r.step,"DELTAP["+e+"]",i,n);for(var h=0;h<i;h++){var f=n.pop(),d=n.pop();if(l+((240&d)>>4)===s){var p=(15&d)-8;0<=p&&p++,t.DEBUG&&console.log(r.step,"DELTAPFIX",f,"by",p*u);var m=c[f];o.setRelative(m,m,p*u,a)}}}function Pr(e,r){var n=r.stack,i=n.pop();t.DEBUG&&console.log(r.step,"ROUND[]"),n.push(64*r.round(i/64))}function Ar(e,r){var n=r.stack,i=n.pop(),o=r.ppem,a=r.deltaBase+16*(e-1),s=r.deltaShift;t.DEBUG&&console.log(r.step,"DELTAC["+e+"]",i,n);for(var l=0;l<i;l++){var u=n.pop(),c=n.pop();if(a+((240&c)>>4)===o){var h=(15&c)-8;0<=h&&h++;var f=h*s;t.DEBUG&&console.log(r.step,"DELTACFIX",u,"by",f),r.cvt[u]+=f}}}function Dr(e,r){var n,i,o=r.stack,a=o.pop(),s=o.pop(),l=r.z2[a],u=r.z1[s];t.DEBUG&&console.log(r.step,"SDPVTL["+e+"]",a,s),i=e?(n=l.y-u.y,u.x-l.x):(n=u.x-l.x,u.y-l.y),r.dpv=sr(n,i)}function kr(e,r){var n=r.stack,i=r.prog,o=r.ip;t.DEBUG&&console.log(r.step,"PUSHB["+e+"]");for(var a=0;a<e;a++)n.push(i[++o]);r.ip=o}function Rr(e,r){var n=r.ip,i=r.prog,o=r.stack;t.DEBUG&&console.log(r.ip,"PUSHW["+e+"]");for(var a=0;a<e;a++){var s=i[++n]<<8|i[++n];32768&s&&(s=-(1+(65535^s))),o.push(s)}r.ip=n}function Ir(e,r,n,i,o,a){var s,l,u,c,h=a.stack,f=e&&h.pop(),d=h.pop(),p=a.rp0,m=a.z0[p],v=a.z1[d],g=a.minDis,y=a.fv,b=a.dpv;u=0<=(l=s=b.distance(v,m,!0,!0))?1:-1,l=Math.abs(l),e&&(c=a.cvt[f],i&&Math.abs(l-c)<a.cvCutIn&&(l=c)),n&&l<g&&(l=g),i&&(l=a.round(l)),y.setRelative(v,m,u*l,b),y.touch(v),t.DEBUG&&console.log(a.step,(e?"MIRP[":"MDRP[")+(r?"M":"m")+(n?">":"_")+(i?"R":"_")+(0===o?"Gr":1===o?"Bl":2===o?"Wh":"")+"]",e?f+"("+a.cvt[f]+","+c+")":"",d,"(d =",s,"->",u*l,")"),a.rp1=a.rp0,a.rp2=d,r&&(a.rp0=d)}Qt.prototype.exec=function(e,r){if("number"!=typeof r)throw new Error("Point size is not a number!");if(!(2<this._errorState)){var n=this.font,i=this._prepState;if(!i||i.ppem!==r){var o=this._fpgmState;if(!o){hr.prototype=cr,(o=this._fpgmState=new hr("fpgm",n.tables.fpgm)).funcs=[],o.font=n,t.DEBUG&&(console.log("---EXEC FPGM---"),o.step=-1);try{qt(o)}catch(e){return console.log("Hinting error in FPGM:"+e),void(this._errorState=3)}}hr.prototype=o,(i=this._prepState=new hr("prep",n.tables.prep)).ppem=r;var a=n.tables.cvt;if(a)for(var s=i.cvt=new Array(a.length),l=r/n.unitsPerEm,u=0;u<a.length;u++)s[u]=a[u]*l;else i.cvt=[];t.DEBUG&&(console.log("---EXEC PREP---"),i.step=-1);try{qt(i)}catch(e){this._errorState<2&&console.log("Hinting error in PREP:"+e),this._errorState=2}}if(!(1<this._errorState))try{return Xt(e,i)}catch(e){return this._errorState<1&&(console.log("Hinting error:"+e),console.log("Note: further hinting errors are silenced")),void(this._errorState=1)}}},Xt=function(e,r){var n,i,o,a=r.ppem/r.font.unitsPerEm,s=a,l=e.components;if(hr.prototype=r,l){var u=r.font;i=[],n=[];for(var c=0;c<l.length;c++){var h=l[c],f=u.glyphs.get(h.glyphIndex);o=new hr("glyf",f.instructions),t.DEBUG&&(console.log("---EXEC COMP "+c+"---"),o.step=-1),Yt(f,o,a,s);for(var d=Math.round(h.dx*a),p=Math.round(h.dy*s),m=o.gZone,v=o.contours,g=0;g<m.length;g++){var y=m[g];y.xTouched=y.yTouched=!1,y.xo=y.x=y.x+d,y.yo=y.y=y.y+p}var b=i.length;i.push.apply(i,m);for(var _=0;_<v.length;_++)n.push(v[_]+b)}e.instructions&&!o.inhibitGridFit&&((o=new hr("glyf",e.instructions)).gZone=o.z0=o.z1=o.z2=i,o.contours=n,i.push(new lr(0,0),new lr(Math.round(e.advanceWidth*a),0)),t.DEBUG&&(console.log("---EXEC COMPOSITE---"),o.step=-1),qt(o),i.length-=2)}else o=new hr("glyf",e.instructions),t.DEBUG&&(console.log("---EXEC GLYPH---"),o.step=-1),Yt(e,o,a,s),i=o.gZone;return i},Yt=function(e,r,n,i){for(var o,a,s,l=e.points||[],u=l.length,c=r.gZone=r.z0=r.z1=r.z2=[],h=r.contours=[],f=0;f<u;f++)o=l[f],c[f]=new lr(o.x*n,o.y*i,o.lastPointOfContour,o.onCurve);for(var d=0;d<u;d++)o=c[d],a||(a=o,h.push(d)),o.lastPointOfContour?((o.nextPointOnContour=a).prevPointOnContour=o,a=void 0):(s=c[d+1],(o.nextPointOnContour=s).prevPointOnContour=o);if(!r.inhibitGridFit){if(t.DEBUG){console.log("PROCESSING GLYPH",r.stack);for(var p=0;p<u;p++)console.log(p,c[p].x,c[p].y)}if(c.push(new lr(0,0),new lr(Math.round(e.advanceWidth*n),0)),qt(r),c.length-=2,t.DEBUG){console.log("FINISHED GLYPH",r.stack);for(var m=0;m<u;m++)console.log(m,c[m].x,c[m].y)}}},qt=function(e){var r=e.prog;if(r){var n,i=r.length;for(e.ip=0;e.ip<i;e.ip++){if(t.DEBUG&&e.step++,!(n=Wt[r[e.ip]]))throw new Error("unknown instruction: 0x"+Number(r[e.ip]).toString(16));n(e)}}},Wt=[pr.bind(void 0,or),pr.bind(void 0,ir),mr.bind(void 0,or),mr.bind(void 0,ir),vr.bind(void 0,or),vr.bind(void 0,ir),gr.bind(void 0,0),gr.bind(void 0,1),yr.bind(void 0,0),yr.bind(void 0,1),function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"SPVFS[]",n,i),e.pv=e.dpv=sr(i,n)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"SPVFS[]",n,i),e.fv=sr(i,n)},function(e){var r=e.stack,n=e.pv;t.DEBUG&&console.log(e.step,"GPV[]"),r.push(16384*n.x),r.push(16384*n.y)},function(e){var r=e.stack,n=e.fv;t.DEBUG&&console.log(e.step,"GFV[]"),r.push(16384*n.x),r.push(16384*n.y)},function(e){e.fv=e.pv,t.DEBUG&&console.log(e.step,"SFVTPV[]")},function(e){var r=e.stack,n=r.pop(),i=r.pop(),o=r.pop(),a=r.pop(),s=r.pop(),l=e.z0,u=e.z1,c=l[n],h=l[i],f=u[o],d=u[a],p=e.z2[s];t.DEBUG&&console.log("ISECT[], ",n,i,o,a,s);var m=c.x,v=c.y,g=h.x,y=h.y,b=f.x,_=f.y,w=d.x,x=d.y,S=(m-g)*(_-x)-(v-y)*(b-w),E=m*y-v*g,M=b*x-_*w;p.x=(E*(b-w)-M*(m-g))/S,p.y=(E*(_-x)-M*(v-y))/S},function(e){e.rp0=e.stack.pop(),t.DEBUG&&console.log(e.step,"SRP0[]",e.rp0)},function(e){e.rp1=e.stack.pop(),t.DEBUG&&console.log(e.step,"SRP1[]",e.rp1)},function(e){e.rp2=e.stack.pop(),t.DEBUG&&console.log(e.step,"SRP2[]",e.rp2)},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZP0[]",r),e.zp0=r){case 0:e.tZone||fr(e),e.z0=e.tZone;break;case 1:e.z0=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZP1[]",r),e.zp1=r){case 0:e.tZone||fr(e),e.z1=e.tZone;break;case 1:e.z1=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZP2[]",r),e.zp2=r){case 0:e.tZone||fr(e),e.z2=e.tZone;break;case 1:e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){var r=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SZPS[]",r),e.zp0=e.zp1=e.zp2=r,r){case 0:e.tZone||fr(e),e.z0=e.z1=e.z2=e.tZone;break;case 1:e.z0=e.z1=e.z2=e.gZone;break;default:throw new Error("Invalid zone pointer")}},function(e){e.loop=e.stack.pop(),t.DEBUG&&console.log(e.step,"SLOOP[]",e.loop)},function(e){t.DEBUG&&console.log(e.step,"RTG[]"),e.round=Jt},function(e){t.DEBUG&&console.log(e.step,"RTHG[]"),e.round=er},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SMD[]",r),e.minDis=r/64},function(e){t.DEBUG&&console.log(e.step,"ELSE[]"),dr(e,!1)},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"JMPR[]",r),e.ip+=r-1},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SCVTCI[]",r),e.cvCutIn=r/64},void 0,void 0,function(e){var r=e.stack;t.DEBUG&&console.log(e.step,"DUP[]"),r.push(r[r.length-1])},br,function(e){t.DEBUG&&console.log(e.step,"CLEAR[]"),e.stack.length=0},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"SWAP[]"),r.push(n),r.push(i)},function(e){var r=e.stack;t.DEBUG&&console.log(e.step,"DEPTH[]"),r.push(r.length)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"CINDEX[]",n),r.push(r[r.length-n])},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"MINDEX[]",n),r.push(r.splice(r.length-n,1)[0])},void 0,void 0,void 0,function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"LOOPCALL[]",n,i);var o=e.ip,a=e.prog;e.prog=e.funcs[n];for(var s=0;s<i;s++)qt(e),t.DEBUG&&console.log(++e.step,s+1<i?"next loopcall":"done loopcall",s);e.ip=o,e.prog=a},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"CALL[]",r);var n=e.ip,i=e.prog;e.prog=e.funcs[r],qt(e),e.ip=n,e.prog=i,t.DEBUG&&console.log(++e.step,"returning from",r)},function(e){if("fpgm"!==e.env)throw new Error("FDEF not allowed here");var r=e.stack,n=e.prog,i=e.ip,o=r.pop(),a=i;for(t.DEBUG&&console.log(e.step,"FDEF[]",o);45!==n[++i];);e.ip=i,e.funcs[o]=n.slice(a+1,i)},void 0,_r.bind(void 0,0),_r.bind(void 0,1),wr.bind(void 0,or),wr.bind(void 0,ir),xr.bind(void 0,0),xr.bind(void 0,1),Sr.bind(void 0,0),Sr.bind(void 0,1),Er.bind(void 0,0),Er.bind(void 0,1),function(e){for(var r=e.stack,n=e.loop,i=e.fv,o=r.pop()/64,a=e.z2;n--;){var s=r.pop(),l=a[s];t.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-n)+": ":"")+"SHPIX[]",s,o),i.setRelative(l,l,o),i.touch(l)}e.loop=1},function(e){for(var r=e.stack,n=e.rp1,i=e.rp2,o=e.loop,a=e.z0[n],s=e.z1[i],l=e.fv,u=e.dpv,c=e.z2;o--;){var h=r.pop(),f=c[h];t.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-o)+": ":"")+"IP[]",h,n,"<->",i),l.interpolate(f,a,s,u),l.touch(f)}e.loop=1},Mr.bind(void 0,0),Mr.bind(void 0,1),function(e){for(var r=e.stack,n=e.rp0,i=e.z0[n],o=e.loop,a=e.fv,s=e.pv,l=e.z1;o--;){var u=r.pop(),c=l[u];t.DEBUG&&console.log(e.step,(1<e.loop?"loop "+(e.loop-o)+": ":"")+"ALIGNRP[]",u),a.setRelative(c,i,0,s),a.touch(c)}e.loop=1},function(e){t.DEBUG&&console.log(e.step,"RTDG[]"),e.round=$t},Tr.bind(void 0,0),Tr.bind(void 0,1),function(e){var r=e.prog,n=e.ip,i=e.stack,o=r[++n];t.DEBUG&&console.log(e.step,"NPUSHB[]",o);for(var a=0;a<o;a++)i.push(r[++n]);e.ip=n},function(e){var r=e.ip,n=e.prog,i=e.stack,o=n[++r];t.DEBUG&&console.log(e.step,"NPUSHW[]",o);for(var a=0;a<o;a++){var s=n[++r]<<8|n[++r];32768&s&&(s=-(1+(65535^s))),i.push(s)}e.ip=r},function(e){var r=e.stack,n=e.store;n=n||(e.store=[]);var i=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"WS",i,o),n[o]=i},function(e){var r=e.stack,n=e.store,i=r.pop();t.DEBUG&&console.log(e.step,"RS",i);var o=n&&n[i]||0;r.push(o)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"WCVTP",n,i),e.cvt[i]=n/64},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"RCVT",n),r.push(64*e.cvt[n])},Cr.bind(void 0,0),Cr.bind(void 0,1),void 0,Lr.bind(void 0,0),Lr.bind(void 0,1),function(e){t.DEBUG&&console.log(e.step,"MPPEM[]"),e.stack.push(e.ppem)},void 0,function(e){t.DEBUG&&console.log(e.step,"FLIPON[]"),e.autoFlip=!0},void 0,void 0,function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"LT[]",n,i),r.push(i<n?1:0)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"LTEQ[]",n,i),r.push(i<=n?1:0)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"GT[]",n,i),r.push(n<i?1:0)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"GTEQ[]",n,i),r.push(n<=i?1:0)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"EQ[]",n,i),r.push(n===i?1:0)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"NEQ[]",n,i),r.push(n!==i?1:0)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"ODD[]",n),r.push(Math.trunc(n)%2?1:0)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"EVEN[]",n),r.push(Math.trunc(n)%2?0:1)},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"IF[]",r),r||(dr(e,!0),t.DEBUG&&console.log(e.step,"EIF[]"))},function(e){t.DEBUG&&console.log(e.step,"EIF[]")},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"AND[]",n,i),r.push(n&&i?1:0)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"OR[]",n,i),r.push(n||i?1:0)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"NOT[]",n),r.push(n?0:1)},Or.bind(void 0,1),function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SDB[]",r),e.deltaBase=r},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SDS[]",r),e.deltaShift=Math.pow(.5,r)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"ADD[]",n,i),r.push(i+n)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"SUB[]",n,i),r.push(i-n)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"DIV[]",n,i),r.push(64*i/n)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"MUL[]",n,i),r.push(i*n/64)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"ABS[]",n),r.push(Math.abs(n))},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"NEG[]",n),r.push(-n)},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"FLOOR[]",n),r.push(64*Math.floor(n/64))},function(e){var r=e.stack,n=r.pop();t.DEBUG&&console.log(e.step,"CEILING[]",n),r.push(64*Math.ceil(n/64))},Pr.bind(void 0,0),Pr.bind(void 0,1),Pr.bind(void 0,2),Pr.bind(void 0,3),void 0,void 0,void 0,void 0,function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"WCVTF[]",n,i),e.cvt[i]=n*e.ppem/e.font.unitsPerEm},Or.bind(void 0,2),Or.bind(void 0,3),Ar.bind(void 0,1),Ar.bind(void 0,2),Ar.bind(void 0,3),function(e){var r,n=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"SROUND[]",n),e.round=nr,192&n){case 0:r=.5;break;case 64:r=1;break;case 128:r=2;break;default:throw new Error("invalid SROUND value")}switch(e.srPeriod=r,48&n){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*r;break;case 32:e.srPhase=.5*r;break;case 48:e.srPhase=.75*r;break;default:throw new Error("invalid SROUND value")}n&=15,e.srThreshold=0===n?0:(n/8-.5)*r},function(e){var r,n=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"S45ROUND[]",n),e.round=nr,192&n){case 0:r=Math.sqrt(2)/2;break;case 64:r=Math.sqrt(2);break;case 128:r=2*Math.sqrt(2);break;default:throw new Error("invalid S45ROUND value")}switch(e.srPeriod=r,48&n){case 0:e.srPhase=0;break;case 16:e.srPhase=.25*r;break;case 32:e.srPhase=.5*r;break;case 48:e.srPhase=.75*r;break;default:throw new Error("invalid S45ROUND value")}n&=15,e.srThreshold=0===n?0:(n/8-.5)*r},void 0,void 0,function(e){t.DEBUG&&console.log(e.step,"ROFF[]"),e.round=Kt},void 0,function(e){t.DEBUG&&console.log(e.step,"RUTG[]"),e.round=tr},function(e){t.DEBUG&&console.log(e.step,"RDTG[]"),e.round=rr},br,br,void 0,void 0,void 0,void 0,void 0,function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SCANCTRL[]",r)},Dr.bind(void 0,0),Dr.bind(void 0,1),function(e){var r=e.stack,n=r.pop(),i=0;t.DEBUG&&console.log(e.step,"GETINFO[]",n),1&n&&(i=35),32&n&&(i|=4096),r.push(i)},void 0,function(e){var r=e.stack,n=r.pop(),i=r.pop(),o=r.pop();t.DEBUG&&console.log(e.step,"ROLL[]"),r.push(i),r.push(n),r.push(o)},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"MAX[]",n,i),r.push(Math.max(i,n))},function(e){var r=e.stack,n=r.pop(),i=r.pop();t.DEBUG&&console.log(e.step,"MIN[]",n,i),r.push(Math.min(i,n))},function(e){var r=e.stack.pop();t.DEBUG&&console.log(e.step,"SCANTYPE[]",r)},function(e){var r=e.stack.pop(),n=e.stack.pop();switch(t.DEBUG&&console.log(e.step,"INSTCTRL[]",r,n),r){case 1:return void(e.inhibitGridFit=!!n);case 2:return void(e.ignoreCvt=!!n);default:throw new Error("invalid INSTCTRL[] selector")}},void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,kr.bind(void 0,1),kr.bind(void 0,2),kr.bind(void 0,3),kr.bind(void 0,4),kr.bind(void 0,5),kr.bind(void 0,6),kr.bind(void 0,7),kr.bind(void 0,8),Rr.bind(void 0,1),Rr.bind(void 0,2),Rr.bind(void 0,3),Rr.bind(void 0,4),Rr.bind(void 0,5),Rr.bind(void 0,6),Rr.bind(void 0,7),Rr.bind(void 0,8),Ir.bind(void 0,0,0,0,0,0),Ir.bind(void 0,0,0,0,0,1),Ir.bind(void 0,0,0,0,0,2),Ir.bind(void 0,0,0,0,0,3),Ir.bind(void 0,0,0,0,1,0),Ir.bind(void 0,0,0,0,1,1),Ir.bind(void 0,0,0,0,1,2),Ir.bind(void 0,0,0,0,1,3),Ir.bind(void 0,0,0,1,0,0),Ir.bind(void 0,0,0,1,0,1),Ir.bind(void 0,0,0,1,0,2),Ir.bind(void 0,0,0,1,0,3),Ir.bind(void 0,0,0,1,1,0),Ir.bind(void 0,0,0,1,1,1),Ir.bind(void 0,0,0,1,1,2),Ir.bind(void 0,0,0,1,1,3),Ir.bind(void 0,0,1,0,0,0),Ir.bind(void 0,0,1,0,0,1),Ir.bind(void 0,0,1,0,0,2),Ir.bind(void 0,0,1,0,0,3),Ir.bind(void 0,0,1,0,1,0),Ir.bind(void 0,0,1,0,1,1),Ir.bind(void 0,0,1,0,1,2),Ir.bind(void 0,0,1,0,1,3),Ir.bind(void 0,0,1,1,0,0),Ir.bind(void 0,0,1,1,0,1),Ir.bind(void 0,0,1,1,0,2),Ir.bind(void 0,0,1,1,0,3),Ir.bind(void 0,0,1,1,1,0),Ir.bind(void 0,0,1,1,1,1),Ir.bind(void 0,0,1,1,1,2),Ir.bind(void 0,0,1,1,1,3),Ir.bind(void 0,1,0,0,0,0),Ir.bind(void 0,1,0,0,0,1),Ir.bind(void 0,1,0,0,0,2),Ir.bind(void 0,1,0,0,0,3),Ir.bind(void 0,1,0,0,1,0),Ir.bind(void 0,1,0,0,1,1),Ir.bind(void 0,1,0,0,1,2),Ir.bind(void 0,1,0,0,1,3),Ir.bind(void 0,1,0,1,0,0),Ir.bind(void 0,1,0,1,0,1),Ir.bind(void 0,1,0,1,0,2),Ir.bind(void 0,1,0,1,0,3),Ir.bind(void 0,1,0,1,1,0),Ir.bind(void 0,1,0,1,1,1),Ir.bind(void 0,1,0,1,1,2),Ir.bind(void 0,1,0,1,1,3),Ir.bind(void 0,1,1,0,0,0),Ir.bind(void 0,1,1,0,0,1),Ir.bind(void 0,1,1,0,0,2),Ir.bind(void 0,1,1,0,0,3),Ir.bind(void 0,1,1,0,1,0),Ir.bind(void 0,1,1,0,1,1),Ir.bind(void 0,1,1,0,1,2),Ir.bind(void 0,1,1,0,1,3),Ir.bind(void 0,1,1,1,0,0),Ir.bind(void 0,1,1,1,0,1),Ir.bind(void 0,1,1,1,0,2),Ir.bind(void 0,1,1,1,0,3),Ir.bind(void 0,1,1,1,1,0),Ir.bind(void 0,1,1,1,1,1),Ir.bind(void 0,1,1,1,1,2),Ir.bind(void 0,1,1,1,1,3)];var Ur=Array.from||function(e){return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g)||[]};function Nr(e){(e=e||{}).empty||(Ft(e.familyName,"When creating a new Font object, familyName is required."),Ft(e.styleName,"When creating a new Font object, styleName is required."),Ft(e.unitsPerEm,"When creating a new Font object, unitsPerEm is required."),Ft(e.ascender,"When creating a new Font object, ascender is required."),Ft(e.descender,"When creating a new Font object, descender is required."),Ft(e.descender<0,"Descender should be negative (e.g. -512)."),this.names={fontFamily:{en:e.familyName||" "},fontSubfamily:{en:e.styleName||" "},fullName:{en:e.fullName||e.familyName+" "+e.styleName},postScriptName:{en:e.postScriptName||(e.familyName+e.styleName).replace(/\s/g,"")},designer:{en:e.designer||" "},designerURL:{en:e.designerURL||" "},manufacturer:{en:e.manufacturer||" "},manufacturerURL:{en:e.manufacturerURL||" "},license:{en:e.license||" "},licenseURL:{en:e.licenseURL||" "},version:{en:e.version||"Version 0.1"},description:{en:e.description||" "},copyright:{en:e.copyright||" "},trademark:{en:e.trademark||" "}},this.unitsPerEm=e.unitsPerEm||1e3,this.ascender=e.ascender,this.descender=e.descender,this.createdTimestamp=e.createdTimestamp,this.tables={os2:{usWeightClass:e.weightClass||this.usWeightClasses.MEDIUM,usWidthClass:e.widthClass||this.usWidthClasses.MEDIUM,fsSelection:e.fsSelection||this.fsSelectionValues.REGULAR}}),this.supported=!0,this.glyphs=new we.GlyphSet(this,e.glyphs||[]),this.encoding=new de(this),this.position=new Rt(this),this.substitution=new It(this),this.tables=this.tables||{},Object.defineProperty(this,"hinting",{get:function(){return this._hinting?this._hinting:"truetype"===this.outlinesFormat?this._hinting=new Qt(this):void 0}})}function Br(e,t,r,n){var i={},o=new ae.Parser(e,t);i.name=n[o.parseUShort()]||{},o.skip("uShort",1),i.coordinates={};for(var a=0;a<r.length;++a)i.coordinates[r[a].tag]=o.parseFixed();return i}Nr.prototype.hasChar=function(e){return null!==this.encoding.charToGlyphIndex(e)},Nr.prototype.charToGlyphIndex=function(e){return this.encoding.charToGlyphIndex(e)},Nr.prototype.charToGlyph=function(e){var t=this.charToGlyphIndex(e);return this.glyphs.get(t)||this.glyphs.get(0)},Nr.prototype.stringToGlyphs=function(e,t){t=t||this.defaultRenderOptions;for(var r=Ur(e),n=[],i=0;i<r.length;i+=1){var o=r[i];n.push(this.charToGlyphIndex(o))}var a=n.length;if(t.features){var s=t.script||this.substitution.getDefaultScriptName(),l=[];t.features.liga&&(l=l.concat(this.substitution.getFeature("liga",s,t.language))),t.features.rlig&&(l=l.concat(this.substitution.getFeature("rlig",s,t.language)));for(var u=0;u<a;u+=1)for(var c=0;c<l.length;c++){for(var h=l[c],f=h.sub,d=f.length,p=0;p<d&&f[p]===n[u+p];)p++;p===d&&(n.splice(u,d,h.by),a=a-d+1)}}for(var m=new Array(a),v=this.glyphs.get(0),g=0;g<a;g+=1)m[g]=this.glyphs.get(n[g])||v;return m},Nr.prototype.nameToGlyphIndex=function(e){return this.glyphNames.nameToGlyphIndex(e)},Nr.prototype.nameToGlyph=function(e){var t=this.nameToGlyphIndex(e);return this.glyphs.get(t)||this.glyphs.get(0)},Nr.prototype.glyphIndexToName=function(e){return this.glyphNames.glyphIndexToName?this.glyphNames.glyphIndexToName(e):""},Nr.prototype.getKerningValue=function(e,t){e=e.index||e,t=t.index||t;var r=this.position.defaultKerningTables;return r?this.position.getKerningValue(r,e,t):this.kerningPairs[e+","+t]||0},Nr.prototype.defaultRenderOptions={kerning:!0,features:{liga:!0,rlig:!0}},Nr.prototype.forEachGlyph=function(e,t,r,n,i,o){t=void 0!==t?t:0,r=void 0!==r?r:0,n=void 0!==n?n:72,i=i||this.defaultRenderOptions;var a,s=1/this.unitsPerEm*n,l=this.stringToGlyphs(e,i);if(i.kerning){var u=i.script||this.position.getDefaultScriptName();a=this.position.getKerningTables(u,i.language)}for(var c=0;c<l.length;c+=1){var h=l[c];o.call(this,h,t,r,n,i),h.advanceWidth&&(t+=h.advanceWidth*s),i.kerning&&c<l.length-1&&(t+=(a?this.position.getKerningValue(a,h.index,l[c+1].index):this.getKerningValue(h,l[c+1]))*s),i.letterSpacing?t+=i.letterSpacing*n:i.tracking&&(t+=i.tracking/1e3*n)}return t},Nr.prototype.getPath=function(e,t,r,n,i){var o=new C;return this.forEachGlyph(e,t,r,n,i,(function(e,t,r,n){var a=e.getPath(t,r,n,i,this);o.extend(a)})),o},Nr.prototype.getPaths=function(e,t,r,n,i){var o=[];return this.forEachGlyph(e,t,r,n,i,(function(e,t,r,n){var a=e.getPath(t,r,n,i,this);o.push(a)})),o},Nr.prototype.getAdvanceWidth=function(e,t,r){return this.forEachGlyph(e,0,0,t,r,(function(){}))},Nr.prototype.draw=function(e,t,r,n,i,o){this.getPath(t,r,n,i,o).draw(e)},Nr.prototype.drawPoints=function(e,t,r,n,i,o){this.forEachGlyph(t,r,n,i,o,(function(t,r,n,i){t.drawPoints(e,r,n,i)}))},Nr.prototype.drawMetrics=function(e,t,r,n,i,o){this.forEachGlyph(t,r,n,i,o,(function(t,r,n,i){t.drawMetrics(e,r,n,i)}))},Nr.prototype.getEnglishName=function(e){var t=this.names[e];if(t)return t.en},Nr.prototype.validate=function(){var e=this;function t(t){var r=e.getEnglishName(t);r&&r.trim().length}t("fontFamily"),t("weightName"),t("manufacturer"),t("copyright"),t("version"),this.unitsPerEm},Nr.prototype.toTables=function(){return Ot(this)},Nr.prototype.toBuffer=function(){return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."),this.toArrayBuffer()},Nr.prototype.toArrayBuffer=function(){for(var e=this.toTables().encode(),t=new ArrayBuffer(e.length),r=new Uint8Array(t),n=0;n<e.length;n++)r[n]=e[n];return t},Nr.prototype.download=function(t){var r=this.getEnglishName("fontFamily"),i=this.getEnglishName("fontSubfamily");t=t||r.replace(/\s/g,"")+"-"+i+".otf";var o=this.toArrayBuffer();if("undefined"!=typeof window)window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem,window.requestFileSystem(window.TEMPORARY,o.byteLength,(function(e){e.root.getFile(t,{create:!0},(function(e){e.createWriter((function(t){var r=new DataView(o),n=new Blob([r],{type:"font/opentype"});t.write(n),t.addEventListener("writeend",(function(){location.href=e.toURL()}),!1)}))}))}),(function(e){throw new Error(e.name+": "+e.message)}));else{var a=e("fs"),s=function(e){for(var t=new n(e.byteLength),r=new Uint8Array(e),i=0;i<t.length;++i)t[i]=r[i];return t}(o);a.writeFileSync(t,s)}},Nr.prototype.fsSelectionValues={ITALIC:1,UNDERSCORE:2,NEGATIVE:4,OUTLINED:8,STRIKEOUT:16,BOLD:32,REGULAR:64,USER_TYPO_METRICS:128,WWS:256,OBLIQUE:512},Nr.prototype.usWidthClasses={ULTRA_CONDENSED:1,EXTRA_CONDENSED:2,CONDENSED:3,SEMI_CONDENSED:4,MEDIUM:5,SEMI_EXPANDED:6,EXPANDED:7,EXTRA_EXPANDED:8,ULTRA_EXPANDED:9},Nr.prototype.usWeightClasses={THIN:100,EXTRA_LIGHT:200,LIGHT:300,NORMAL:400,MEDIUM:500,SEMI_BOLD:600,BOLD:700,EXTRA_BOLD:800,BLACK:900};var Fr=function(e,t,r){var n=new ae.Parser(e,t),i=n.parseULong();P.argument(65536===i,"Unsupported fvar table version.");var o=n.parseOffset16();n.skip("uShort",1);for(var a,s,l,u,c,h=n.parseUShort(),f=n.parseUShort(),d=n.parseUShort(),p=n.parseUShort(),m=[],v=0;v<h;v++)m.push((a=e,s=t+o+v*f,l=r,c=u=void 0,u={},c=new ae.Parser(a,s),u.tag=c.parseTag(),u.minValue=c.parseFixed(),u.defaultValue=c.parseFixed(),u.maxValue=c.parseFixed(),c.skip("uShort",1),u.name=l[c.parseUShort()]||{},u));for(var g=[],y=t+o+h*f,b=0;b<d;b++)g.push(Br(e,y+b*p,m,r));return{axes:m,instances:g}},Gr=new Array(10);Gr[1]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();return 1===t?{posFormat:1,coverage:this.parsePointer(ie.coverage),value:this.parseValueRecord()}:2===t?{posFormat:2,coverage:this.parsePointer(ie.coverage),values:this.parseValueRecordList()}:void P.assert(!1,"0x"+e.toString(16)+": GPOS lookup type 1 format must be 1 or 2.")},Gr[2]=function(){var e=this.offset+this.relativeOffset,t=this.parseUShort();P.assert(1===t||2===t,"0x"+e.toString(16)+": GPOS lookup type 2 format must be 1 or 2.");var r=this.parsePointer(ie.coverage),n=this.parseUShort(),i=this.parseUShort();if(1===t)return{posFormat:t,coverage:r,valueFormat1:n,valueFormat2:i,pairSets:this.parseList(ie.pointer(ie.list((function(){return{secondGlyph:this.parseUShort(),value1:this.parseValueRecord(n),value2:this.parseValueRecord(i)}}))))};if(2===t){var o=this.parsePointer(ie.classDef),a=this.parsePointer(ie.classDef),s=this.parseUShort(),l=this.parseUShort();return{posFormat:t,coverage:r,valueFormat1:n,valueFormat2:i,classDef1:o,classDef2:a,class1Count:s,class2Count:l,classRecords:this.parseList(s,ie.list(l,(function(){return{value1:this.parseValueRecord(n),value2:this.parseValueRecord(i)}})))}}},Gr[3]=function(){return{error:"GPOS Lookup 3 not supported"}},Gr[4]=function(){return{error:"GPOS Lookup 4 not supported"}},Gr[5]=function(){return{error:"GPOS Lookup 5 not supported"}},Gr[6]=function(){return{error:"GPOS Lookup 6 not supported"}},Gr[7]=function(){return{error:"GPOS Lookup 7 not supported"}},Gr[8]=function(){return{error:"GPOS Lookup 8 not supported"}},Gr[9]=function(){return{error:"GPOS Lookup 9 not supported"}};new Array(10);var jr=function(e,t){var r=new ie(e,t=t||0),n=r.parseVersion(1);return P.argument(1===n||1.1===n,"Unsupported GPOS table version "+n),1===n?{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Gr)}:{version:n,scripts:r.parseScriptList(),features:r.parseFeatureList(),lookups:r.parseLookupList(Gr),variations:r.parseFeatureVariationsList()}},Vr=function(e,t){var r=new ae.Parser(e,t),n=r.parseUShort();if(0===n)return function(e){var t={};e.skip("uShort");var r=e.parseUShort();P.argument(0===r,"Unsupported kern sub-table version."),e.skip("uShort",2);var n=e.parseUShort();e.skip("uShort",3);for(var i=0;i<n;i+=1){var o=e.parseUShort(),a=e.parseUShort(),s=e.parseShort();t[o+","+a]=s}return t}(r);if(1===n)return function(e){var t={};e.skip("uShort"),1<e.parseULong()&&console.warn("Only the first kern subtable is supported."),e.skip("uLong");var r=255&e.parseUShort();if(e.skip("uShort"),0==r){var n=e.parseUShort();e.skip("uShort",3);for(var i=0;i<n;i+=1){var o=e.parseUShort(),a=e.parseUShort(),s=e.parseShort();t[o+","+a]=s}}return t}(r);throw new Error("Unsupported kern table version ("+n+").")},zr=function(e,t,r,n){for(var i=new ae.Parser(e,t),o=n?i.parseUShort:i.parseULong,a=[],s=0;s<r+1;s+=1){var l=o.call(i);n&&(l*=2),a.push(l)}return a};function Hr(t,r){e("fs").readFile(t,(function(e,t){if(e)return r(e.message);r(null,Bt(t))}))}function Wr(e,t){var r=new XMLHttpRequest;r.open("get",e,!0),r.responseType="arraybuffer",r.onload=function(){return r.response?t(null,r.response):t("Font could not be loaded: "+r.statusText)},r.onerror=function(){t("Font could not be loaded")},r.send()}function qr(e,t){for(var r=[],n=12,i=0;i<t;i+=1){var o=ae.getTag(e,n),a=ae.getULong(e,n+4),s=ae.getULong(e,n+8),l=ae.getULong(e,n+12);r.push({tag:o,checksum:a,offset:s,length:l,compression:!1}),n+=16}return r}function Xr(e,t){if("WOFF"!==t.compression)return{data:e,offset:t.offset};var r=new Uint8Array(e.buffer,t.offset+2,t.compressedLength-2),n=new Uint8Array(t.length);if(function(e,t){var r,n,i=new a(e,t);do{switch(r=b(i),_(i,2,0)){case 0:n=E(i);break;case 1:n=S(i,s,l);break;case 2:x(i,i.ltree,i.dtree),n=S(i,i.ltree,i.dtree);break;default:n=-3}if(0!==n)throw new Error("Data error")}while(!r);i.destLen<i.dest.length?"function"==typeof i.dest.slice?i.dest.slice(0,i.destLen):i.dest.subarray(0,i.destLen):i.dest}(r,n),n.byteLength!==t.length)throw new Error("Decompression error: "+t.tag+" decompressed length doesn't match recorded length");return{data:new DataView(n.buffer,0),offset:0}}function Yr(e){var t,r,n,i,o,a,s,l,u,c,h,f,d,p,m=new Nr({empty:!0}),v=new DataView(e,0),g=[],y=ae.getTag(v,0);if(y===String.fromCharCode(0,1,0,0)||"true"===y||"typ1"===y)m.outlinesFormat="truetype",g=qr(v,n=ae.getUShort(v,4));else if("OTTO"===y)m.outlinesFormat="cff",g=qr(v,n=ae.getUShort(v,4));else{if("wOFF"!==y)throw new Error("Unsupported OpenType signature "+y);var b=ae.getTag(v,4);if(b===String.fromCharCode(0,1,0,0))m.outlinesFormat="truetype";else{if("OTTO"!==b)throw new Error("Unsupported OpenType flavor "+y);m.outlinesFormat="cff"}g=function(e,t){for(var r=[],n=44,i=0;i<t;i+=1){var o,a=ae.getTag(e,n),s=ae.getULong(e,n+4),l=ae.getULong(e,n+8),u=ae.getULong(e,n+12);o=l<u&&"WOFF",r.push({tag:a,offset:s,compression:o,compressedLength:l,length:u}),n+=20}return r}(v,n=ae.getUShort(v,12))}for(var _=0;_<n;_+=1){var w=g[_],x=void 0;switch(w.tag){case"cmap":x=Xr(v,w),m.tables.cmap=se(x.data,x.offset),m.encoding=new pe(m.tables.cmap);break;case"cvt ":x=Xr(v,w),p=new ae.Parser(x.data,x.offset),m.tables.cvt=p.parseShortList(w.length/2);break;case"fvar":o=w;break;case"fpgm":x=Xr(v,w),p=new ae.Parser(x.data,x.offset),m.tables.fpgm=p.parseByteList(w.length);break;case"head":x=Xr(v,w),m.tables.head=je(x.data,x.offset),m.unitsPerEm=m.tables.head.unitsPerEm,t=m.tables.head.indexToLocFormat;break;case"hhea":x=Xr(v,w),m.tables.hhea=ze(x.data,x.offset),m.ascender=m.tables.hhea.ascender,m.descender=m.tables.hhea.descender,m.numberOfHMetrics=m.tables.hhea.numberOfHMetrics;break;case"hmtx":u=w;break;case"ltag":x=Xr(v,w),r=Ye(x.data,x.offset);break;case"maxp":x=Xr(v,w),m.tables.maxp=Ze(x.data,x.offset),m.numGlyphs=m.tables.maxp.numGlyphs;break;case"name":f=w;break;case"OS/2":x=Xr(v,w),m.tables.os2=ft(x.data,x.offset);break;case"post":x=Xr(v,w),m.tables.post=mt(x.data,x.offset),m.glyphNames=new ve(m.tables.post);break;case"prep":x=Xr(v,w),p=new ae.Parser(x.data,x.offset),m.tables.prep=p.parseByteList(w.length);break;case"glyf":a=w;break;case"loca":h=w;break;case"CFF ":i=w;break;case"kern":c=w;break;case"GPOS":s=w;break;case"GSUB":l=w;break;case"meta":d=w}}var S=Xr(v,f);if(m.tables.name=ut(S.data,S.offset,r),m.names=m.tables.name,a&&h){var E=0===t,M=Xr(v,h),T=zr(M.data,M.offset,m.numGlyphs,E),C=Xr(v,a);m.glyphs=Zt.parse(C.data,C.offset,T,m)}else{if(!i)throw new Error("Font doesn't contain TrueType or CFF outlines.");var L=Xr(v,i);Fe(L.data,L.offset,m)}var O=Xr(v,u);if(We(O.data,O.offset,m.numberOfHMetrics,m.numGlyphs,m.glyphs),function(e){for(var t,r=e.tables.cmap.glyphIndexMap,n=Object.keys(r),i=0;i<n.length;i+=1){var o=n[i],a=r[o];(t=e.glyphs.get(a)).addUnicode(parseInt(o))}for(var s=0;s<e.glyphs.length;s+=1)t=e.glyphs.get(s),e.cffEncoding?e.isCIDFont?t.name="gid"+s:t.name=e.cffEncoding.charset[s]:e.glyphNames.names&&(t.name=e.glyphNames.glyphIndexToName(s))}(m),c){var P=Xr(v,c);m.kerningPairs=Vr(P.data,P.offset)}else m.kerningPairs={};if(s){var A=Xr(v,s);m.tables.gpos=jr(A.data,A.offset),m.position.init()}if(l){var D=Xr(v,l);m.tables.gsub=_t(D.data,D.offset)}if(o){var k=Xr(v,o);m.tables.fvar=Fr(k.data,k.offset,m.names)}if(d){var R=Xr(v,d);m.tables.meta=xt(R.data,R.offset),m.metas=m.tables.meta}return m}t.Font=Nr,t.Glyph=ye,t.Path=C,t.BoundingBox=T,t._parse=ae,t.parse=Yr,t.load=function(e,t){("undefined"==typeof window?Hr:Wr)(e,(function(e,r){if(e)return t(e);var n;try{n=Yr(r)}catch(e){return t(e,null)}return t(null,n)}))},t.loadSync=function(t){return Yr(Bt(e("fs").readFileSync(t)))},Object.defineProperty(t,"__esModule",{value:!0})}("object"==typeof r&&void 0!==t?r:this.opentype={})}).call(this,e("buffer").Buffer)},{buffer:4,fs:2}],13:[function(e,t,r){(function(e){function t(e,t){for(var r=0,n=e.length-1;0<=n;n--){var i=e[n];"."===i?e.splice(n,1):".."===i?(e.splice(n,1),r++):r&&(e.splice(n,1),r--)}if(t)for(;r--;)e.unshift("..");return e}function n(e,t){if(e.filter)return e.filter(t);for(var r=[],n=0;n<e.length;n++)t(e[n],n,e)&&r.push(e[n]);return r}r.resolve=function(){for(var r="",i=!1,o=arguments.length-1;-1<=o&&!i;o--){var a=0<=o?arguments[o]:e.cwd();if("string"!=typeof a)throw new TypeError("Arguments to path.resolve must be strings");a&&(r=a+"/"+r,i="/"===a.charAt(0))}return(i?"/":"")+(r=t(n(r.split("/"),(function(e){return!!e})),!i).join("/"))||"."},r.normalize=function(e){var o=r.isAbsolute(e),a="/"===i(e,-1);return(e=t(n(e.split("/"),(function(e){return!!e})),!o).join("/"))||o||(e="."),e&&a&&(e+="/"),(o?"/":"")+e},r.isAbsolute=function(e){return"/"===e.charAt(0)},r.join=function(){var e=Array.prototype.slice.call(arguments,0);return r.normalize(n(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},r.relative=function(e,t){function n(e){for(var t=0;t<e.length&&""===e[t];t++);for(var r=e.length-1;0<=r&&""===e[r];r--);return r<t?[]:e.slice(t,r-t+1)}e=r.resolve(e).substr(1),t=r.resolve(t).substr(1);for(var i=n(e.split("/")),o=n(t.split("/")),a=Math.min(i.length,o.length),s=a,l=0;l<a;l++)if(i[l]!==o[l]){s=l;break}var u=[];for(l=s;l<i.length;l++)u.push("..");return(u=u.concat(o.slice(s))).join("/")},r.sep="/",r.delimiter=":",r.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),r=47===t,n=-1,i=!0,o=e.length-1;1<=o;--o)if(47===(t=e.charCodeAt(o))){if(!i){n=o;break}}else i=!1;return-1===n?r?"/":".":r&&1===n?"/":e.slice(0,n)},r.basename=function(e,t){var r=function(e){"string"!=typeof e&&(e+="");var t,r=0,n=-1,i=!0;for(t=e.length-1;0<=t;--t)if(47===e.charCodeAt(t)){if(!i){r=t+1;break}}else-1===n&&(i=!1,n=t+1);return-1===n?"":e.slice(r,n)}(e);return t&&r.substr(-1*t.length)===t&&(r=r.substr(0,r.length-t.length)),r},r.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,r=0,n=-1,i=!0,o=0,a=e.length-1;0<=a;--a){var s=e.charCodeAt(a);if(47===s){if(i)continue;r=a+1;break}-1===n&&(i=!1,n=a+1),46===s?-1===t?t=a:1!==o&&(o=1):-1!==t&&(o=-1)}return-1===t||-1===n||0===o||1===o&&t===n-1&&t===r+1?"":e.slice(t,n)};var i=function(e,t,r){return e.substr(t,r)}}).call(this,e("_process"))},{_process:14}],14:[function(e,t,r){var n,i,o=t.exports={};function a(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:a}catch(e){n=a}try{i="function"==typeof clearTimeout?clearTimeout:s}catch(e){i=s}}();var u,c=[],h=!1,f=-1;function d(){h&&u&&(h=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!h){var e=l(d);h=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,h=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===s||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function v(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(1<arguments.length)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new m(e,t)),1!==c.length||h||l(p)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},{}],15:[function(e,t,r){!function(e){"use strict";if(!e.fetch){var t="URLSearchParams"in e,r="Symbol"in e&&"iterator"in Symbol,n="FileReader"in e&&"Blob"in e&&function(){try{return new Blob,!0}catch(e){return!1}}(),i="FormData"in e,o="ArrayBuffer"in e;if(o)var a=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=function(e){return e&&DataView.prototype.isPrototypeOf(e)},l=ArrayBuffer.isView||function(e){return e&&-1<a.indexOf(Object.prototype.toString.call(e))};p.prototype.append=function(e,t){e=h(e),t=f(t);var r=this.map[e];this.map[e]=r?r+","+t:t},p.prototype.delete=function(e){delete this.map[h(e)]},p.prototype.get=function(e){return e=h(e),this.has(e)?this.map[e]:null},p.prototype.has=function(e){return this.map.hasOwnProperty(h(e))},p.prototype.set=function(e,t){this.map[h(e)]=f(t)},p.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},p.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),d(e)},p.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),d(e)},p.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),d(e)},r&&(p.prototype[Symbol.iterator]=p.prototype.entries);var u=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];_.prototype.clone=function(){return new _(this,{body:this._bodyInit})},b.call(_.prototype),b.call(x.prototype),x.prototype.clone=function(){return new x(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new p(this.headers),url:this.url})},x.error=function(){var e=new x(null,{status:0,statusText:""});return e.type="error",e};var c=[301,302,303,307,308];x.redirect=function(e,t){if(-1===c.indexOf(t))throw new RangeError("Invalid status code");return new x(null,{status:t,headers:{location:e}})},e.Headers=p,e.Request=_,e.Response=x,e.fetch=function(e,t){return new Promise((function(r,i){var o=new _(e,t),a=new XMLHttpRequest;a.onload=function(){var e,t,n={status:a.status,statusText:a.statusText,headers:(e=a.getAllResponseHeaders()||"",t=new p,e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var i=r.join(":").trim();t.append(n,i)}})),t)};n.url="responseURL"in a?a.responseURL:n.headers.get("X-Request-URL");var i="response"in a?a.response:a.responseText;r(new x(i,n))},a.onerror=function(){i(new TypeError("Network request failed"))},a.ontimeout=function(){i(new TypeError("Network request failed"))},a.open(o.method,o.url,!0),"include"===o.credentials?a.withCredentials=!0:"omit"===o.credentials&&(a.withCredentials=!1),"responseType"in a&&n&&(a.responseType="blob"),o.headers.forEach((function(e,t){a.setRequestHeader(t,e)})),a.send(void 0===o._bodyInit?null:o._bodyInit)}))},e.fetch.polyfill=!0}function h(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function f(e){return"string"!=typeof e&&(e=String(e)),e}function d(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return r&&(t[Symbol.iterator]=function(){return t}),t}function p(e){this.map={},e instanceof p?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function m(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function v(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function g(e){var t=new FileReader,r=v(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){if(this._bodyInit=e)if("string"==typeof e)this._bodyText=e;else if(n&&Blob.prototype.isPrototypeOf(e))this._bodyBlob=e;else if(i&&FormData.prototype.isPrototypeOf(e))this._bodyFormData=e;else if(t&&URLSearchParams.prototype.isPrototypeOf(e))this._bodyText=e.toString();else if(o&&n&&s(e))this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer]);else{if(!o||!ArrayBuffer.prototype.isPrototypeOf(e)&&!l(e))throw new Error("unsupported BodyInit type");this._bodyArrayBuffer=y(e)}else this._bodyText="";this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):t&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},n&&(this.blob=function(){var e=m(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?m(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var e,t,r,n=m(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,r=v(t=new FileReader),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},i&&(this.formData=function(){return this.text().then(w)}),this.json=function(){return this.text().then(JSON.parse)},this}function _(e,t){var r,n,i=(t=t||{}).body;if(e instanceof _){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new p(e.headers)),this.method=e.method,this.mode=e.mode,i||null==e._bodyInit||(i=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"omit",!t.headers&&this.headers||(this.headers=new p(t.headers)),this.method=(n=(r=t.method||this.method||"GET").toUpperCase(),-1<u.indexOf(n)?n:r),this.mode=t.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&i)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(i)}function w(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\+/g," "),i=r.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(i))}})),t}function x(e,t){t=t||{},this.type="default",this.status=void 0===t.status?200:t.status,this.ok=200<=this.status&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new p(t.headers),this.url=t.url||"",this._initBody(e)}}("undefined"!=typeof self?self:this)},{}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=a(e("../core/main")),o=a(e("../color/color_conversion"));function a(e){return e&&e.__esModule?e:{default:e}}var s=[{h:0,s:0,b:.8275,name:"gray"},{h:0,s:0,b:.8627,name:"gray"},{h:0,s:0,b:.7529,name:"gray"},{h:.0167,s:.1176,b:1,name:"light pink"}],l=[{h:0,s:0,b:0,name:"black"},{h:0,s:0,b:.5,name:"gray"},{h:0,s:0,b:1,name:"white"},{h:0,s:.5,b:.5,name:"dark maroon"},{h:0,s:.5,b:1,name:"salmon pink"},{h:0,s:1,b:0,name:"black"},{h:0,s:1,b:.5,name:"dark red"},{h:0,s:1,b:1,name:"red"},{h:5,s:0,b:1,name:"very light peach"},{h:5,s:.5,b:.5,name:"brown"},{h:5,s:.5,b:1,name:"peach"},{h:5,s:1,b:.5,name:"brick red"},{h:5,s:1,b:1,name:"crimson"},{h:10,s:0,b:1,name:"light peach"},{h:10,s:.5,b:.5,name:"brown"},{h:10,s:.5,b:1,name:"light orange"},{h:10,s:1,b:.5,name:"brown"},{h:10,s:1,b:1,name:"orange"},{h:15,s:0,b:1,name:"very light yellow"},{h:15,s:.5,b:.5,name:"olive green"},{h:15,s:.5,b:1,name:"light yellow"},{h:15,s:1,b:0,name:"dark olive green"},{h:15,s:1,b:.5,name:"olive green"},{h:15,s:1,b:1,name:"yellow"},{h:20,s:0,b:1,name:"very light yellow"},{h:20,s:.5,b:.5,name:"olive green"},{h:20,s:.5,b:1,name:"light yellow green"},{h:20,s:1,b:0,name:"dark olive green"},{h:20,s:1,b:.5,name:"dark yellow green"},{h:20,s:1,b:1,name:"yellow green"},{h:25,s:.5,b:.5,name:"dark yellow green"},{h:25,s:.5,b:1,name:"light green"},{h:25,s:1,b:.5,name:"dark green"},{h:25,s:1,b:1,name:"green"},{h:30,s:.5,b:1,name:"light green"},{h:30,s:1,b:.5,name:"dark green"},{h:30,s:1,b:1,name:"green"},{h:35,s:0,b:.5,name:"light green"},{h:35,s:0,b:1,name:"very light green"},{h:35,s:.5,b:.5,name:"dark green"},{h:35,s:.5,b:1,name:"light green"},{h:35,s:1,b:0,name:"very dark green"},{h:35,s:1,b:.5,name:"dark green"},{h:35,s:1,b:1,name:"green"},{h:40,s:0,b:1,name:"very light green"},{h:40,s:.5,b:.5,name:"dark green"},{h:40,s:.5,b:1,name:"light green"},{h:40,s:1,b:.5,name:"dark green"},{h:40,s:1,b:1,name:"green"},{h:45,s:.5,b:1,name:"light turquoise"},{h:45,s:1,b:.5,name:"dark turquoise"},{h:45,s:1,b:1,name:"turquoise"},{h:50,s:0,b:1,name:"light sky blue"},{h:50,s:.5,b:.5,name:"dark cyan"},{h:50,s:.5,b:1,name:"light cyan"},{h:50,s:1,b:.5,name:"dark cyan"},{h:50,s:1,b:1,name:"cyan"},{h:55,s:0,b:1,name:"light sky blue"},{h:55,s:.5,b:1,name:"light sky blue"},{h:55,s:1,b:.5,name:"dark blue"},{h:55,s:1,b:1,name:"sky blue"},{h:60,s:0,b:.5,name:"gray"},{h:60,s:0,b:1,name:"very light blue"},{h:60,s:.5,b:.5,name:"blue"},{h:60,s:.5,b:1,name:"light blue"},{h:60,s:1,b:.5,name:"navy blue"},{h:60,s:1,b:1,name:"blue"},{h:65,s:0,b:1,name:"lavender"},{h:65,s:.5,b:.5,name:"navy blue"},{h:65,s:.5,b:1,name:"light purple"},{h:65,s:1,b:.5,name:"dark navy blue"},{h:65,s:1,b:1,name:"blue"},{h:70,s:0,b:1,name:"lavender"},{h:70,s:.5,b:.5,name:"navy blue"},{h:70,s:.5,b:1,name:"lavender blue"},{h:70,s:1,b:.5,name:"dark navy blue"},{h:70,s:1,b:1,name:"blue"},{h:75,s:.5,b:1,name:"lavender"},{h:75,s:1,b:.5,name:"dark purple"},{h:75,s:1,b:1,name:"purple"},{h:80,s:.5,b:1,name:"pinkish purple"},{h:80,s:1,b:.5,name:"dark purple"},{h:80,s:1,b:1,name:"purple"},{h:85,s:0,b:1,name:"light pink"},{h:85,s:.5,b:.5,name:"purple"},{h:85,s:.5,b:1,name:"light fuchsia"},{h:85,s:1,b:.5,name:"dark fuchsia"},{h:85,s:1,b:1,name:"fuchsia"},{h:90,s:.5,b:.5,name:"dark fuchsia"},{h:90,s:.5,b:1,name:"hot pink"},{h:90,s:1,b:.5,name:"dark fuchsia"},{h:90,s:1,b:1,name:"fuchsia"},{h:95,s:0,b:1,name:"pink"},{h:95,s:.5,b:1,name:"light pink"},{h:95,s:1,b:.5,name:"dark magenta"},{h:95,s:1,b:1,name:"magenta"}];i.default.prototype._rgbColorName=function(e){var t=o.default._rgbaToHSBA(e);return function(e){var t;if(0!==e[0]){e[0]=Math.round(100*e[0]);var r=e[0].toString().split(""),i=r.length-1;r[i]=parseInt(r[i]),r[i]<2.5?r[i]=0:2.5<=r[i]&&r[i]<7.5&&(r[i]=5),2===r.length?(r[0]=parseInt(r[0]),7.5<=r[i]&&(r[i]=0,r[0]=r[0]+1),e[0]=10*r[0]+r[1]):7.5<=r[i]?e[0]=10:e[0]=r[i]}e[2]=e[2]/255;for(var o=e.length-1;1<=o;o--)e[o]<=.25?e[o]=0:.25<e[o]&&e[o]<.75?e[o]=.5:e[o]=1;if(0===e[0]&&0===e[1]&&1===e[2]){for(var a=2;0<=a;a--)n[a]=Math.round(1e4*n[a])/1e4;for(var u=0;u<s.length;u++){if(s[u].h===n[0]&&s[u].s===n[1]&&s[u].b===n[2]){t=s[u].name;break}t="white"}}else for(var c=0;c<l.length;c++)if(l[c].h===e[0]&&l[c].s===e[1]&&l[c].b===e[2]){t=l[c].name;break}return t}([(n=t)[0],t[1],t[2]])};var u=i.default;r.default=u},{"../color/color_conversion":22,"../core/main":36}],17:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n},o="_Description",a="_fallbackDesc",s="_fallbackTable",l="_Label",u="_labelDesc",c="_labelTable";function h(e){if("label"===e||"fallback"===e)throw new Error("description should not be LABEL or FALLBACK");return e.endsWith(".")||e.endsWith(";")||e.endsWith(",")||e.endsWith("?")||e.endsWith("!")||(e+="."),e}i.default.prototype.describe=function(e,t){if(i.default._validateParameters("describe",arguments),"string"==typeof e){var r=this.canvas.id;e=h(e),this.dummyDOM||(this.dummyDOM=document.getElementById(r).parentNode),this.descriptions||(this.descriptions={}),this.descriptions.fallback?this.descriptions.fallback.innerHTML!==e&&(this.descriptions.fallback.innerHTML=e):this._describeHTML("fallback",e),t===this.LABEL&&(this.descriptions.label?this.descriptions.label.innerHTML!==e&&(this.descriptions.label.innerHTML=e):this._describeHTML("label",e))}},i.default.prototype.describeElement=function(e,t,r){if(i.default._validateParameters("describeElement",arguments),"string"==typeof t&&"string"==typeof e){var n=this.canvas.id;t=h(t);var o=function(e){if("label"===e||"fallback"===e)throw new Error("element name should not be LABEL or FALLBACK");return e.endsWith(".")||e.endsWith(";")||e.endsWith(",")?e=e.replace(/.$/,":"):e.endsWith(":")||(e+=":"),e}(e);e=e.replace(/[^a-zA-Z0-9 ]/g,"");var a='<th scope="row">'.concat(o,"</th><td>").concat(t,"</td>");this.dummyDOM||(this.dummyDOM=document.getElementById(n).parentNode),this.descriptions?this.descriptions.fallbackElements||(this.descriptions.fallbackElements={}):this.descriptions={fallbackElements:{}},this.descriptions.fallbackElements[e]?this.descriptions.fallbackElements[e].innerHTML!==a&&(this.descriptions.fallbackElements[e].innerHTML=a):this._describeElementHTML("fallback",e,a),r===this.LABEL&&(this.descriptions.labelElements||(this.descriptions.labelElements={}),this.descriptions.labelElements[e]?this.descriptions.labelElements[e].innerHTML!==a&&(this.descriptions.labelElements[e].innerHTML=a):this._describeElementHTML("label",e,a))}},i.default.prototype._describeHTML=function(e,t){var r=this.canvas.id;if("fallback"===e){if(this.dummyDOM.querySelector("#".concat(r+o)))this.dummyDOM.querySelector("#"+r+s).insertAdjacentHTML("beforebegin",'<p id="'.concat(r+a,'"></p>'));else{var n='<div id="'.concat(r).concat(o,'" role="region" aria-label="Canvas Description"><p id="').concat(r).concat(a,'"></p></div>');this.dummyDOM.querySelector("#".concat(r,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(r,"accessibleOutput")).insertAdjacentHTML("beforebegin",n):this.dummyDOM.querySelector("#".concat(r)).innerHTML=n}return this.descriptions.fallback=this.dummyDOM.querySelector("#".concat(r).concat(a)),void(this.descriptions.fallback.innerHTML=t)}if("label"===e){if(this.dummyDOM.querySelector("#".concat(r+l)))this.dummyDOM.querySelector("#".concat(r+c))&&this.dummyDOM.querySelector("#".concat(r+c)).insertAdjacentHTML("beforebegin",'<p id="'.concat(r).concat(u,'"></p>'));else{var i='<div id="'.concat(r).concat(l,'" class="p5Label"><p id="').concat(r).concat(u,'"></p></div>');this.dummyDOM.querySelector("#".concat(r,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(r,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",i):this.dummyDOM.querySelector("#"+r).insertAdjacentHTML("afterend",i)}return this.descriptions.label=this.dummyDOM.querySelector("#"+r+u),void(this.descriptions.label.innerHTML=t)}},i.default.prototype._describeElementHTML=function(e,t,r){var n=this.canvas.id;if("fallback"===e){if(this.dummyDOM.querySelector("#".concat(n+o)))this.dummyDOM.querySelector("#"+n+s)||this.dummyDOM.querySelector("#"+n+a).insertAdjacentHTML("afterend",'<table id="'.concat(n).concat(s,'"><caption>Canvas elements and their descriptions</caption></table>'));else{var i='<div id="'.concat(n).concat(o,'" role="region" aria-label="Canvas Description"><table id="').concat(n).concat(s,'"><caption>Canvas elements and their descriptions</caption></table></div>');this.dummyDOM.querySelector("#".concat(n,"accessibleOutput"))?this.dummyDOM.querySelector("#".concat(n,"accessibleOutput")).insertAdjacentHTML("beforebegin",i):this.dummyDOM.querySelector("#"+n).innerHTML=i}var h=document.createElement("tr");return h.id=n+"_fte_"+t,this.dummyDOM.querySelector("#"+n+s).appendChild(h),this.descriptions.fallbackElements[t]=this.dummyDOM.querySelector("#".concat(n).concat("_fte_").concat(t)),void(this.descriptions.fallbackElements[t].innerHTML=r)}if("label"===e){if(this.dummyDOM.querySelector("#".concat(n+l)))this.dummyDOM.querySelector("#".concat(n+c))||this.dummyDOM.querySelector("#"+n+u).insertAdjacentHTML("afterend",'<table id="'.concat(n+c,'"></table>'));else{var f='<div id="'.concat(n).concat(l,'" class="p5Label"><table id="').concat(n).concat(c,'"></table></div>');this.dummyDOM.querySelector("#".concat(n,"accessibleOutputLabel"))?this.dummyDOM.querySelector("#".concat(n,"accessibleOutputLabel")).insertAdjacentHTML("beforebegin",f):this.dummyDOM.querySelector("#"+n).insertAdjacentHTML("afterend",f)}var d=document.createElement("tr");d.id=n+"_lte_"+t,this.dummyDOM.querySelector("#"+n+c).appendChild(d),this.descriptions.labelElements[t]=this.dummyDOM.querySelector("#".concat(n).concat("_lte_").concat(t)),this.descriptions.labelElements[t].innerHTML=r}};var f=i.default;r.default=f},{"../core/main":36}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype._updateGridOutput=function(e){if(this.dummyDOM.querySelector("#".concat(e,"_summary"))){var t=this._accessibleOutputs[e],r=function(e,t){var r="",n="",i=0;for(var o in t){var a=0;for(var s in t[o]){var l='<li id="'.concat(e,"shape").concat(i,'">').concat(t[o][s].color," ").concat(o,",");"line"===o?l+=" location = ".concat(t[o][s].pos,", length = ").concat(t[o][s].length," pixels"):(l+=" location = ".concat(t[o][s].pos),"point"!==o&&(l+=", area = ".concat(t[o][s].area," %")),l+="</li>"),r+=l,a++,i++}n=1<a?"".concat(n," ").concat(a," ").concat(o,"s"):"".concat(n," ").concat(a," ").concat(o)}return{numShapes:[i,n],details:r}}(e,this.ingredients.shapes),n=function(e,t,r,n){var i="".concat(t," canvas, ").concat(r," by ").concat(n," pixels, contains ").concat(e[0]);return 1===e[0]?"".concat(i," shape: ").concat(e[1]):"".concat(i," shapes: ").concat(e[1])}(r.numShapes,this.ingredients.colors.background,this.width,this.height),i=function(e,t){var r=0,n="",i=Array.apply(null,Array(10)).map((function(){}));for(var o in i)i[o]=Array.apply(null,Array(10)).map((function(){}));for(var a in t)for(var s in t[a]){var l;l="line"!==a?'<a href="#'.concat(e,"shape").concat(r,'">').concat(t[a][s].color," ").concat(a,"</a>"):'<a href="#'.concat(e,"shape").concat(r,'">').concat(t[a][s].color," ").concat(a," midpoint</a>"),i[t[a][s].loc.locY][t[a][s].loc.locX]?i[t[a][s].loc.locY][t[a][s].loc.locX]=i[t[a][s].loc.locY][t[a][s].loc.locX]+"  "+l:i[t[a][s].loc.locY][t[a][s].loc.locX]=l,r++}for(var u in i){var c="<tr>";for(var h in i[u])c+="<td>",void 0!==i[u][h]&&(c+=i[u][h]),c+="</td>";n=n+c+"</tr>"}return n}(e,this.ingredients.shapes);n!==t.summary.innerHTML&&(t.summary.innerHTML=n),i!==t.map.innerHTML&&(t.map.innerHTML=i),r.details!==t.shapeDetails.innerHTML&&(t.shapeDetails.innerHTML=r.details),this._accessibleOutputs[e]=t}};var o=i.default;r.default=o},{"../core/main":36}],19:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e,t,r){return e[0]<.4*t?e[1]<.4*r?"top left":e[1]>.6*r?"bottom left":"mid left":e[0]>.6*t?e[1]<.4*r?"top right":e[1]>.6*r?"bottom right":"mid right":e[1]<.4*r?"top middle":e[1]>.6*r?"bottom middle":"middle"}function a(e,t,r){var n=Math.floor(e[0]/t*10),i=Math.floor(e[1]/r*10);return 10===n&&--n,10===i&&--i,{locX:n,locY:i}}i.default.prototype.textOutput=function(e){i.default._validateParameters("textOutput",arguments),this._accessibleOutputs.text||(this._accessibleOutputs.text=!0,this._createOutput("textOutput","Fallback"),e===this.LABEL&&(this._accessibleOutputs.textLabel=!0,this._createOutput("textOutput","Label")))},i.default.prototype.gridOutput=function(e){i.default._validateParameters("gridOutput",arguments),this._accessibleOutputs.grid||(this._accessibleOutputs.grid=!0,this._createOutput("gridOutput","Fallback"),e===this.LABEL&&(this._accessibleOutputs.gridLabel=!0,this._createOutput("gridOutput","Label")))},i.default.prototype._addAccsOutput=function(){return this._accessibleOutputs||(this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1}),this._accessibleOutputs.grid||this._accessibleOutputs.text},i.default.prototype._createOutput=function(e,t){var r,n,i,o=this.canvas.id;this.ingredients||(this.ingredients={shapes:{},colors:{background:"white",fill:"white",stroke:"black"},pShapes:""}),this.dummyDOM||(this.dummyDOM=document.getElementById(o).parentNode);var a="";"Fallback"===t?(r=o+e,n=o+"accessibleOutput",this.dummyDOM.querySelector("#".concat(n))||(this.dummyDOM.querySelector("#".concat(o,"_Description"))?this.dummyDOM.querySelector("#".concat(o,"_Description")).insertAdjacentHTML("afterend",'<div id="'.concat(n,'" role="region" aria-label="Canvas Outputs"></div>')):this.dummyDOM.querySelector("#".concat(o)).innerHTML='<div id="'.concat(n,'" role="region" aria-label="Canvas Outputs"></div>'))):"Label"===t&&(r=o+e+(a=t),n=o+"accessibleOutput"+t,this.dummyDOM.querySelector("#".concat(n))||(this.dummyDOM.querySelector("#".concat(o,"_Label"))?this.dummyDOM.querySelector("#".concat(o,"_Label")).insertAdjacentHTML("afterend",'<div id="'.concat(n,'"></div>')):this.dummyDOM.querySelector("#".concat(o)).insertAdjacentHTML("afterend",'<div id="'.concat(n,'"></div>')))),this._accessibleOutputs[r]={},"textOutput"===e?(a="#".concat(o,"gridOutput").concat(a),i='<div id="'.concat(r,'">Text Output<div id="').concat(r,'Summary" aria-label="text output summary"><p id="').concat(r,'_summary"></p><ul id="').concat(r,'_list"></ul></div><table id="').concat(r,'_shapeDetails" summary="text output shape details"></table></div>'),this.dummyDOM.querySelector(a)?this.dummyDOM.querySelector(a).insertAdjacentHTML("beforebegin",i):this.dummyDOM.querySelector("#".concat(n)).innerHTML=i,this._accessibleOutputs[r].list=this.dummyDOM.querySelector("#".concat(r,"_list"))):"gridOutput"===e&&(a="#".concat(o,"textOutput").concat(a),i='<div id="'.concat(r,'">Grid Output<p id="').concat(r,'_summary" aria-label="grid output summary"><table id="').concat(r,'_map" summary="grid output content"></table><ul id="').concat(r,'_shapeDetails" aria-label="grid output shape details"></ul></div>'),this.dummyDOM.querySelector(a)?this.dummyDOM.querySelector(a).insertAdjacentHTML("afterend",i):this.dummyDOM.querySelector("#".concat(n)).innerHTML=i,this._accessibleOutputs[r].map=this.dummyDOM.querySelector("#".concat(r,"_map"))),this._accessibleOutputs[r].shapeDetails=this.dummyDOM.querySelector("#".concat(r,"_shapeDetails")),this._accessibleOutputs[r].summary=this.dummyDOM.querySelector("#".concat(r,"_summary"))},i.default.prototype._updateAccsOutput=function(){var e=this.canvas.id;JSON.stringify(this.ingredients.shapes)!==this.ingredients.pShapes&&(this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this._accessibleOutputs.text&&this._updateTextOutput(e+"textOutput"),this._accessibleOutputs.grid&&this._updateGridOutput(e+"gridOutput"),this._accessibleOutputs.textLabel&&this._updateTextOutput(e+"textOutputLabel"),this._accessibleOutputs.gridLabel&&this._updateGridOutput(e+"gridOutputLabel"))},i.default.prototype._accsBackground=function(e){this.ingredients.pShapes=JSON.stringify(this.ingredients.shapes),this.ingredients.shapes={},this.ingredients.colors.backgroundRGBA!==e&&(this.ingredients.colors.backgroundRGBA=e,this.ingredients.colors.background=this._rgbColorName(e))},i.default.prototype._accsCanvasColors=function(e,t){"fill"===e?this.ingredients.colors.fillRGBA!==t&&(this.ingredients.colors.fillRGBA=t,this.ingredients.colors.fill=this._rgbColorName(t)):"stroke"===e&&this.ingredients.colors.strokeRGBA!==t&&(this.ingredients.colors.strokeRGBA=t,this.ingredients.colors.stroke=this._rgbColorName(t))},i.default.prototype._accsOutput=function(e,t){"ellipse"===e&&t[2]===t[3]?e="circle":"rectangle"===e&&t[2]===t[3]&&(e="square");var r={},n=!0,i=function(e,t){var r,n;return n="rectangle"===e||"ellipse"===e||"arc"===e||"circle"===e||"square"===e?(r=Math.round(t[0]+t[2]/2),Math.round(t[1]+t[3]/2)):"triangle"===e?(r=(t[0]+t[2]+t[4])/3,(t[1]+t[3]+t[5])/3):"quadrilateral"===e?(r=(t[0]+t[2]+t[4]+t[6])/4,(t[1]+t[3]+t[5]+t[7])/4):"line"===e?(r=(t[0]+t[2])/2,(t[1]+t[3])/2):(r=t[0],t[1]),[r,n]}(e,t);if("line"===e){r.color=this.ingredients.colors.stroke,r.length=Math.round(this.dist(t[0],t[1],t[2],t[3]));var s=o([t[0],[1]],this.width,this.height),l=o([t[2],[3]],this.width,this.height);r.loc=a(i,this.width,this.height),r.pos=s===l?"at ".concat(s):"from ".concat(s," to ").concat(l)}else"point"===e?r.color=this.ingredients.colors.stroke:(r.color=this.ingredients.colors.fill,r.area=function(e,t,r,n){var i=0;if("arc"===e){var o=((t[5]-t[4])%(2*Math.PI)+2*Math.PI)%(2*Math.PI);if(i=o*t[2]*t[3]/8,"open"===t[6]||"chord"===t[6]){var a=t[0],s=t[1],l=t[0]+t[2]/2*Math.cos(t[4]).toFixed(2),u=t[1]+t[3]/2*Math.sin(t[4]).toFixed(2),c=t[0]+t[2]/2*Math.cos(t[5]).toFixed(2),h=t[1]+t[3]/2*Math.sin(t[5]).toFixed(2),f=Math.abs(a*(u-h)+l*(h-s)+c*(s-u))/2;o>Math.PI?i+=f:i-=f}}else"ellipse"===e||"circle"===e?i=3.14*t[2]/2*t[3]/2:"line"===e||"point"===e?i=0:"quadrilateral"===e?i=Math.abs((t[6]+t[0])*(t[7]-t[1])+(t[0]+t[2])*(t[1]-t[3])+(t[2]+t[4])*(t[3]-t[5])+(t[4]+t[6])*(t[5]-t[7]))/2:"rectangle"===e||"square"===e?i=t[2]*t[3]:"triangle"===e&&(i=Math.abs(t[0]*(t[3]-t[5])+t[2]*(t[5]-t[1])+t[4]*(t[1]-t[3]))/2);return Math.round(100*i/(r*n))}(e,t,this.width,this.height)),r.pos=o(i,this.width,this.height),r.loc=a(i,this.width,this.height);if(this.ingredients.shapes[e]){if(this.ingredients.shapes[e]!==[r]){for(var u in this.ingredients.shapes[e])JSON.stringify(this.ingredients.shapes[e][u])===JSON.stringify(r)&&(n=!1);!0===n&&this.ingredients.shapes[e].push(r)}}else this.ingredients.shapes[e]=[r]};var s=i.default;r.default=s},{"../core/main":36}],20:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype._updateTextOutput=function(e){if(this.dummyDOM.querySelector("#".concat(e,"_summary"))){var t=this._accessibleOutputs[e],r=function(e,t){var r="",n=0;for(var i in t)for(var o in t[i]){var a='<li><a href="#'.concat(e,"shape").concat(n,'">').concat(t[i][o].color," ").concat(i,"</a>");"line"===i?a+=", ".concat(t[i][o].pos,", ").concat(t[i][o].length," pixels long.</li>"):(a+=", at ".concat(t[i][o].pos),"point"!==i&&(a+=", covering ".concat(t[i][o].area,"% of the canvas")),a+=".</li>"),r+=a,n++}return{numShapes:n,listShapes:r}}(e,this.ingredients.shapes),n=function(e,t,r,n){var i="Your output is a, ".concat(r," by ").concat(n," pixels, ").concat(t," canvas containing the following");return 1===e?"".concat(i," shape:"):"".concat(i," ").concat(e," shapes:")}(r.numShapes,this.ingredients.colors.background,this.width,this.height),i=function(e,t){var r="",n=0;for(var i in t)for(var o in t[i]){var a='<tr id="'.concat(e,"shape").concat(n,'"><th>').concat(t[i][o].color," ").concat(i,"</th>");"line"===i?a+="<td>location = ".concat(t[i][o].pos,"</td><td>length = ").concat(t[i][o].length," pixels</td></tr>"):(a+="<td>location = ".concat(t[i][o].pos,"</td>"),"point"!==i&&(a+="<td> area = ".concat(t[i][o].area,"%</td>")),a+="</tr>"),r+=a,n++}return r}(e,this.ingredients.shapes);n!==t.summary.innerHTML&&(t.summary.innerHTML=n),r.listShapes!==t.list.innerHTML&&(t.list.innerHTML=r.listShapes),i!==t.shapeDetails.innerHTML&&(t.shapeDetails.innerHTML=i),this._accessibleOutputs[e]=t}};var o=i.default;r.default=o},{"../core/main":36}],21:[function(e,t,r){"use strict";var n,i=(n=e("./core/main"))&&n.__esModule?n:{default:n};e("./core/constants"),e("./core/environment"),e("./core/friendly_errors/stacktrace"),e("./core/friendly_errors/validate_params"),e("./core/friendly_errors/file_errors"),e("./core/friendly_errors/fes_core"),e("./core/helpers"),e("./core/legacy"),e("./core/preload"),e("./core/p5.Element"),e("./core/p5.Graphics"),e("./core/p5.Renderer"),e("./core/p5.Renderer2D"),e("./core/rendering"),e("./core/shim"),e("./core/structure"),e("./core/transform"),e("./core/shape/2d_primitives"),e("./core/shape/attributes"),e("./core/shape/curves"),e("./core/shape/vertex"),e("./accessibility/outputs"),e("./accessibility/textOutput"),e("./accessibility/gridOutput"),e("./accessibility/color_namer"),e("./color/color_conversion"),e("./color/creating_reading"),e("./color/p5.Color"),e("./color/setting"),e("./data/p5.TypedDict"),e("./data/local_storage.js"),e("./dom/dom"),e("./accessibility/describe"),e("./events/acceleration"),e("./events/keyboard"),e("./events/mouse"),e("./events/touch"),e("./image/filters"),e("./image/image"),e("./image/loading_displaying"),e("./image/p5.Image"),e("./image/pixels"),e("./io/files"),e("./io/p5.Table"),e("./io/p5.TableRow"),e("./io/p5.XML"),e("./math/calculation"),e("./math/math"),e("./math/noise"),e("./math/p5.Vector"),e("./math/random"),e("./math/trigonometry"),e("./typography/attributes"),e("./typography/loading_displaying"),e("./typography/p5.Font"),e("./utilities/array_functions"),e("./utilities/conversion"),e("./utilities/string_functions"),e("./utilities/time_date"),e("./webgl/3d_primitives"),e("./webgl/interaction"),e("./webgl/light"),e("./webgl/loading"),e("./webgl/material"),e("./webgl/p5.Camera"),e("./webgl/p5.Geometry"),e("./webgl/p5.Matrix"),e("./webgl/p5.RendererGL.Immediate"),e("./webgl/p5.RendererGL"),e("./webgl/p5.RendererGL.Retained"),e("./webgl/p5.Shader"),e("./webgl/p5.RenderBuffer"),e("./webgl/p5.Texture"),e("./webgl/text"),e("./core/init"),t.exports=i.default},{"./accessibility/color_namer":16,"./accessibility/describe":17,"./accessibility/gridOutput":18,"./accessibility/outputs":19,"./accessibility/textOutput":20,"./color/color_conversion":22,"./color/creating_reading":23,"./color/p5.Color":24,"./color/setting":25,"./core/constants":26,"./core/environment":27,"./core/friendly_errors/fes_core":28,"./core/friendly_errors/file_errors":29,"./core/friendly_errors/stacktrace":30,"./core/friendly_errors/validate_params":31,"./core/helpers":32,"./core/init":33,"./core/legacy":35,"./core/main":36,"./core/p5.Element":37,"./core/p5.Graphics":38,"./core/p5.Renderer":39,"./core/p5.Renderer2D":40,"./core/preload":41,"./core/rendering":42,"./core/shape/2d_primitives":43,"./core/shape/attributes":44,"./core/shape/curves":45,"./core/shape/vertex":46,"./core/shim":47,"./core/structure":48,"./core/transform":49,"./data/local_storage.js":50,"./data/p5.TypedDict":51,"./dom/dom":52,"./events/acceleration":53,"./events/keyboard":54,"./events/mouse":55,"./events/touch":56,"./image/filters":57,"./image/image":58,"./image/loading_displaying":59,"./image/p5.Image":60,"./image/pixels":61,"./io/files":62,"./io/p5.Table":63,"./io/p5.TableRow":64,"./io/p5.XML":65,"./math/calculation":66,"./math/math":67,"./math/noise":68,"./math/p5.Vector":69,"./math/random":70,"./math/trigonometry":71,"./typography/attributes":72,"./typography/loading_displaying":73,"./typography/p5.Font":74,"./utilities/array_functions":75,"./utilities/conversion":76,"./utilities/string_functions":77,"./utilities/time_date":78,"./webgl/3d_primitives":79,"./webgl/interaction":80,"./webgl/light":81,"./webgl/loading":82,"./webgl/material":83,"./webgl/p5.Camera":84,"./webgl/p5.Geometry":85,"./webgl/p5.Matrix":86,"./webgl/p5.RenderBuffer":87,"./webgl/p5.RendererGL":90,"./webgl/p5.RendererGL.Immediate":88,"./webgl/p5.RendererGL.Retained":89,"./webgl/p5.Shader":91,"./webgl/p5.Texture":92,"./webgl/text":93}],22:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.ColorConversion={},i.default.ColorConversion._hsbaToHSLA=function(e){var t=e[0],r=e[1],n=e[2],i=(2-r)*n/2;return 0!=i&&(1==i?r=0:i<.5?r/=2-r:r=r*n/(2-2*i)),[t,r,i,e[3]]},i.default.ColorConversion._hsbaToRGBA=function(e){var t=6*e[0],r=e[1],n=e[2],i=[];if(0===r)i=[n,n,n,e[3]];else{var o,a,s,l=Math.floor(t),u=n*(1-r),c=n*(1-r*(t-l)),h=n*(1-r*(1+l-t));s=1===l?(o=c,a=n,u):2===l?(o=u,a=n,h):3===l?(o=u,a=c,n):4===l?(o=h,a=u,n):5===l?(o=n,a=u,c):(o=n,a=h,u),i=[o,a,s,e[3]]}return i},i.default.ColorConversion._hslaToHSBA=function(e){var t,r=e[0],n=e[1],i=e[2];return[r,n=2*((t=i<.5?(1+n)*i:i+n-i*n)-i)/t,t,e[3]]},i.default.ColorConversion._hslaToRGBA=function(e){var t=6*e[0],r=e[1],n=e[2],i=[];if(0===r)i=[n,n,n,e[3]];else{var o,a=2*n-(o=n<.5?(1+r)*n:n+r-n*r),s=function(e,t,r){return e<0?e+=6:6<=e&&(e-=6),e<1?t+(r-t)*e:e<3?r:e<4?t+(r-t)*(4-e):t};i=[s(2+t,a,o),s(t,a,o),s(t-2,a,o),e[3]]}return i},i.default.ColorConversion._rgbaToHSBA=function(e){var t,r,n=e[0],i=e[1],o=e[2],a=Math.max(n,i,o),s=a-Math.min(n,i,o);return 0==s?r=t=0:(r=s/a,n===a?t=(i-o)/s:i===a?t=2+(o-n)/s:o===a&&(t=4+(n-i)/s),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,a,e[3]]},i.default.ColorConversion._rgbaToHSLA=function(e){var t,r,n=e[0],i=e[1],o=e[2],a=Math.max(n,i,o),s=Math.min(n,i,o),l=a+s,u=a-s;return 0==u?r=t=0:(r=l<1?u/l:u/(2-l),n===a?t=(i-o)/u:i===a?t=2+(o-n)/u:o===a&&(t=4+(n-i)/u),t<0?t+=6:6<=t&&(t-=6)),[t/6,r,l/2,e[3]]};var o=i.default.ColorConversion;r.default=o},{"../core/main":36}],23:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Color"),e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),o.default.prototype.alpha=function(e){return o.default._validateParameters("alpha",arguments),this.color(e)._getAlpha()},o.default.prototype.blue=function(e){return o.default._validateParameters("blue",arguments),this.color(e)._getBlue()},o.default.prototype.brightness=function(e){return o.default._validateParameters("brightness",arguments),this.color(e)._getBrightness()},o.default.prototype.color=function(){if(o.default._validateParameters("color",arguments),arguments[0]instanceof o.default.Color)return arguments[0];var e=arguments[0]instanceof Array?arguments[0]:arguments;return new o.default.Color(this,e)},o.default.prototype.green=function(e){return o.default._validateParameters("green",arguments),this.color(e)._getGreen()},o.default.prototype.hue=function(e){return o.default._validateParameters("hue",arguments),this.color(e)._getHue()},o.default.prototype.lerpColor=function(e,t,r){o.default._validateParameters("lerpColor",arguments);var n,i,s,l,u,c,h=this._colorMode,f=this._colorMaxes;if(h===a.RGB)u=e.levels.map((function(e){return e/255})),c=t.levels.map((function(e){return e/255}));else if(h===a.HSB)e._getBrightness(),t._getBrightness(),u=e.hsba,c=t.hsba;else{if(h!==a.HSL)throw new Error("".concat(h,"cannot be used for interpolation."));e._getLightness(),t._getLightness(),u=e.hsla,c=t.hsla}return r=Math.max(Math.min(r,1),0),void 0===this.lerp&&(this.lerp=function(e,t,r){return r*(t-e)+e}),n=this.lerp(u[0],c[0],r),i=this.lerp(u[1],c[1],r),s=this.lerp(u[2],c[2],r),l=this.lerp(u[3],c[3],r),n*=f[h][0],i*=f[h][1],s*=f[h][2],l*=f[h][3],this.color(n,i,s,l)},o.default.prototype.lightness=function(e){return o.default._validateParameters("lightness",arguments),this.color(e)._getLightness()},o.default.prototype.red=function(e){return o.default._validateParameters("red",arguments),this.color(e)._getRed()},o.default.prototype.saturation=function(e){return o.default._validateParameters("saturation",arguments),this.color(e)._getSaturation()};var l=o.default;r.default=l},{"../core/constants":26,"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36,"./p5.Color":24}],24:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=l(e("../core/main")),o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants")),a=l(e("./color_conversion"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e){return e&&e.__esModule?e:{default:e}}i.default.Color=function(e,t){if(this._storeModeAndMaxes(e._colorMode,e._colorMaxes),this.mode!==o.RGB&&this.mode!==o.HSL&&this.mode!==o.HSB)throw new Error("".concat(this.mode," is an invalid colorMode."));return this._array=i.default.Color._parseInputs.apply(this,t),this._calculateLevels(),this},i.default.Color.prototype.toString=function(e){var t=this.levels,r=this._array,n=r[3];switch(e){case"#rrggbb":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16));case"#rrggbbaa":return"#".concat(t[0]<16?"0".concat(t[0].toString(16)):t[0].toString(16),t[1]<16?"0".concat(t[1].toString(16)):t[1].toString(16),t[2]<16?"0".concat(t[2].toString(16)):t[2].toString(16),t[3]<16?"0".concat(t[2].toString(16)):t[3].toString(16));case"#rgb":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16));case"#rgba":return"#".concat(Math.round(15*r[0]).toString(16),Math.round(15*r[1]).toString(16),Math.round(15*r[2]).toString(16),Math.round(15*r[3]).toString(16));case"rgb":return"rgb(".concat(t[0],", ",t[1],", ",t[2],")");case"rgb%":return"rgb(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%)");case"rgba%":return"rgba(".concat((100*r[0]).toPrecision(3),"%, ",(100*r[1]).toPrecision(3),"%, ",(100*r[2]).toPrecision(3),"%, ",(100*r[3]).toPrecision(3),"%)");case"hsb":case"hsv":return this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),"hsb(".concat(this.hsba[0]*this.maxes[o.HSB][0],", ",this.hsba[1]*this.maxes[o.HSB][1],", ",this.hsba[2]*this.maxes[o.HSB][2],")");case"hsb%":case"hsv%":return this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),"hsb(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%)");case"hsba":case"hsva":return this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),"hsba(".concat(this.hsba[0]*this.maxes[o.HSB][0],", ",this.hsba[1]*this.maxes[o.HSB][1],", ",this.hsba[2]*this.maxes[o.HSB][2],", ",n,")");case"hsba%":case"hsva%":return this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),"hsba(".concat((100*this.hsba[0]).toPrecision(3),"%, ",(100*this.hsba[1]).toPrecision(3),"%, ",(100*this.hsba[2]).toPrecision(3),"%, ",(100*n).toPrecision(3),"%)");case"hsl":return this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),"hsl(".concat(this.hsla[0]*this.maxes[o.HSL][0],", ",this.hsla[1]*this.maxes[o.HSL][1],", ",this.hsla[2]*this.maxes[o.HSL][2],")");case"hsl%":return this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%)");case"hsla":return this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),"hsla(".concat(this.hsla[0]*this.maxes[o.HSL][0],", ",this.hsla[1]*this.maxes[o.HSL][1],", ",this.hsla[2]*this.maxes[o.HSL][2],", ",n,")");case"hsla%":return this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),"hsl(".concat((100*this.hsla[0]).toPrecision(3),"%, ",(100*this.hsla[1]).toPrecision(3),"%, ",(100*this.hsla[2]).toPrecision(3),"%, ",(100*n).toPrecision(3),"%)");case"rgba":default:return"rgba(".concat(t[0],",",t[1],",",t[2],",",n,")")}},i.default.Color.prototype.setRed=function(e){this._array[0]=e/this.maxes[o.RGB][0],this._calculateLevels()},i.default.Color.prototype.setGreen=function(e){this._array[1]=e/this.maxes[o.RGB][1],this._calculateLevels()},i.default.Color.prototype.setBlue=function(e){this._array[2]=e/this.maxes[o.RGB][2],this._calculateLevels()},i.default.Color.prototype.setAlpha=function(e){this._array[3]=e/this.maxes[this.mode][3],this._calculateLevels()},i.default.Color.prototype._calculateLevels=function(){for(var e=this._array,t=this.levels=new Array(e.length),r=e.length-1;0<=r;--r)t[r]=Math.round(255*e[r])},i.default.Color.prototype._getAlpha=function(){return this._array[3]*this.maxes[this.mode][3]},i.default.Color.prototype._storeModeAndMaxes=function(e,t){this.mode=e,this.maxes=t},i.default.Color.prototype._getMode=function(){return this.mode},i.default.Color.prototype._getMaxes=function(){return this.maxes},i.default.Color.prototype._getBlue=function(){return this._array[2]*this.maxes[o.RGB][2]},i.default.Color.prototype._getBrightness=function(){return this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),this.hsba[2]*this.maxes[o.HSB][2]},i.default.Color.prototype._getGreen=function(){return this._array[1]*this.maxes[o.RGB][1]},i.default.Color.prototype._getHue=function(){return this.mode===o.HSB?(this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),this.hsba[0]*this.maxes[o.HSB][0]):(this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),this.hsla[0]*this.maxes[o.HSL][0])},i.default.Color.prototype._getLightness=function(){return this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),this.hsla[2]*this.maxes[o.HSL][2]},i.default.Color.prototype._getRed=function(){return this._array[0]*this.maxes[o.RGB][0]},i.default.Color.prototype._getSaturation=function(){return this.mode===o.HSB?(this.hsba||(this.hsba=a.default._rgbaToHSBA(this._array)),this.hsba[1]*this.maxes[o.HSB][1]):(this.hsla||(this.hsla=a.default._rgbaToHSLA(this._array)),this.hsla[1]*this.maxes[o.HSL][1])};var u={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},c=/\s*/,h=/(\d{1,3})/,f=/((?:\d+(?:\.\d+)?)|(?:\.\d+))/,d=new RegExp("".concat(f.source,"%")),p={HEX3:/^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX4:/^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,HEX6:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,HEX8:/^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,RGB:new RegExp(["^rgb\\(",h.source,",",h.source,",",h.source,"\\)$"].join(c.source),"i"),RGB_PERCENT:new RegExp(["^rgb\\(",d.source,",",d.source,",",d.source,"\\)$"].join(c.source),"i"),RGBA:new RegExp(["^rgba\\(",h.source,",",h.source,",",h.source,",",f.source,"\\)$"].join(c.source),"i"),RGBA_PERCENT:new RegExp(["^rgba\\(",d.source,",",d.source,",",d.source,",",f.source,"\\)$"].join(c.source),"i"),HSL:new RegExp(["^hsl\\(",h.source,",",d.source,",",d.source,"\\)$"].join(c.source),"i"),HSLA:new RegExp(["^hsla\\(",h.source,",",d.source,",",d.source,",",f.source,"\\)$"].join(c.source),"i"),HSB:new RegExp(["^hsb\\(",h.source,",",d.source,",",d.source,"\\)$"].join(c.source),"i"),HSBA:new RegExp(["^hsba\\(",h.source,",",d.source,",",d.source,",",f.source,"\\)$"].join(c.source),"i")};i.default.Color._parseInputs=function(e,t,r,n){var s,l=arguments.length,c=this.mode,h=this.maxes[c],f=[];if(3<=l){for(f[0]=e/h[0],f[1]=t/h[1],f[2]=r/h[2],f[3]="number"==typeof n?n/h[3]:1,s=f.length-1;0<=s;--s){var d=f[s];d<0?f[s]=0:1<d&&(f[s]=1)}return c===o.HSL?a.default._hslaToRGBA(f):c===o.HSB?a.default._hsbaToRGBA(f):f}if(1===l&&"string"==typeof e){var m=e.trim().toLowerCase();if(u[m])return i.default.Color._parseInputs.call(this,u[m]);if(p.HEX3.test(m))return(f=p.HEX3.exec(m).slice(1).map((function(e){return parseInt(e+e,16)/255})))[3]=1,f;if(p.HEX6.test(m))return(f=p.HEX6.exec(m).slice(1).map((function(e){return parseInt(e,16)/255})))[3]=1,f;if(p.HEX4.test(m))return p.HEX4.exec(m).slice(1).map((function(e){return parseInt(e+e,16)/255}));if(p.HEX8.test(m))return p.HEX8.exec(m).slice(1).map((function(e){return parseInt(e,16)/255}));if(p.RGB.test(m))return(f=p.RGB.exec(m).slice(1).map((function(e){return e/255})))[3]=1,f;if(p.RGB_PERCENT.test(m))return(f=p.RGB_PERCENT.exec(m).slice(1).map((function(e){return parseFloat(e)/100})))[3]=1,f;if(p.RGBA.test(m))return p.RGBA.exec(m).slice(1).map((function(e,t){return 3===t?parseFloat(e):e/255}));if(p.RGBA_PERCENT.test(m))return p.RGBA_PERCENT.exec(m).slice(1).map((function(e,t){return 3===t?parseFloat(e):parseFloat(e)/100}));if(p.HSL.test(m)?(f=p.HSL.exec(m).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100})))[3]=1:p.HSLA.test(m)&&(f=p.HSLA.exec(m).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100}))),(f=f.map((function(e){return Math.max(Math.min(e,1),0)}))).length)return a.default._hslaToRGBA(f);if(p.HSB.test(m)?(f=p.HSB.exec(m).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:parseInt(e,10)/100})))[3]=1:p.HSBA.test(m)&&(f=p.HSBA.exec(m).slice(1).map((function(e,t){return 0===t?parseInt(e,10)/360:3===t?parseFloat(e):parseInt(e,10)/100}))),f.length){for(s=f.length-1;0<=s;--s)f[s]=Math.max(Math.min(f[s],1),0);return a.default._hsbaToRGBA(f)}f=[1,1,1,1]}else{if(1!==l&&2!==l||"number"!=typeof e)throw new Error("".concat(arguments,"is not a valid color representation."));f[0]=e/h[2],f[1]=e/h[2],f[2]=e/h[2],f[3]="number"==typeof t?t/h[3]:1,f=f.map((function(e){return Math.max(Math.min(e,1),0)}))}return f};var m=i.default.Color;r.default=m},{"../core/constants":26,"../core/main":36,"./color_conversion":22}],25:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Color"),o.default.prototype.background=function(){var e;return(e=this._renderer).background.apply(e,arguments),this},o.default.prototype.clear=function(){return this._renderer.clear(),this},o.default.prototype.colorMode=function(e,t,r,n,i){if(o.default._validateParameters("colorMode",arguments),e===a.RGB||e===a.HSB||e===a.HSL){this._colorMode=e;var s=this._colorMaxes[e];2===arguments.length?(s[0]=t,s[1]=t,s[2]=t,s[3]=t):4===arguments.length?(s[0]=t,s[1]=r,s[2]=n):5===arguments.length&&(s[0]=t,s[1]=r,s[2]=n,s[3]=i)}return this},o.default.prototype.fill=function(){var e;return this._renderer._setProperty("_fillSet",!0),this._renderer._setProperty("_doFill",!0),(e=this._renderer).fill.apply(e,arguments),this},o.default.prototype.noFill=function(){return this._renderer._setProperty("_doFill",!1),this},o.default.prototype.noStroke=function(){return this._renderer._setProperty("_doStroke",!1),this},o.default.prototype.stroke=function(){var e;return this._renderer._setProperty("_strokeSet",!0),this._renderer._setProperty("_doStroke",!0),(e=this._renderer).stroke.apply(e,arguments),this},o.default.prototype.erase=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:255,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:255;return this._renderer.erase(e,t),this},o.default.prototype.noErase=function(){return this._renderer.noErase(),this};var l=o.default;r.default=l},{"../core/constants":26,"../core/main":36,"./p5.Color":24}],26:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.FILL=r.STROKE=r.CURVE=r.BEZIER=r.QUADRATIC=r.LINEAR=r._CTX_MIDDLE=r._DEFAULT_LEADMULT=r._DEFAULT_TEXT_FILL=r.BOLDITALIC=r.BOLD=r.ITALIC=r.NORMAL=r.BLUR=r.ERODE=r.DILATE=r.POSTERIZE=r.INVERT=r.OPAQUE=r.GRAY=r.THRESHOLD=r.BURN=r.DODGE=r.SOFT_LIGHT=r.HARD_LIGHT=r.OVERLAY=r.REPLACE=r.SCREEN=r.MULTIPLY=r.EXCLUSION=r.SUBTRACT=r.DIFFERENCE=r.LIGHTEST=r.DARKEST=r.ADD=r.REMOVE=r.BLEND=r.UP_ARROW=r.TAB=r.SHIFT=r.RIGHT_ARROW=r.RETURN=r.OPTION=r.LEFT_ARROW=r.ESCAPE=r.ENTER=r.DOWN_ARROW=r.DELETE=r.CONTROL=r.BACKSPACE=r.ALT=r.AUTO=r.HSL=r.HSB=r.RGB=r.MITER=r.BEVEL=r.ROUND=r.SQUARE=r.PROJECT=r.PIE=r.CHORD=r.OPEN=r.CLOSE=r.TESS=r.QUAD_STRIP=r.QUADS=r.TRIANGLE_STRIP=r.TRIANGLE_FAN=r.TRIANGLES=r.LINE_LOOP=r.LINE_STRIP=r.LINES=r.POINTS=r.BASELINE=r.BOTTOM=r.TOP=r.CENTER=r.LEFT=r.RIGHT=r.RADIUS=r.CORNERS=r.CORNER=r.RAD_TO_DEG=r.DEG_TO_RAD=r.RADIANS=r.DEGREES=r.TWO_PI=r.TAU=r.QUARTER_PI=r.PI=r.HALF_PI=r.WAIT=r.TEXT=r.MOVE=r.HAND=r.CROSS=r.ARROW=r.WEBGL=r.P2D=void 0,r.FALLBACK=r.LABEL=r.AXES=r.GRID=r._DEFAULT_FILL=r._DEFAULT_STROKE=r.PORTRAIT=r.LANDSCAPE=r.MIRROR=r.CLAMP=r.REPEAT=r.NEAREST=r.IMAGE=r.IMMEDIATE=r.TEXTURE=void 0;var n=Math.PI;r.P2D="p2d",r.WEBGL="webgl",r.ARROW="default",r.CROSS="crosshair",r.HAND="pointer",r.MOVE="move",r.TEXT="text",r.WAIT="wait";var i=n/2;r.HALF_PI=i;var o=n;r.PI=o;var a=n/4;r.QUARTER_PI=a;var s=2*n;r.TAU=s;var l=2*n;r.TWO_PI=l,r.DEGREES="degrees",r.RADIANS="radians";var u=n/180;r.DEG_TO_RAD=u;var c=180/n;r.RAD_TO_DEG=c,r.CORNER="corner",r.CORNERS="corners",r.RADIUS="radius",r.RIGHT="right",r.LEFT="left",r.CENTER="center",r.TOP="top",r.BOTTOM="bottom",r.BASELINE="alphabetic",r.POINTS=0,r.LINES=1,r.LINE_STRIP=3,r.LINE_LOOP=2,r.TRIANGLES=4,r.TRIANGLE_FAN=6,r.TRIANGLE_STRIP=5,r.QUADS="quads",r.QUAD_STRIP="quad_strip",r.TESS="tess",r.CLOSE="close",r.OPEN="open",r.CHORD="chord",r.PIE="pie",r.PROJECT="square",r.SQUARE="butt",r.ROUND="round",r.BEVEL="bevel",r.MITER="miter",r.RGB="rgb",r.HSB="hsb",r.HSL="hsl",r.AUTO="auto",r.ALT=18,r.BACKSPACE=8,r.CONTROL=17,r.DELETE=46,r.DOWN_ARROW=40,r.ENTER=13,r.ESCAPE=27,r.LEFT_ARROW=37,r.OPTION=18,r.RETURN=13,r.RIGHT_ARROW=39,r.SHIFT=16,r.TAB=9,r.UP_ARROW=38,r.BLEND="source-over",r.REMOVE="destination-out",r.ADD="lighter",r.DARKEST="darken",r.LIGHTEST="lighten",r.DIFFERENCE="difference",r.SUBTRACT="subtract",r.EXCLUSION="exclusion",r.MULTIPLY="multiply",r.SCREEN="screen",r.REPLACE="copy",r.OVERLAY="overlay",r.HARD_LIGHT="hard-light",r.SOFT_LIGHT="soft-light",r.DODGE="color-dodge",r.BURN="color-burn",r.THRESHOLD="threshold",r.GRAY="gray",r.OPAQUE="opaque",r.INVERT="invert",r.POSTERIZE="posterize",r.DILATE="dilate",r.ERODE="erode",r.BLUR="blur",r.NORMAL="normal",r.ITALIC="italic",r.BOLD="bold",r.BOLDITALIC="bold italic",r._DEFAULT_TEXT_FILL="#000000",r._DEFAULT_LEADMULT=1.25,r._CTX_MIDDLE="middle",r.LINEAR="linear",r.QUADRATIC="quadratic",r.BEZIER="bezier",r.CURVE="curve",r.STROKE="stroke",r.FILL="fill",r.TEXTURE="texture",r.IMMEDIATE="immediate",r.IMAGE="image",r.NEAREST="nearest",r.REPEAT="repeat",r.CLAMP="clamp",r.MIRROR="mirror",r.LANDSCAPE="landscape",r.PORTRAIT="portrait",r._DEFAULT_STROKE="#000000",r._DEFAULT_FILL="#FFFFFF",r.GRID="grid",r.AXES="axes",r.LABEL="label",r.FALLBACK="fallback"},{}],27:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("./main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}var l=[a.ARROW,a.CROSS,a.HAND,a.MOVE,a.TEXT,a.WAIT];o.default.prototype._frameRate=0,o.default.prototype._lastFrameTime=window.performance.now(),o.default.prototype._targetFrameRate=60;var u=window.print;function c(){return window.innerWidth||document.documentElement&&document.documentElement.clientWidth||document.body&&document.body.clientWidth||0}function h(){return window.innerHeight||document.documentElement&&document.documentElement.clientHeight||document.body&&document.body.clientHeight||0}o.default.prototype.print=function(){var e;arguments.length?(e=console).log.apply(e,arguments):u()},o.default.prototype.frameCount=0,o.default.prototype.deltaTime=0,o.default.prototype.focused=document.hasFocus(),o.default.prototype.cursor=function(e,t,r){var n="auto",i=this._curElement.elt;if(l.includes(e))n=e;else if("string"==typeof e){var o="";t&&r&&"number"==typeof t&&"number"==typeof r&&(o="".concat(t," ").concat(r)),n="http://"===e.substring(0,7)||"https://"===e.substring(0,8)||/\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e)?"url(".concat(e,") ").concat(o,", auto"):e}i.style.cursor=n},o.default.prototype.frameRate=function(e){return o.default._validateParameters("frameRate",arguments),"number"!=typeof e||e<0?this._frameRate:(this._setProperty("_targetFrameRate",e),0===e&&this._setProperty("_frameRate",e),this)},o.default.prototype.getFrameRate=function(){return this.frameRate()},o.default.prototype.setFrameRate=function(e){return this.frameRate(e)},o.default.prototype.noCursor=function(){this._curElement.elt.style.cursor="none"},o.default.prototype.displayWidth=screen.width,o.default.prototype.displayHeight=screen.height,o.default.prototype.windowWidth=c(),o.default.prototype.windowHeight=h(),o.default.prototype._onresize=function(e){this._setProperty("windowWidth",c()),this._setProperty("windowHeight",h());var t,r=this._isGlobal?window:this;"function"==typeof r.windowResized&&(void 0===(t=r.windowResized(e))||t||e.preventDefault())},o.default.prototype.width=0,o.default.prototype.height=0,o.default.prototype.fullscreen=function(e){if(o.default._validateParameters("fullscreen",arguments),void 0===e)return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;e?function(e){if(!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled))throw new Error("Fullscreen not enabled in this browser.");e.requestFullscreen?e.requestFullscreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullscreen?e.webkitRequestFullscreen():e.msRequestFullscreen&&e.msRequestFullscreen()}(document.documentElement):document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},o.default.prototype.pixelDensity=function(e){var t;return o.default._validateParameters("pixelDensity",arguments),"number"==typeof e?(e!==this._pixelDensity&&(this._pixelDensity=e),(t=this).resizeCanvas(this.width,this.height,!0)):t=this._pixelDensity,t},o.default.prototype.displayDensity=function(){return window.devicePixelRatio},o.default.prototype.getURL=function(){return location.href},o.default.prototype.getURLPath=function(){return location.pathname.split("/").filter((function(e){return""!==e}))},o.default.prototype.getURLParams=function(){for(var e,t=/[?&]([^&=]+)(?:[&=])([^&=]+)/gim,r={};null!=(e=t.exec(location.search));)e.index===t.lastIndex&&t.lastIndex++,r[e[1]]=e[2];return r};var f=o.default;r.default=f},{"./constants":26,"./main":36}],28:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../main"))&&n.__esModule?n:{default:n};e("../internationalization");var o=null,a=null;i.default._friendlyError=i.default._checkForUserDefinedFunctions=i.default._fesErrorMonitor=function(){},o=null;function s(e,t){t=t||console.log.bind(console),o||a(),o.some((function(r){if(e.message&&null!==e.message.match("\\W?".concat(r.name,"\\W"))){var n="function"===r.type?"".concat(r.name,"()"):r.name;return t("Did you just try to use p5.js's ".concat(n," ").concat(r.type,"? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat("https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup")),!0}}))}a=function(){function t(e){return Object.getOwnPropertyNames(e).filter((function(e){return"_"!==e[0]&&!(e in r)&&(r[e]=!0)})).map((function(t){var r;return r="function"==typeof e[t]?"function":t===t.toUpperCase()?"constant":"variable",{name:t,type:r}}))}var r={};(o=[].concat(t(i.default.prototype),t(e("../constants")))).sort((function(e,t){return t.name.length-e.name.length}))},i.default.prototype._helpForMisusedAtTopLevelCode=s,"complete"!==document.readyState&&(window.addEventListener("error",s,!1),window.addEventListener("load",(function(){window.removeEventListener("error",s,!1)})));var l=i.default;r.default=l},{"../constants":26,"../internationalization":34,"../main":36,"./browser_errors":void 0}],29:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../main"))&&n.__esModule?n:{default:n};e("../internationalization"),i.default._friendlyFileLoadError=function(){};var o=i.default;r.default=o},{"../internationalization":34,"../main":36}],30:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../main"))&&n.__esModule?n:{default:n};function o(){var e=/(^|@)\S+:\d+/,t=/^\s*at .*(\S+:\d+|\(native\))/m,r=/^(eval@)?(\[native code])?$/;return{parse:function(e){return void 0!==e.stacktrace||void 0!==e["opera#sourceloc"]?this.parseOpera(e):e.stack&&e.stack.match(t)?this.parseV8OrIE(e):e.stack?this.parseFFOrSafari(e):void 0},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e.replace(/[()]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(e){return e.stack.split("\n").filter((function(e){return!!e.match(t)}),this).map((function(e){-1<e.indexOf("(eval ")&&(e=e.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(\),.*$)/g,""));var t=e.replace(/^\s+/,"").replace(/\(eval code/g,"("),r=t.match(/ (\((.+):(\d+):(\d+)\)$)/),n=(t=r?t.replace(r[0],""):t).split(/\s+/).slice(1),i=this.extractLocation(r?r[1]:n.pop());return{functionName:n.join(" ")||void 0,fileName:-1<["eval","<anonymous>"].indexOf(i[0])?void 0:i[0],lineNumber:i[1],columnNumber:i[2],source:e}}),this)},parseFFOrSafari:function(e){return e.stack.split("\n").filter((function(e){return!e.match(r)}),this).map((function(e){if(-1<e.indexOf(" > eval")&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),-1===e.indexOf("@")&&-1===e.indexOf(":"))return{functionName:e};var t=/((.*".+"[^@]*)?[^@]*)(?:@)/,r=e.match(t),n=r&&r[1]?r[1]:void 0,i=this.extractLocation(e.replace(t,""));return{functionName:n,fileName:i[0],lineNumber:i[1],columnNumber:i[2],source:e}}),this)},parseOpera:function(e){return!e.stacktrace||-1<e.message.indexOf("\n")&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)/i,r=e.message.split("\n"),n=[],i=2,o=r.length;i<o;i+=2){var a=t.exec(r[i]);a&&n.push({fileName:a[2],lineNumber:a[1],source:r[i]})}return n},parseOpera10:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,r=e.stacktrace.split("\n"),n=[],i=0,o=r.length;i<o;i+=2){var a=t.exec(r[i]);a&&n.push({functionName:a[3]||void 0,fileName:a[2],lineNumber:a[1],source:r[i]})}return n},parseOpera11:function(t){return t.stack.split("\n").filter((function(t){return!!t.match(e)&&!t.match(/^Error created at/)}),this).map((function(e){var t,r=e.split("@"),n=this.extractLocation(r.pop()),i=r.shift()||"",o=i.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^)]*\)/g,"")||void 0;return i.match(/\(([^)]*)\)/)&&(t=i.replace(/^[^(]+\(([^)]*)\)$/,"$1")),{functionName:o,args:void 0===t||"[arguments not available]"===t?void 0:t.split(","),fileName:n[0],lineNumber:n[1],columnNumber:n[2],source:e}}),this)}}}i.default._getErrorStackParser=function(){return new o};var a=i.default;r.default=a},{"../main":36}],31:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../main"))&&n.__esModule?n:{default:n};function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}(function(e){if(!(e&&e.__esModule||null===e||"object"!==a(e)&&"function"!=typeof e)){var t=o();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var s=n?Object.getOwnPropertyDescriptor(e,i):null;s&&(s.get||s.set)?Object.defineProperty(r,i,s):r[i]=e[i]}r.default=e,t&&t.set(e,r)}})(e("../constants")),e("../internationalization"),i.default._validateParameters=i.default._clearValidateParamsCache=function(){};var s=i.default;r.default=s},{"../../../docs/parameterData.json":void 0,"../constants":26,"../internationalization":34,"../main":36}],32:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var s=i?Object.getOwnPropertyDescriptor(e,a):null;s&&(s.get||s.set)?Object.defineProperty(r,a,s):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}var a={modeAdjust:function(e,t,r,n,o){return o===i.CORNER?{x:e,y:t,w:r,h:n}:o===i.CORNERS?{x:e,y:t,w:r-e,h:n-t}:o===i.RADIUS?{x:e-r,y:t-n,w:2*r,h:2*n}:o===i.CENTER?{x:e-.5*r,y:t-.5*n,w:r,h:n}:void 0}};r.default=a},{"./constants":26}],33:[function(e,t,r){"use strict";var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./internationalization");var o=Promise.resolve();Promise.all([new Promise((function(e,t){"complete"===document.readyState?e():window.addEventListener("load",e,!1)})),o]).then((function(){void 0===window._setupDone?window.mocha||(window.setup&&"function"==typeof window.setup||window.draw&&"function"==typeof window.draw)&&!i.default.instance&&new i.default:console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import")}))},{"../core/main":36,"./internationalization":34}],34:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.initialize=r.translator=void 0;var n,i=a(e("i18next")),o=a(e("i18next-browser-languagedetector"));function a(e){return e&&e.__esModule?e:{default:e}}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var l=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.init(t,r)}var t,r;return t=e,(r=[{key:"fetchWithTimeout",value:function(e,t,r){var n=2<arguments.length&&void 0!==r?r:2e3;return Promise.race([fetch(e,t),new Promise((function(e,t){return setTimeout((function(){return t(new Error("timeout"))}),n)}))])}},{key:"init",value:function(e,t){var r=1<arguments.length&&void 0!==t?t:{};this.services=e,this.options=r}},{key:"read",value:function(e,t,r){var i=this.options.loadPath;if(e===this.options.fallback)r(null,n[e][t]);else if(undefined.includes(e)){var o=this.services.interpolator.interpolate(i,{lng:e,ns:t});this.loadUrl(o,r)}else r("Not found",!1)}},{key:"loadUrl",value:function(e,t){this.fetchWithTimeout(e).then((function(t){if(!t.ok)throw new Error("failed loading ".concat(e));return t.json()}),(function(){throw new Error("failed loading ".concat(e))})).then((function(e){return t(null,e)})).catch(t)}}])&&s(t.prototype,r),e}();l.type="backend";var u=function(e,t){console.debug("p5.js translator called before translations were loaded"),i.default.t(e,t)};r.translator=u,r.initialize=function(){return i.default.use(o.default).use(l).init({fallbackLng:"en",nestingPrefix:"$tr(",nestingSuffix:")",defaultNS:"translation",returnEmptyString:!1,interpolation:{escapeValue:!1},detection:{checkWhitelist:!1,order:["querystring","navigator","htmlTag","path","subdomain"],caches:[]},backend:{fallback:"en",loadPath:"https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json"},partialBundledLanguages:!0,resources:n}).then((function(e){r.translator=u=e}),(function(e){return console.debug("Translations failed to load (".concat(e,")"))}))}},{"../../translations":void 0,"../../translations/dev":void 0,i18next:3,"i18next-browser-languagedetector":3}],35:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n};i.default.prototype.pushStyle=function(){throw new Error("pushStyle() not used, see push()")},i.default.prototype.popStyle=function(){throw new Error("popStyle() not used, see pop()")},i.default.prototype.popMatrix=function(){throw new Error("popMatrix() not used, see pop()")},i.default.prototype.pushMatrix=function(){throw new Error("pushMatrix() not used, see push()")};var o=i.default;r.default=o},{"./main":36}],36:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,e("./shim");var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var s=i?Object.getOwnPropertyDescriptor(e,a):null;s&&(s.get||s.set)?Object.defineProperty(r,a,s):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s=function(){function e(t,r,n){var i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._accessibleOutputs={text:!1,grid:!1,textLabel:!1,gridLabel:!1},this._setupDone=!1,this._pixelDensity=Math.ceil(window.devicePixelRatio)||1,this._userNode=r,this._curElement=null,this._elements=[],this._glAttributes=null,this._requestAnimId=0,this._preloadCount=0,this._isGlobal=!1,this._loop=!0,this._initializeInstanceVariables(),this._defaultCanvasSize={width:100,height:100},this._events={mousemove:null,mousedown:null,mouseup:null,dragend:null,dragover:null,click:null,dblclick:null,mouseover:null,mouseout:null,keydown:null,keyup:null,keypress:null,touchstart:null,touchmove:null,touchend:null,resize:null,blur:null},this._millisStart=-1,this._lcg_random_state=null,this._gaussian_previous=!1,this._events.wheel=null,this._loadingScreenId="p5_loading",this._registeredMethods={};var o=Object.getOwnPropertyNames(e.prototype._registeredMethods),a=!0,s=!1,l=void 0;try{for(var u,c=o[Symbol.iterator]();!(a=(u=c.next()).done);a=!0){var h=u.value;this._registeredMethods[h]=e.prototype._registeredMethods[h].slice()}}catch(t){s=!0,l=t}finally{try{a||null==c.return||c.return()}finally{if(s)throw l}}window.DeviceOrientationEvent&&(this._events.deviceorientation=null),window.DeviceMotionEvent&&!window._isNodeWebkit&&(this._events.devicemotion=null),this._start=function(){i._userNode&&"string"==typeof i._userNode&&(i._userNode=document.getElementById(i._userNode));var t=i._isGlobal?window:i;if(t.preload){var r=document.getElementById(i._loadingScreenId);r||((r=document.createElement("div")).innerHTML="Loading...",r.style.position="absolute",r.id=i._loadingScreenId,(i._userNode||document.body).appendChild(r));var n=i._preloadMethods;for(var o in n){n[o]=n[o]||e;var a=n[o];a!==e.prototype&&a!==e||(i._isGlobal&&(window[o]=i._wrapPreload(i,o)),a=i),i._registeredPreloadMethods[o]=a[o],a[o]=i._wrapPreload(a,o)}t.preload(),i._runIfPreloadsAreDone()}else i._setup(),i._draw()},this._runIfPreloadsAreDone=function(){var e=this._isGlobal?window:this;if(0===e._preloadCount){var t=document.getElementById(e._loadingScreenId);t&&t.parentNode.removeChild(t),this._setupDone||(this._lastFrameTime=window.performance.now(),e._setup(),e._draw())}},this._decrementPreload=function(){var e=this._isGlobal?window:this;"function"==typeof e.preload&&(e._setProperty("_preloadCount",e._preloadCount-1),e._runIfPreloadsAreDone())},this._wrapPreload=function(e,t){var r=this;return function(){r._incrementPreload();for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return r._registeredPreloadMethods[t].apply(e,i)}},this._incrementPreload=function(){var e=this._isGlobal?window:this;e._setProperty("_preloadCount",e._preloadCount+1)},this._setup=function(){i.createCanvas(i._defaultCanvasSize.width,i._defaultCanvasSize.height,"p2d");var e=i._isGlobal?window:i;if("function"==typeof e.preload)for(var t in i._preloadMethods)e[t]=i._preloadMethods[t][t],e[t]&&i&&(e[t]=e[t].bind(i));i._millisStart=window.performance.now(),"function"==typeof e.setup&&e.setup();var r=document.getElementsByTagName("canvas"),n=!0,o=!1,a=void 0;try{for(var s,l=r[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var u=s.value;"true"===u.dataset.hidden&&(u.style.visibility="",delete u.dataset.hidden)}}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}i._lastFrameTime=window.performance.now(),i._setupDone=!0,(i._accessibleOutputs.grid||i._accessibleOutputs.text)&&i._updateAccsOutput()},this._draw=function(){var e=window.performance.now(),t=e-i._lastFrameTime,r=1e3/i._targetFrameRate;(!i._loop||r-5<=t)&&(i.redraw(),i._frameRate=1e3/(e-i._lastFrameTime),i.deltaTime=e-i._lastFrameTime,i._setProperty("deltaTime",i.deltaTime),i._lastFrameTime=e,void 0!==i._updateMouseCoords&&(i._updateMouseCoords(),i._setProperty("movedX",0),i._setProperty("movedY",0))),i._loop&&(i._requestAnimId=window.requestAnimationFrame(i._draw))},this._setProperty=function(e,t){i[e]=t,i._isGlobal&&(window[e]=t)},this.remove=function(){var t=document.getElementById(i._loadingScreenId);if(t&&(t.parentNode.removeChild(t),i._incrementPreload()),i._curElement){for(var r in i._loop=!1,i._requestAnimId&&window.cancelAnimationFrame(i._requestAnimId),i._events)window.removeEventListener(r,i._events[r]);var n=!0,o=!1,a=void 0;try{for(var s,l=i._elements[Symbol.iterator]();!(n=(s=l.next()).done);n=!0){var u=s.value;for(var c in u.elt&&u.elt.parentNode&&u.elt.parentNode.removeChild(u.elt),u._events)u.elt.removeEventListener(c,u._events[c])}}catch(t){o=!0,a=t}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}var h=i;i._registeredMethods.remove.forEach((function(e){void 0!==e&&e.call(h)}))}if(i._isGlobal){for(var f in e.prototype)try{delete window[f]}catch(t){window[f]=void 0}for(var d in i)if(i.hasOwnProperty(d))try{delete window[d]}catch(t){window[d]=void 0}e.instance=null}},this._registeredMethods.init.forEach((function(e){void 0!==e&&e.call(this)}),this),this._setupPromisePreloads();var f=this._createFriendlyGlobalFunctionBinder();if(t)t(this),e._checkForUserDefinedFunctions(this);else{for(var d in this._isGlobal=!0,e.instance=this,e.prototype)if("function"==typeof e.prototype[d]){var p=d.substring(2);this._events.hasOwnProperty(p)||(Math.hasOwnProperty(d)&&Math[d]===e.prototype[d]?f(d,e.prototype[d]):f(d,e.prototype[d].bind(this)))}else f(d,e.prototype[d]);for(var m in this)this.hasOwnProperty(m)&&f(m,this[m])}for(var v in this._events){var g=this["_on".concat(v)];if(g){var y=g.bind(this);window.addEventListener(v,y,{passive:!1}),this._events[v]=y}}function b(){i._setProperty("focused",!0)}function _(){i._setProperty("focused",!1)}window.addEventListener("focus",b),window.addEventListener("blur",_),this.registerMethod("remove",(function(){window.removeEventListener("focus",b),window.removeEventListener("blur",_)})),"complete"===document.readyState?this._start():window.addEventListener("load",this._start.bind(this),!1)}var t,r;return t=e,(r=[{key:"_initializeInstanceVariables",value:function(){this._styles=[],this._bezierDetail=20,this._curveDetail=20,this._colorMode=i.RGB,this._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},this._downKeys={}}},{key:"registerPreloadMethod",value:function(t,r){e.prototype._preloadMethods.hasOwnProperty(t)||(e.prototype._preloadMethods[t]=r)}},{key:"registerMethod",value:function(t,r){var n=this||e.prototype;n._registeredMethods.hasOwnProperty(t)||(n._registeredMethods[t]=[]),n._registeredMethods[t].push(r)}},{key:"_createFriendlyGlobalFunctionBinder",value:function(e){var t=0<arguments.length&&void 0!==e?e:{},r=t.globalObject||window;return t.log||console.log.bind(console),function(e,t){r[e]=t}}}])&&a(t.prototype,r),e}();for(var l in s.instance=null,s.disableFriendlyErrors=!1,i)s.prototype[l]=i[l];s.prototype._preloadMethods={loadJSON:s.prototype,loadImage:s.prototype,loadStrings:s.prototype,loadXML:s.prototype,loadBytes:s.prototype,loadTable:s.prototype,loadFont:s.prototype,loadModel:s.prototype,loadShader:s.prototype},s.prototype._registeredMethods={init:[],pre:[],post:[],remove:[]},s.prototype._registeredPreloadMethods={};var u=s;r.default=u},{"./constants":26,"./shim":47}],37:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n};i.default.Element=function(e,t){this.elt=e,this._pInst=this._pixelsState=t,this._events={},this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight},i.default.Element.prototype.parent=function(e){return void 0===e?this.elt.parentNode:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof i.default.Element&&(e=e.elt),e.appendChild(this.elt),this)},i.default.Element.prototype.id=function(e){return void 0===e?this.elt.id:(this.elt.id=e,this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this)},i.default.Element.prototype.class=function(e){return void 0===e?this.elt.className:(this.elt.className=e,this)},i.default.Element.prototype.mousePressed=function(e){return i.default.Element._adjustListener("mousedown",(function(t){return this._pInst._setProperty("mouseIsPressed",!0),this._pInst._setMouseButton(t),e.call(this)}),this),this},i.default.Element.prototype.doubleClicked=function(e){return i.default.Element._adjustListener("dblclick",e,this),this},i.default.Element.prototype.mouseWheel=function(e){return i.default.Element._adjustListener("wheel",e,this),this},i.default.Element.prototype.mouseReleased=function(e){return i.default.Element._adjustListener("mouseup",e,this),this},i.default.Element.prototype.mouseClicked=function(e){return i.default.Element._adjustListener("click",e,this),this},i.default.Element.prototype.mouseMoved=function(e){return i.default.Element._adjustListener("mousemove",e,this),this},i.default.Element.prototype.mouseOver=function(e){return i.default.Element._adjustListener("mouseover",e,this),this},i.default.Element.prototype.mouseOut=function(e){return i.default.Element._adjustListener("mouseout",e,this),this},i.default.Element.prototype.touchStarted=function(e){return i.default.Element._adjustListener("touchstart",e,this),this},i.default.Element.prototype.touchMoved=function(e){return i.default.Element._adjustListener("touchmove",e,this),this},i.default.Element.prototype.touchEnded=function(e){return i.default.Element._adjustListener("touchend",e,this),this},i.default.Element.prototype.dragOver=function(e){return i.default.Element._adjustListener("dragover",e,this),this},i.default.Element.prototype.dragLeave=function(e){return i.default.Element._adjustListener("dragleave",e,this),this},i.default.Element._adjustListener=function(e,t,r){return!1===t?i.default.Element._detachListener(e,r):i.default.Element._attachListener(e,t,r),this},i.default.Element._attachListener=function(e,t,r){r._events[e]&&i.default.Element._detachListener(e,r);var n=t.bind(r);r.elt.addEventListener(e,n,!1),r._events[e]=n},i.default.Element._detachListener=function(e,t){var r=t._events[e];t.elt.removeEventListener(e,r,!1),t._events[e]=null},i.default.Element.prototype._setProperty=function(e,t){this[e]=t};var o=i.default.Element;r.default=o},{"./main":36}],38:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("./main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.Graphics=function(e,t,r,n){var i=r||a.P2D;this.canvas=document.createElement("canvas");var s=n._userNode||document.body;for(var l in s.appendChild(this.canvas),o.default.Element.call(this,this.canvas,n),o.default.prototype)this[l]||("function"==typeof o.default.prototype[l]?this[l]=o.default.prototype[l].bind(this):this[l]=o.default.prototype[l]);return o.default.prototype._initializeInstanceVariables.apply(this),this.width=e,this.height=t,this._pixelDensity=n._pixelDensity,i===a.WEBGL?this._renderer=new o.default.RendererGL(this.canvas,this,!1):this._renderer=new o.default.Renderer2D(this.canvas,this,!1),n._elements.push(this),Object.defineProperty(this,"deltaTime",{get:function(){return this._pInst.deltaTime}}),this._renderer.resize(e,t),this._renderer._applyDefaults(),this},o.default.Graphics.prototype=Object.create(o.default.Element.prototype),o.default.Graphics.prototype.reset=function(){this._renderer.resetMatrix(),this._renderer.isP3D&&this._renderer._update()},o.default.Graphics.prototype.remove=function(){this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt);var e=this._pInst._elements.indexOf(this);for(var t in-1!==e&&this._pInst._elements.splice(e,1),this._events)this.elt.removeEventListener(t,this._events[t])};var l=o.default.Graphics;r.default=l},{"./constants":26,"./main":36}],39:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n},o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var o=n?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(r,i,o):r[i]=e[i]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e){var t=0,r=0;if(e.offsetParent)for(;t+=e.offsetLeft,r+=e.offsetTop,e=e.offsetParent;);else t+=e.offsetLeft,r+=e.offsetTop;return[t,r]}i.default.Renderer=function(e,t,r){i.default.Element.call(this,e,t),this.canvas=e,this._pixelsState=t,r?(this._isMainCanvas=!0,this._pInst._setProperty("_curElement",this),this._pInst._setProperty("canvas",this.canvas),this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height)):(this.canvas.style.display="none",this._styles=[]),this._textSize=12,this._textLeading=15,this._textFont="sans-serif",this._textStyle=o.NORMAL,this._textAscent=null,this._textDescent=null,this._textAlign=o.LEFT,this._textBaseline=o.BASELINE,this._rectMode=o.CORNER,this._ellipseMode=o.CENTER,this._curveTightness=0,this._imageMode=o.CORNER,this._tint=null,this._doStroke=!0,this._doFill=!0,this._strokeSet=!1,this._fillSet=!1},i.default.Renderer.prototype=Object.create(i.default.Element.prototype),i.default.Renderer.prototype.push=function(){return{properties:{_doStroke:this._doStroke,_strokeSet:this._strokeSet,_doFill:this._doFill,_fillSet:this._fillSet,_tint:this._tint,_imageMode:this._imageMode,_rectMode:this._rectMode,_ellipseMode:this._ellipseMode,_textFont:this._textFont,_textLeading:this._textLeading,_textSize:this._textSize,_textAlign:this._textAlign,_textBaseline:this._textBaseline,_textStyle:this._textStyle}}},i.default.Renderer.prototype.pop=function(e){e.properties&&Object.assign(this,e.properties)},i.default.Renderer.prototype.resize=function(e,t){this.width=e,this.height=t,this.elt.width=e*this._pInst._pixelDensity,this.elt.height=t*this._pInst._pixelDensity,this.elt.style.width="".concat(e,"px"),this.elt.style.height="".concat(t,"px"),this._isMainCanvas&&(this._pInst._setProperty("width",this.width),this._pInst._setProperty("height",this.height))},i.default.Renderer.prototype.get=function(e,t,r,n){var o=this._pixelsState,a=o._pixelDensity,s=this.canvas;if(void 0===e&&void 0===t)e=t=0,r=o.width,n=o.height;else if(e*=a,t*=a,void 0===r&&void 0===n)return e<0||t<0||e>=s.width||t>=s.height?[0,0,0,0]:this._getPixel(e,t);var l=new i.default.Image(r,n);return l.canvas.getContext("2d").drawImage(s,e,t,r*a,n*a,0,0,r,n),l},i.default.Renderer.prototype.textLeading=function(e){return"number"==typeof e?(this._setProperty("_textLeading",e),this._pInst):this._textLeading},i.default.Renderer.prototype.textSize=function(e){return"number"==typeof e?(this._setProperty("_textSize",e),this._setProperty("_textLeading",e*o._DEFAULT_LEADMULT),this._applyTextProperties()):this._textSize},i.default.Renderer.prototype.textStyle=function(e){return e?(e!==o.NORMAL&&e!==o.ITALIC&&e!==o.BOLD&&e!==o.BOLDITALIC||this._setProperty("_textStyle",e),this._applyTextProperties()):this._textStyle},i.default.Renderer.prototype.textAscent=function(){return null===this._textAscent&&this._updateTextMetrics(),this._textAscent},i.default.Renderer.prototype.textDescent=function(){return null===this._textDescent&&this._updateTextMetrics(),this._textDescent},i.default.Renderer.prototype.textAlign=function(e,t){return void 0!==e?(this._setProperty("_textAlign",e),void 0!==t&&this._setProperty("_textBaseline",t),this._applyTextProperties()):{horizontal:this._textAlign,vertical:this._textBaseline}},i.default.Renderer.prototype.text=function(e,t,r,n,i){var a,s,l,u,c,h,f,d,p,m=this._pInst,v=Number.MAX_VALUE;if((this._doFill||this._doStroke)&&void 0!==e){if("string"!=typeof e&&(e=e.toString()),a=(e=e.replace(/(\t)/g,"  ")).split("\n"),void 0!==n){for(l=d=0;l<a.length;l++){for(c="",f=a[l].split(" "),s=0;s<f.length;s++)if(h="".concat(c+f[s]," "),n<this.textWidth(h)){for(var g=f[s],y=0;y<g.length;y++)h="".concat(c+g[y]),n<this.textWidth(h)&&0<c.length?(c="".concat(g[y]),d+=m.textLeading()):c=h;c="".concat(c," ")}else c=h;l<a.length-1&&(d+=m.textLeading())}switch(this._rectMode===o.CENTER&&(t-=n/2,r-=i/2),this._textAlign){case o.CENTER:t+=n/2;break;case o.RIGHT:t+=n}var b=!1;if(void 0!==i){switch(this._textBaseline){case o.BOTTOM:p=r+(i-d),r=Math.max(p,r);break;case o.CENTER:p=r+(i-d)/2,r=Math.max(p,r);break;case o.BASELINE:b=!0,this._textBaseline=o.TOP}v=r+i-m.textAscent()}for(l=0;l<a.length;l++){for(c="",f=a[l].split(" "),s=0;s<f.length;s++)if(h="".concat(c+f[s]," "),n<this.textWidth(h)){for(var _=f[s],w=0;w<_.length;w++)if(h="".concat(c+_[w]),n<this.textWidth(h)&&0<c.length){var x=c.slice(-1),S="\n"!==x&&" "!==x;c="".concat(c).concat(S?"-":""),this._renderText(m,c,t,r,v),r+=m.textLeading(),c="".concat(_[w])}else c=h;c="".concat(c," ")}else c=h;this._renderText(m,c,t,r,v),r+=m.textLeading(),b&&(this._textBaseline=o.BASELINE)}}else{var E=0,M=m.textAlign().vertical;for(M===o.CENTER?E=(a.length-1)*m.textLeading()/2:M===o.BOTTOM&&(E=(a.length-1)*m.textLeading()),u=0;u<a.length;u++)this._renderText(m,a[u],t,r-E,v),r+=m.textLeading()}return m}},i.default.Renderer.prototype._applyDefaults=function(){return this},i.default.Renderer.prototype._isOpenType=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:this._textFont;return"object"===s(e)&&e.font&&e.font.supported},i.default.Renderer.prototype._updateTextMetrics=function(){if(this._isOpenType())return this._setProperty("_textAscent",this._textFont._textAscent()),this._setProperty("_textDescent",this._textFont._textDescent()),this;var e=document.createElement("span");e.style.fontFamily=this._textFont,e.style.fontSize="".concat(this._textSize,"px"),e.innerHTML="ABCjgq|";var t=document.createElement("div");t.style.display="inline-block",t.style.width="1px",t.style.height="0px";var r=document.createElement("div");r.appendChild(e),r.appendChild(t),r.style.height="0px",r.style.overflow="hidden",document.body.appendChild(r),t.style.verticalAlign="baseline";var n=l(t),i=l(e),o=n[1]-i[1];t.style.verticalAlign="bottom",n=l(t),i=l(e);var a=n[1]-i[1]-o;return document.body.removeChild(r),this._setProperty("_textAscent",o),this._setProperty("_textDescent",a),this};var u=i.default.Renderer;r.default=u},{"../core/constants":26,"./main":36}],40:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=l(e("./main")),o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("./constants")),a=l(e("../image/filters"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e){return e&&e.__esModule?e:{default:e}}e("./p5.Renderer");var u="rgba(0,0,0,0)";i.default.Renderer2D=function(e,t,r){return i.default.Renderer.call(this,e,t,r),this.drawingContext=this.canvas.getContext("2d"),this._pInst._setProperty("drawingContext",this.drawingContext),this},i.default.Renderer2D.prototype=Object.create(i.default.Renderer.prototype),i.default.Renderer2D.prototype._applyDefaults=function(){this._cachedFillStyle=this._cachedStrokeStyle=void 0,this._cachedBlendMode=o.BLEND,this._setFill(o._DEFAULT_FILL),this._setStroke(o._DEFAULT_STROKE),this.drawingContext.lineCap=o.ROUND,this.drawingContext.font="normal 12px sans-serif"},i.default.Renderer2D.prototype.resize=function(e,t){i.default.Renderer.prototype.resize.call(this,e,t),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity)},i.default.Renderer2D.prototype.background=function(){if(this.drawingContext.save(),this.resetMatrix(),(arguments.length<=0?void 0:arguments[0])instanceof i.default.Image)this._pInst.image(arguments.length<=0?void 0:arguments[0],0,0,this.width,this.height);else{var e,t=this._getFill(),r=(e=this._pInst).color.apply(e,arguments);this._pInst._addAccsOutput()&&this._pInst._accsBackground(r.levels);var n=r.toString();this._setFill(n),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.fillRect(0,0,this.width,this.height),this._setFill(t),this._isErasing&&this._pInst.erase()}this.drawingContext.restore()},i.default.Renderer2D.prototype.clear=function(){this.drawingContext.save(),this.resetMatrix(),this.drawingContext.clearRect(0,0,this.width,this.height),this.drawingContext.restore()},i.default.Renderer2D.prototype.fill=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setFill(t.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("fill",t.levels)},i.default.Renderer2D.prototype.stroke=function(){var e,t=(e=this._pInst).color.apply(e,arguments);this._setStroke(t.toString()),this._pInst._addAccsOutput()&&this._pInst._accsCanvasColors("stroke",t.levels)},i.default.Renderer2D.prototype.erase=function(e,t){if(!this._isErasing){this._cachedFillStyle=this.drawingContext.fillStyle;var r=this._pInst.color(255,e).toString();this.drawingContext.fillStyle=r,this._cachedStrokeStyle=this.drawingContext.strokeStyle;var n=this._pInst.color(255,t).toString();this.drawingContext.strokeStyle=n;var i=this._cachedBlendMode;this.blendMode(o.REMOVE),this._cachedBlendMode=i,this._isErasing=!0}},i.default.Renderer2D.prototype.noErase=function(){this._isErasing&&(this.drawingContext.fillStyle=this._cachedFillStyle,this.drawingContext.strokeStyle=this._cachedStrokeStyle,this.blendMode(this._cachedBlendMode),this._isErasing=!1)},i.default.Renderer2D.prototype.image=function(e,t,r,n,o,a,s,l,u){var c;e.gifProperties&&e._animateGif(this._pInst);try{this._tint&&(i.default.MediaElement&&e instanceof i.default.MediaElement&&e.loadPixels(),e.canvas&&(c=this._getTintedImageCanvas(e))),c=c||e.canvas||e.elt;var h=1;e.width&&0<e.width&&(h=c.width/e.width),this._isErasing&&this.blendMode(this._cachedBlendMode),this.drawingContext.drawImage(c,h*t,h*r,h*n,h*o,a,s,l,u),this._isErasing&&this._pInst.erase()}catch(e){if("NS_ERROR_NOT_AVAILABLE"!==e.name)throw e}},i.default.Renderer2D.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=a.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var n=r.getContext("2d"),i=n.createImageData(e.canvas.width,e.canvas.height),o=i.data,s=0;s<t.length;s+=4){var l=t[s],u=t[s+1],c=t[s+2],h=t[s+3];o[s]=l*this._tint[0]/255,o[s+1]=u*this._tint[1]/255,o[s+2]=c*this._tint[2]/255,o[s+3]=h*this._tint[3]/255}return n.putImageData(i,0,0),r},i.default.Renderer2D.prototype.blendMode=function(e){if(e===o.SUBTRACT)console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");else{if(e!==o.BLEND&&e!==o.REMOVE&&e!==o.DARKEST&&e!==o.LIGHTEST&&e!==o.DIFFERENCE&&e!==o.MULTIPLY&&e!==o.EXCLUSION&&e!==o.SCREEN&&e!==o.REPLACE&&e!==o.OVERLAY&&e!==o.HARD_LIGHT&&e!==o.SOFT_LIGHT&&e!==o.DODGE&&e!==o.BURN&&e!==o.ADD)throw new Error("Mode ".concat(e," not recognized."));this._cachedBlendMode=e,this.drawingContext.globalCompositeOperation=e}},i.default.Renderer2D.prototype.blend=function(){for(var e=this.drawingContext.globalCompositeOperation,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];var o=r[r.length-1],a=Array.prototype.slice.call(r,0,r.length-1);this.drawingContext.globalCompositeOperation=o,i.default.prototype.copy.apply(this,a),this.drawingContext.globalCompositeOperation=e},i.default.Renderer2D.prototype._getPixel=function(e,t){var r;return[(r=this.drawingContext.getImageData(e,t,1,1).data)[0],r[1],r[2],r[3]]},i.default.Renderer2D.prototype.loadPixels=function(){var e=this._pixelsState,t=e._pixelDensity,r=this.width*t,n=this.height*t,i=this.drawingContext.getImageData(0,0,r,n);e._setProperty("imageData",i),e._setProperty("pixels",i.data)},i.default.Renderer2D.prototype.set=function(e,t,r){e=Math.floor(e),t=Math.floor(t);var n=this._pixelsState;if(r instanceof i.default.Image)this.drawingContext.save(),this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(n._pixelDensity,n._pixelDensity),this.drawingContext.clearRect(e,t,r.width,r.height),this.drawingContext.drawImage(r.canvas,e,t),this.drawingContext.restore();else{var o=0,a=0,s=0,l=0,u=4*(t*n._pixelDensity*(this.width*n._pixelDensity)+e*n._pixelDensity);if(n.imageData||n.loadPixels.call(n),"number"==typeof r)u<n.pixels.length&&(s=a=o=r,l=255);else if(r instanceof Array){if(r.length<4)throw new Error("pixel array must be of the form [R, G, B, A]");u<n.pixels.length&&(o=r[0],a=r[1],s=r[2],l=r[3])}else r instanceof i.default.Color&&u<n.pixels.length&&(o=r.levels[0],a=r.levels[1],s=r.levels[2],l=r.levels[3]);for(var c=0;c<n._pixelDensity;c++)for(var h=0;h<n._pixelDensity;h++)u=4*((t*n._pixelDensity+h)*this.width*n._pixelDensity+(e*n._pixelDensity+c)),n.pixels[u]=o,n.pixels[u+1]=a,n.pixels[u+2]=s,n.pixels[u+3]=l}},i.default.Renderer2D.prototype.updatePixels=function(e,t,r,n){var i=this._pixelsState,o=i._pixelDensity;void 0===e&&void 0===t&&void 0===r&&void 0===n&&(t=e=0,r=this.width,n=this.height),e*=o,t*=o,r*=o,n*=o,this.gifProperties&&(this.gifProperties.frames[this.gifProperties.displayIndex].image=i.imageData),this.drawingContext.putImageData(i.imageData,e,t,0,0,r,n)},i.default.Renderer2D.prototype._acuteArcToBezier=function(e,t){var r=t/2,n=Math.cos(r),i=Math.sin(r),o=1/Math.tan(r),a=e+r,s=Math.cos(a),l=Math.sin(a),u=(4-n)/3,c=i+(n-u)*o;return{ax:Math.cos(e).toFixed(7),ay:Math.sin(e).toFixed(7),bx:(u*s+c*l).toFixed(7),by:(u*l-c*s).toFixed(7),cx:(u*s-c*l).toFixed(7),cy:(u*l+c*s).toFixed(7),dx:Math.cos(e+t).toFixed(7),dy:Math.sin(e+t).toFixed(7)}},i.default.Renderer2D.prototype.arc=function(e,t,r,n,i,a,s){var l=this.drawingContext,u=r/2,c=n/2,h=0,f=[];for(e+=u,t+=c;1e-5<=a-i;)h=Math.min(a-i,o.HALF_PI),f.push(this._acuteArcToBezier(i,h)),i+=h;return this._doFill&&(l.beginPath(),f.forEach((function(r,n){0===n&&l.moveTo(e+r.ax*u,t+r.ay*c),l.bezierCurveTo(e+r.bx*u,t+r.by*c,e+r.cx*u,t+r.cy*c,e+r.dx*u,t+r.dy*c)})),s!==o.PIE&&null!=s||l.lineTo(e,t),l.closePath(),l.fill()),this._doStroke&&(l.beginPath(),f.forEach((function(r,n){0===n&&l.moveTo(e+r.ax*u,t+r.ay*c),l.bezierCurveTo(e+r.bx*u,t+r.by*c,e+r.cx*u,t+r.cy*c,e+r.dx*u,t+r.dy*c)})),s===o.PIE?(l.lineTo(e,t),l.closePath()):s===o.CHORD&&l.closePath(),l.stroke()),this},i.default.Renderer2D.prototype.ellipse=function(e){var t=this.drawingContext,r=this._doFill,n=this._doStroke,i=parseFloat(e[0]),o=parseFloat(e[1]),a=parseFloat(e[2]),s=parseFloat(e[3]);if(r&&!n){if(this._getFill()===u)return this}else if(!r&&n&&this._getStroke()===u)return this;var l=a/2*.5522847498,c=s/2*.5522847498,h=i+a,f=o+s,d=i+a/2,p=o+s/2;t.beginPath(),t.moveTo(i,p),t.bezierCurveTo(i,p-c,d-l,o,d,o),t.bezierCurveTo(d+l,o,h,p-c,h,p),t.bezierCurveTo(h,p+c,d+l,f,d,f),t.bezierCurveTo(d-l,f,i,p+c,i,p),r&&t.fill(),n&&t.stroke()},i.default.Renderer2D.prototype.line=function(e,t,r,n){var i=this.drawingContext;return this._doStroke&&(this._getStroke()===u||(i.beginPath(),i.moveTo(e,t),i.lineTo(r,n),i.stroke())),this},i.default.Renderer2D.prototype.point=function(e,t){var r=this.drawingContext;if(!this._doStroke)return this;if(this._getStroke()===u)return this;var n=this._getStroke(),i=this._getFill();e=Math.round(e),t=Math.round(t),this._setFill(n),1<r.lineWidth?(r.beginPath(),r.arc(e,t,r.lineWidth/2,0,o.TWO_PI,!1),r.fill()):r.fillRect(e,t,1,1),this._setFill(i)},i.default.Renderer2D.prototype.quad=function(e,t,r,n,i,o,a,s){var l=this.drawingContext,c=this._doFill,h=this._doStroke;if(c&&!h){if(this._getFill()===u)return this}else if(!c&&h&&this._getStroke()===u)return this;return l.beginPath(),l.moveTo(e,t),l.lineTo(r,n),l.lineTo(i,o),l.lineTo(a,s),l.closePath(),c&&l.fill(),h&&l.stroke(),this},i.default.Renderer2D.prototype.rect=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=this.drawingContext,h=this._doFill,f=this._doStroke;if(h&&!f){if(this._getFill()===u)return this}else if(!h&&f&&this._getStroke()===u)return this;if(c.beginPath(),void 0===o)c.rect(t,r,n,i);else{void 0===a&&(a=o),void 0===s&&(s=a),void 0===l&&(l=s);var d=Math.abs(n),p=Math.abs(i),m=d/2,v=p/2;d<2*o&&(o=m),p<2*o&&(o=v),d<2*a&&(a=m),p<2*a&&(a=v),d<2*s&&(s=m),p<2*s&&(s=v),d<2*l&&(l=m),p<2*l&&(l=v),c.beginPath(),c.moveTo(t+o,r),c.arcTo(t+n,r,t+n,r+i,a),c.arcTo(t+n,r+i,t,r+i,s),c.arcTo(t,r+i,t,r,l),c.arcTo(t,r,t+n,r,o),c.closePath()}return this._doFill&&c.fill(),this._doStroke&&c.stroke(),this},i.default.Renderer2D.prototype.triangle=function(e){var t=this.drawingContext,r=this._doFill,n=this._doStroke,i=e[0],o=e[1],a=e[2],s=e[3],l=e[4],c=e[5];if(r&&!n){if(this._getFill()===u)return this}else if(!r&&n&&this._getStroke()===u)return this;t.beginPath(),t.moveTo(i,o),t.lineTo(a,s),t.lineTo(l,c),t.closePath(),r&&t.fill(),n&&t.stroke()},i.default.Renderer2D.prototype.endShape=function(e,t,r,n,i,a,s){if(0===t.length)return this;if(!this._doStroke&&!this._doFill)return this;var l,u,c,h=e===o.CLOSE;h&&!a&&t.push(t[0]);var f=t.length;if(!r||s!==o.POLYGON&&null!==s)if(!n||s!==o.POLYGON&&null!==s)if(!i||s!==o.POLYGON&&null!==s)if(s===o.POINTS)for(u=0;u<f;u++)l=t[u],this._doStroke&&this._pInst.stroke(l[6]),this._pInst.point(l[0],l[1]);else if(s===o.LINES)for(u=0;u+1<f;u+=2)l=t[u],this._doStroke&&this._pInst.stroke(t[u+1][6]),this._pInst.line(l[0],l[1],t[u+1][0],t[u+1][1]);else if(s===o.TRIANGLES)for(u=0;u+2<f;u+=3)l=t[u],this.drawingContext.beginPath(),this.drawingContext.moveTo(l[0],l[1]),this.drawingContext.lineTo(t[u+1][0],t[u+1][1]),this.drawingContext.lineTo(t[u+2][0],t[u+2][1]),this.drawingContext.closePath(),this._doFill&&(this._pInst.fill(t[u+2][5]),this.drawingContext.fill()),this._doStroke&&(this._pInst.stroke(t[u+2][6]),this.drawingContext.stroke());else if(s===o.TRIANGLE_STRIP)for(u=0;u+1<f;u++)l=t[u],this.drawingContext.beginPath(),this.drawingContext.moveTo(t[u+1][0],t[u+1][1]),this.drawingContext.lineTo(l[0],l[1]),this._doStroke&&this._pInst.stroke(t[u+1][6]),this._doFill&&this._pInst.fill(t[u+1][5]),u+2<f&&(this.drawingContext.lineTo(t[u+2][0],t[u+2][1]),this._doStroke&&this._pInst.stroke(t[u+2][6]),this._doFill&&this._pInst.fill(t[u+2][5])),this._doFillStrokeClose(h);else if(s===o.TRIANGLE_FAN){if(2<f){for(this.drawingContext.beginPath(),u=2;u<f;u++)l=t[u],this.drawingContext.moveTo(t[0][0],t[0][1]),this.drawingContext.lineTo(t[u-1][0],t[u-1][1]),this.drawingContext.lineTo(l[0],l[1]),this.drawingContext.lineTo(t[0][0],t[0][1]),u<f-1&&(this._doFill&&l[5]!==t[u+1][5]||this._doStroke&&l[6]!==t[u+1][6])&&(this._doFill&&(this._pInst.fill(l[5]),this.drawingContext.fill(),this._pInst.fill(t[u+1][5])),this._doStroke&&(this._pInst.stroke(l[6]),this.drawingContext.stroke(),this._pInst.stroke(t[u+1][6])),this.drawingContext.closePath(),this.drawingContext.beginPath());this._doFillStrokeClose(h)}}else if(s===o.QUADS)for(u=0;u+3<f;u+=4){for(l=t[u],this.drawingContext.beginPath(),this.drawingContext.moveTo(l[0],l[1]),c=1;c<4;c++)this.drawingContext.lineTo(t[u+c][0],t[u+c][1]);this.drawingContext.lineTo(l[0],l[1]),this._doFill&&this._pInst.fill(t[u+3][5]),this._doStroke&&this._pInst.stroke(t[u+3][6]),this._doFillStrokeClose(h)}else if(s===o.QUAD_STRIP){if(3<f)for(u=0;u+1<f;u+=2)l=t[u],this.drawingContext.beginPath(),u+3<f?(this.drawingContext.moveTo(t[u+2][0],t[u+2][1]),this.drawingContext.lineTo(l[0],l[1]),this.drawingContext.lineTo(t[u+1][0],t[u+1][1]),this.drawingContext.lineTo(t[u+3][0],t[u+3][1]),this._doFill&&this._pInst.fill(t[u+3][5]),this._doStroke&&this._pInst.stroke(t[u+3][6])):(this.drawingContext.moveTo(l[0],l[1]),this.drawingContext.lineTo(t[u+1][0],t[u+1][1])),this._doFillStrokeClose(h)}else{for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[0][0],t[0][1]),u=1;u<f;u++)(l=t[u]).isVert&&(l.moveTo?this.drawingContext.moveTo(l[0],l[1]):this.drawingContext.lineTo(l[0],l[1]));this._doFillStrokeClose(h)}else{for(this.drawingContext.beginPath(),u=0;u<f;u++)t[u].isVert?t[u].moveTo?this.drawingContext.moveTo(t[u][0],t[u][1]):this.drawingContext.lineTo(t[u][0],t[u][1]):this.drawingContext.quadraticCurveTo(t[u][0],t[u][1],t[u][2],t[u][3]);this._doFillStrokeClose(h)}else{for(this.drawingContext.beginPath(),u=0;u<f;u++)t[u].isVert?t[u].moveTo?this.drawingContext.moveTo(t[u][0],t[u][1]):this.drawingContext.lineTo(t[u][0],t[u][1]):this.drawingContext.bezierCurveTo(t[u][0],t[u][1],t[u][2],t[u][3],t[u][4],t[u][5]);this._doFillStrokeClose(h)}else if(3<f){var d=[],p=1-this._curveTightness;for(this.drawingContext.beginPath(),this.drawingContext.moveTo(t[1][0],t[1][1]),u=1;u+2<f;u++)l=t[u],d[0]=[l[0],l[1]],d[1]=[l[0]+(p*t[u+1][0]-p*t[u-1][0])/6,l[1]+(p*t[u+1][1]-p*t[u-1][1])/6],d[2]=[t[u+1][0]+(p*t[u][0]-p*t[u+2][0])/6,t[u+1][1]+(p*t[u][1]-p*t[u+2][1])/6],d[3]=[t[u+1][0],t[u+1][1]],this.drawingContext.bezierCurveTo(d[1][0],d[1][1],d[2][0],d[2][1],d[3][0],d[3][1]);h&&this.drawingContext.lineTo(t[u+1][0],t[u+1][1]),this._doFillStrokeClose(h)}return a=i=n=r=!1,h&&t.pop(),this},i.default.Renderer2D.prototype.strokeCap=function(e){return e!==o.ROUND&&e!==o.SQUARE&&e!==o.PROJECT||(this.drawingContext.lineCap=e),this},i.default.Renderer2D.prototype.strokeJoin=function(e){return e!==o.ROUND&&e!==o.BEVEL&&e!==o.MITER||(this.drawingContext.lineJoin=e),this},i.default.Renderer2D.prototype.strokeWeight=function(e){return this.drawingContext.lineWidth=void 0===e||0===e?1e-4:e,this},i.default.Renderer2D.prototype._getFill=function(){return this._cachedFillStyle||(this._cachedFillStyle=this.drawingContext.fillStyle),this._cachedFillStyle},i.default.Renderer2D.prototype._setFill=function(e){e!==this._cachedFillStyle&&(this.drawingContext.fillStyle=e,this._cachedFillStyle=e)},i.default.Renderer2D.prototype._getStroke=function(){return this._cachedStrokeStyle||(this._cachedStrokeStyle=this.drawingContext.strokeStyle),this._cachedStrokeStyle},i.default.Renderer2D.prototype._setStroke=function(e){e!==this._cachedStrokeStyle&&(this.drawingContext.strokeStyle=e,this._cachedStrokeStyle=e)},i.default.Renderer2D.prototype.bezier=function(e,t,r,n,i,o,a,s){return this._pInst.beginShape(),this._pInst.vertex(e,t),this._pInst.bezierVertex(r,n,i,o,a,s),this._pInst.endShape(),this},i.default.Renderer2D.prototype.curve=function(e,t,r,n,i,o,a,s){return this._pInst.beginShape(),this._pInst.curveVertex(e,t),this._pInst.curveVertex(r,n),this._pInst.curveVertex(i,o),this._pInst.curveVertex(a,s),this._pInst.endShape(),this},i.default.Renderer2D.prototype._doFillStrokeClose=function(e){e&&this.drawingContext.closePath(),this._doFill&&this.drawingContext.fill(),this._doStroke&&this.drawingContext.stroke()},i.default.Renderer2D.prototype.applyMatrix=function(e,t,r,n,i,o){this.drawingContext.transform(e,t,r,n,i,o)},i.default.Renderer2D.prototype.resetMatrix=function(){return this.drawingContext.setTransform(1,0,0,1,0,0),this.drawingContext.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),this},i.default.Renderer2D.prototype.rotate=function(e){this.drawingContext.rotate(e)},i.default.Renderer2D.prototype.scale=function(e,t){return this.drawingContext.scale(e,t),this},i.default.Renderer2D.prototype.translate=function(e,t){return e instanceof i.default.Vector&&(t=e.y,e=e.x),this.drawingContext.translate(e,t),this},i.default.Renderer2D.prototype.text=function(e,t,r,n,a){var s;void 0!==n&&this.drawingContext.textBaseline===o.BASELINE&&(s=!0,this.drawingContext.textBaseline=o.TOP);var l=i.default.Renderer.prototype.text.apply(this,arguments);return s&&(this.drawingContext.textBaseline=o.BASELINE),l},i.default.Renderer2D.prototype._renderText=function(e,t,r,n,i){if(!(i<=n))return e.push(),this._isOpenType()?this._textFont._renderPath(t,r,n,{renderer:this}):(this._doStroke&&this._strokeSet&&this.drawingContext.strokeText(t,r,n),this._doFill&&(this._fillSet||this._setFill(o._DEFAULT_TEXT_FILL),this.drawingContext.fillText(t,r,n))),e.pop(),e},i.default.Renderer2D.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):this.drawingContext.measureText(e).width},i.default.Renderer2D.prototype._applyTextProperties=function(){var e,t=this._pInst;return this._setProperty("_textAscent",null),this._setProperty("_textDescent",null),e=this._textFont,this._isOpenType()&&(e=this._textFont.font.familyName,this._setProperty("_textStyle",this._textFont.font.styleName)),this.drawingContext.font="".concat(this._textStyle||"normal"," ").concat(this._textSize||12,"px ").concat(e||"sans-serif"),this.drawingContext.textAlign=this._textAlign,this._textBaseline===o.CENTER?this.drawingContext.textBaseline=o._CTX_MIDDLE:this.drawingContext.textBaseline=this._textBaseline,t},i.default.Renderer2D.prototype.push=function(){return this.drawingContext.save(),i.default.Renderer.prototype.push.apply(this)},i.default.Renderer2D.prototype.pop=function(e){this.drawingContext.restore(),this._cachedFillStyle=this.drawingContext.fillStyle,this._cachedStrokeStyle=this.drawingContext.strokeStyle,i.default.Renderer.prototype.pop.call(this,e)};var c=i.default.Renderer2D;r.default=c},{"../image/filters":57,"./constants":26,"./main":36,"./p5.Renderer":39}],41:[function(e,t,r){"use strict";var n,i=(n=e("./main"))&&n.__esModule?n:{default:n};i.default.prototype._promisePreloads=[];var o=!(i.default.prototype.registerPromisePreload=function(e){i.default.prototype._promisePreloads.push(e)});function a(){return{}}i.default.prototype._setupPromisePreloads=function(){var e=!0,t=!1,r=void 0;try{for(var n,a=this._promisePreloads[Symbol.iterator]();!(e=(n=a.next()).done);e=!0){var s=n.value,l=this,u=s.method,c=s.addCallbacks,h=s.legacyPreloadSetup,f=s.target||this,d=f[u].bind(f);if(f===i.default.prototype){if(o)continue;l=null,d=f[u]}f[u]=this._wrapPromisePreload(l,d,c),h&&(f[h.method]=this._legacyPreloadGenerator(l,h,f[u]))}}catch(e){t=!0,r=e}finally{try{e||null==a.return||a.return()}finally{if(t)throw r}}o=!0},i.default.prototype._wrapPromisePreload=function(e,t,r){var n=function(){var e=this;this._incrementPreload();for(var n=null,i=null,o=arguments.length,a=new Array(o),s=0;s<o;s++)a[s]=arguments[s];if(r)for(var l=a.length-1;0<=l&&!i&&"function"==typeof a[l];l--)i=n,n=a.pop();var u=Promise.resolve(t.apply(this,a));return n&&u.then(n),i&&u.catch(i),u.then((function(){return e._decrementPreload()})),u};return e&&(n=n.bind(e)),n},i.default.prototype._legacyPreloadGenerator=function(e,t,r){var n=t.createBaseObject||a,i=function(){var e=this;this._incrementPreload();var t=n.apply(this,arguments);return r.apply(this,arguments).then((function(r){Object.assign(t,r),e._decrementPreload()})),t};return e&&(i=i.bind(e)),i}},{"./main":36}],42:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n},o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var o=n?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(r,i,o):r[i]=e[i]}return r.default=e,t&&t.set(e,r),r}(e("./constants"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e("./p5.Graphics"),e("./p5.Renderer2D"),e("../webgl/p5.RendererGL");var l="defaultCanvas0";i.default.prototype.createCanvas=function(e,t,r){i.default._validateParameters("createCanvas",arguments);var n,a=r||o.P2D;if(a===o.WEBGL){if(n=document.getElementById(l)){n.parentNode.removeChild(n);var s=this._renderer;this._elements=this._elements.filter((function(e){return e!==s}))}(n=document.createElement("canvas")).id=l,n.classList.add("p5Canvas")}else if(this._defaultGraphicsCreated)n=this.canvas;else{n=document.createElement("canvas");for(var u=0;document.getElementById("defaultCanvas".concat(u));)u++;l="defaultCanvas".concat(u),n.id=l,n.classList.add("p5Canvas")}if(this._setupDone||(n.dataset.hidden=!0,n.style.visibility="hidden"),this._userNode)this._userNode.appendChild(n);else{if(0===document.getElementsByTagName("main").length){var c=document.createElement("main");document.body.appendChild(c)}document.getElementsByTagName("main")[0].appendChild(n)}return a===o.WEBGL?(this._setProperty("_renderer",new i.default.RendererGL(n,this,!0)),this._elements.push(this._renderer)):this._defaultGraphicsCreated||(this._setProperty("_renderer",new i.default.Renderer2D(n,this,!0)),this._defaultGraphicsCreated=!0,this._elements.push(this._renderer)),this._renderer.resize(e,t),this._renderer._applyDefaults(),this._renderer},i.default.prototype.resizeCanvas=function(e,t,r){if(i.default._validateParameters("resizeCanvas",arguments),this._renderer){var n={};for(var o in this.drawingContext){var a=this.drawingContext[o];"object"!==s(a)&&"function"!=typeof a&&(n[o]=a)}for(var l in this._renderer.resize(e,t),this.width=e,this.height=t,n)try{this.drawingContext[l]=n[l]}catch(e){}r||this.redraw()}this._addAccsOutput()&&this._updateAccsOutput()},i.default.prototype.noCanvas=function(){this.canvas&&this.canvas.parentNode.removeChild(this.canvas)},i.default.prototype.createGraphics=function(e,t,r){return i.default._validateParameters("createGraphics",arguments),new i.default.Graphics(e,t,r,this)},i.default.prototype.blendMode=function(e){i.default._validateParameters("blendMode",arguments),e===o.NORMAL&&(console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."),e=o.BLEND),this._renderer.blendMode(e)};var u=i.default;r.default=u},{"../webgl/p5.RendererGL":90,"./constants":26,"./main":36,"./p5.Graphics":38,"./p5.Renderer2D":40}],43:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=l(e("../main")),o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../constants")),a=l(e("../helpers"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e){return e&&e.__esModule?e:{default:e}}e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),i.default.prototype._normalizeArcAngles=function(e,t,r,n,i){var a;return e-=o.TWO_PI*Math.floor(e/o.TWO_PI),t-=o.TWO_PI*Math.floor(t/o.TWO_PI),a=Math.min(Math.abs(e-t),o.TWO_PI-Math.abs(e-t)),i&&(e=e<=o.HALF_PI?Math.atan(r/n*Math.tan(e)):e>o.HALF_PI&&e<=3*o.HALF_PI?Math.atan(r/n*Math.tan(e))+o.PI:Math.atan(r/n*Math.tan(e))+o.TWO_PI,t=t<=o.HALF_PI?Math.atan(r/n*Math.tan(t)):t>o.HALF_PI&&t<=3*o.HALF_PI?Math.atan(r/n*Math.tan(t))+o.PI:Math.atan(r/n*Math.tan(t))+o.TWO_PI),t<e&&(t+=o.TWO_PI),{start:e,stop:t,correspondToSamePoint:a<1e-5}},i.default.prototype.arc=function(e,t,r,n,o,s,l,u){if(i.default._validateParameters("arc",arguments),!this._renderer._doStroke&&!this._renderer._doFill)return this;if(o===s)return this;o=this._toRadians(o),s=this._toRadians(s),r=Math.abs(r),n=Math.abs(n);var c=a.default.modeAdjust(e,t,r,n,this._renderer._ellipseMode),h=this._normalizeArcAngles(o,s,c.w,c.h,!0);return h.correspondToSamePoint?this._renderer.ellipse([c.x,c.y,c.w,c.h,u]):(this._renderer.arc(c.x,c.y,c.w,c.h,h.start,h.stop,l,u),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("arc",[c.x,c.y,c.w,c.h,h.start,h.stop,l])),this},i.default.prototype.ellipse=function(e,t,r,n,o){return i.default._validateParameters("ellipse",arguments),this._renderEllipse.apply(this,arguments)},i.default.prototype.circle=function(){i.default._validateParameters("circle",arguments);var e=Array.prototype.slice.call(arguments,0,2);return e.push(arguments[2]),e.push(arguments[2]),this._renderEllipse.apply(this,e)},i.default.prototype._renderEllipse=function(e,t,r,n,i){if(!this._renderer._doStroke&&!this._renderer._doFill)return this;r<0&&(r=Math.abs(r)),void 0===n?n=r:n<0&&(n=Math.abs(n));var o=a.default.modeAdjust(e,t,r,n,this._renderer._ellipseMode);return this._renderer.ellipse([o.x,o.y,o.w,o.h,i]),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("ellipse",[o.x,o.y,o.w,o.h]),this},i.default.prototype.line=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return i.default._validateParameters("line",t),this._renderer._doStroke&&(n=this._renderer).line.apply(n,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("line",t),this},i.default.prototype.point=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return i.default._validateParameters("point",t),this._renderer._doStroke&&(1===t.length&&t[0]instanceof i.default.Vector?this._renderer.point.call(this._renderer,t[0].x,t[0].y,t[0].z):((n=this._renderer).point.apply(n,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("point",t))),this},i.default.prototype.quad=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return i.default._validateParameters("quad",t),(this._renderer._doStroke||this._renderer._doFill)&&(this._renderer.isP3D&&12!==t.length?this._renderer.quad.call(this._renderer,t[0],t[1],0,t[2],t[3],0,t[4],t[5],0,t[6],t[7],0):((n=this._renderer).quad.apply(n,t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("quadrilateral",t))),this},i.default.prototype.rect=function(){return i.default._validateParameters("rect",arguments),this._renderRect.apply(this,arguments)},i.default.prototype.square=function(e,t,r,n,o,a,s){return i.default._validateParameters("square",arguments),this._renderRect.call(this,e,t,r,r,n,o,a,s)},i.default.prototype._renderRect=function(){if(this._renderer._doStroke||this._renderer._doFill){3===arguments.length&&(arguments[3]=arguments[2]);for(var e=a.default.modeAdjust(arguments[0],arguments[1],arguments[2],arguments[3],this._renderer._rectMode),t=[e.x,e.y,e.w,e.h],r=4;r<arguments.length;r++)t[r]=arguments[r];this._renderer.rect(t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("rectangle",[e.x,e.y,e.w,e.h])}return this},i.default.prototype.triangle=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i.default._validateParameters("triangle",t),(this._renderer._doStroke||this._renderer._doFill)&&this._renderer.triangle(t),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._accsOutput("triangle",t),this};var u=i.default;r.default=u},{"../constants":26,"../friendly_errors/fes_core":28,"../friendly_errors/file_errors":29,"../friendly_errors/validate_params":31,"../helpers":32,"../main":36}],44:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.ellipseMode=function(e){return o.default._validateParameters("ellipseMode",arguments),e!==a.CORNER&&e!==a.CORNERS&&e!==a.RADIUS&&e!==a.CENTER||(this._renderer._ellipseMode=e),this},o.default.prototype.noSmooth=function(){return this.setAttributes("antialias",!1),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!1),this},o.default.prototype.rectMode=function(e){return o.default._validateParameters("rectMode",arguments),e!==a.CORNER&&e!==a.CORNERS&&e!==a.RADIUS&&e!==a.CENTER||(this._renderer._rectMode=e),this},o.default.prototype.smooth=function(){return this.setAttributes("antialias",!0),this._renderer.isP3D||"imageSmoothingEnabled"in this.drawingContext&&(this.drawingContext.imageSmoothingEnabled=!0),this},o.default.prototype.strokeCap=function(e){return o.default._validateParameters("strokeCap",arguments),e!==a.ROUND&&e!==a.SQUARE&&e!==a.PROJECT||this._renderer.strokeCap(e),this},o.default.prototype.strokeJoin=function(e){return o.default._validateParameters("strokeJoin",arguments),e!==a.ROUND&&e!==a.BEVEL&&e!==a.MITER||this._renderer.strokeJoin(e),this},o.default.prototype.strokeWeight=function(e){return o.default._validateParameters("strokeWeight",arguments),this._renderer.strokeWeight(e),this};var l=o.default;r.default=l},{"../constants":26,"../main":36}],45:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../main"))&&n.__esModule?n:{default:n};e("../friendly_errors/fes_core"),e("../friendly_errors/file_errors"),e("../friendly_errors/validate_params"),i.default.prototype.bezier=function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return i.default._validateParameters("bezier",r),(this._renderer._doStroke||this._renderer._doFill)&&(e=this._renderer).bezier.apply(e,r),this},i.default.prototype.bezierDetail=function(e){return i.default._validateParameters("bezierDetail",arguments),this._bezierDetail=e,this},i.default.prototype.bezierPoint=function(e,t,r,n,o){i.default._validateParameters("bezierPoint",arguments);var a=1-o;return Math.pow(a,3)*e+3*Math.pow(a,2)*o*t+3*a*Math.pow(o,2)*r+Math.pow(o,3)*n},i.default.prototype.bezierTangent=function(e,t,r,n,o){i.default._validateParameters("bezierTangent",arguments);var a=1-o;return 3*n*Math.pow(o,2)-3*r*Math.pow(o,2)+6*r*a*o-6*t*a*o+3*t*Math.pow(a,2)-3*e*Math.pow(a,2)},i.default.prototype.curve=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return i.default._validateParameters("curve",t),this._renderer._doStroke&&(n=this._renderer).curve.apply(n,t),this},i.default.prototype.curveDetail=function(e){return i.default._validateParameters("curveDetail",arguments),this._curveDetail=e<3?3:e,this},i.default.prototype.curveTightness=function(e){return i.default._validateParameters("curveTightness",arguments),this._renderer._curveTightness=e,this},i.default.prototype.curvePoint=function(e,t,r,n,o){i.default._validateParameters("curvePoint",arguments);var a=o*o*o,s=o*o;return e*(-.5*a+s-.5*o)+t*(1.5*a-2.5*s+1)+r*(-1.5*a+2*s+.5*o)+n*(.5*a-.5*s)},i.default.prototype.curveTangent=function(e,t,r,n,o){i.default._validateParameters("curveTangent",arguments);var a=o*o;return e*(-3*a/2+2*o-.5)+t*(9*a/2-5*o)+r*(-9*a/2+4*o+.5)+n*(3*a/2-o)};var o=i.default;r.default=o},{"../friendly_errors/fes_core":28,"../friendly_errors/file_errors":29,"../friendly_errors/validate_params":31,"../main":36}],46:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}var l=null,u=[],c=[],h=!1,f=!1,d=!1,p=!1,m=!0;o.default.prototype.beginContour=function(){return c=[],p=!0,this},o.default.prototype.beginShape=function(e){var t;return o.default._validateParameters("beginShape",arguments),this._renderer.isP3D?(t=this._renderer).beginShape.apply(t,arguments):(l=e===a.POINTS||e===a.LINES||e===a.TRIANGLES||e===a.TRIANGLE_FAN||e===a.TRIANGLE_STRIP||e===a.QUADS||e===a.QUAD_STRIP?e:null,u=[],c=[]),this},o.default.prototype.bezierVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;if(o.default._validateParameters("bezierVertex",t),this._renderer.isP3D)(n=this._renderer).bezierVertex.apply(n,t);else if(0===u.length)o.default._friendlyError("vertex() must be used once before calling bezierVertex()","bezierVertex");else{h=!0;for(var i=[],a=0;a<t.length;a++)i[a]=t[a];i.isVert=!1,p?c.push(i):u.push(i)}return this},o.default.prototype.curveVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n;return o.default._validateParameters("curveVertex",t),this._renderer.isP3D?(n=this._renderer).curveVertex.apply(n,t):(f=!0,this.vertex(t[0],t[1])),this},o.default.prototype.endContour=function(){var e=c[0].slice();e.isVert=c[0].isVert,e.moveTo=!1,c.push(e),m&&(u.push(u[0]),m=!1);for(var t=0;t<c.length;t++)u.push(c[t]);return this},o.default.prototype.endShape=function(e){if(o.default._validateParameters("endShape",arguments),this._renderer.isP3D)this._renderer.endShape(e,f,h,d,p,l);else{if(0===u.length)return this;if(!this._renderer._doStroke&&!this._renderer._doFill)return this;var t=e===a.CLOSE;t&&!p&&u.push(u[0]),this._renderer.endShape(e,u,f,h,d,p,l),m=!(p=d=h=f=!1),t&&u.pop()}return this},o.default.prototype.quadraticVertex=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];if(o.default._validateParameters("quadraticVertex",t),this._renderer.isP3D){var n;(n=this._renderer).quadraticVertex.apply(n,t)}else{if(this._contourInited){var i={};return i.x=t[0],i.y=t[1],i.x3=t[2],i.y3=t[3],i.type=a.QUADRATIC,this._contourVertices.push(i),this}if(0<u.length){d=!0;for(var s=[],l=0;l<t.length;l++)s[l]=t[l];s.isVert=!1,p?c.push(s):u.push(s)}else o.default._friendlyError("vertex() must be used once before calling quadraticVertex()","quadraticVertex")}return this},o.default.prototype.vertex=function(e,t,r,n,i){if(this._renderer.isP3D){var o;(o=this._renderer).vertex.apply(o,arguments)}else{var a=[];a.isVert=!0,a[0]=e,a[1]=t,a[2]=0,a[3]=0,a[4]=0,a[5]=this._renderer._getFill(),a[6]=this._renderer._getStroke(),r&&(a.moveTo=r),p?(0===c.length&&(a.moveTo=!0),c.push(a)):u.push(a)}return this};var v=o.default;r.default=v},{"../constants":26,"../main":36}],47:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)},"undefined"==typeof Uint8ClampedArray||Uint8ClampedArray.prototype.slice||Object.defineProperty(Uint8ClampedArray.prototype,"slice",{value:Array.prototype.slice,writable:!0,configurable:!0,enumerable:!1}),function(){if(!Object.assign){var e=Object.keys,t=Object.defineProperty,r="function"==typeof Symbol&&"symbol"===n(Symbol()),i=Object.prototype.propertyIsEnumerable,o=function(e){return function(t){return i.call(e,t)}};t(Object,"assign",{value:function(t,n){if(null==t)throw new TypeError("target must be an object");var i,a,s,l,u=Object(t);for(i=1;i<arguments.length;++i)for(a=Object(arguments[i]),l=e(a),r&&Object.getOwnPropertySymbols&&l.push.apply(l,Object.getOwnPropertySymbols(a).filter(o(a))),s=0;s<l.length;++s)u[l[s]]=a[l[s]];return u},configurable:!0,enumerable:!1,writable:!0})}}()},{}],48:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n};i.default.prototype.noLoop=function(){this._loop=!1},i.default.prototype.loop=function(){this._loop||(this._loop=!0,this._setupDone&&this._draw())},i.default.prototype.isLooping=function(){return this._loop},i.default.prototype.push=function(){this._styles.push({props:{_colorMode:this._colorMode},renderer:this._renderer.push()})},i.default.prototype.pop=function(){var e=this._styles.pop();e?(this._renderer.pop(e.renderer),Object.assign(this,e.props)):console.warn("pop() was called without matching push()")},i.default.prototype.redraw=function(e){if(!this._inUserDraw&&this._setupDone){var t=parseInt(e);(isNaN(t)||t<1)&&(t=1);var r=this._isGlobal?window:this;if("function"==typeof r.draw){void 0===r.setup&&r.scale(r._pixelDensity,r._pixelDensity);for(var n=function(e){e.call(r)},i=0;i<t;i++){r.resetMatrix(),(this._accessibleOutputs.grid||this._accessibleOutputs.text)&&this._updateAccsOutput(),r._renderer.isP3D&&r._renderer._update(),r._setProperty("frameCount",r.frameCount+1),r._registeredMethods.pre.forEach(n),this._inUserDraw=!0;try{r.draw()}finally{this._inUserDraw=!1}r._registeredMethods.post.forEach(n)}}}};var o=i.default;r.default=o},{"./main":36}],49:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("./main"))&&n.__esModule?n:{default:n};i.default.prototype.applyMatrix=function(e,t,r,n,i,o){var a;return(a=this._renderer).applyMatrix.apply(a,arguments),this},i.default.prototype.resetMatrix=function(){return this._renderer.resetMatrix(),this},i.default.prototype.rotate=function(e,t){return i.default._validateParameters("rotate",arguments),this._renderer.rotate(this._toRadians(e),t),this},i.default.prototype.rotateX=function(e){return this._assert3d("rotateX"),i.default._validateParameters("rotateX",arguments),this._renderer.rotateX(this._toRadians(e)),this},i.default.prototype.rotateY=function(e){return this._assert3d("rotateY"),i.default._validateParameters("rotateY",arguments),this._renderer.rotateY(this._toRadians(e)),this},i.default.prototype.rotateZ=function(e){return this._assert3d("rotateZ"),i.default._validateParameters("rotateZ",arguments),this._renderer.rotateZ(this._toRadians(e)),this},i.default.prototype.scale=function(e,t,r){if(i.default._validateParameters("scale",arguments),e instanceof i.default.Vector){var n=e;e=n.x,t=n.y,r=n.z}else if(e instanceof Array){var o=e;e=o[0],t=o[1],r=o[2]||1}return isNaN(t)?t=r=e:isNaN(r)&&(r=1),this._renderer.scale.call(this._renderer,e,t,r),this},i.default.prototype.shearX=function(e){i.default._validateParameters("shearX",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,0,Math.tan(t),1,0,0),this},i.default.prototype.shearY=function(e){i.default._validateParameters("shearY",arguments);var t=this._toRadians(e);return this._renderer.applyMatrix(1,Math.tan(t),0,1,0,0),this},i.default.prototype.translate=function(e,t,r){return i.default._validateParameters("translate",arguments),this._renderer.isP3D?this._renderer.translate(e,t,r):this._renderer.translate(e,t),this};var o=i.default;r.default=o},{"./main":36}],50:[function(e,t,r){"use strict";var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}i.default.prototype.storeItem=function(e,t){"string"!=typeof e&&console.log("The argument that you passed to storeItem() - ".concat(e," is not a string.")),e.endsWith("p5TypeID")&&console.log("The argument that you passed to storeItem() - ".concat(e," must not end with 'p5TypeID'.")),void 0===t&&console.log("You cannot store undefined variables using storeItem().");var r=a(t);switch(r){case"number":case"boolean":t=t.toString();break;case"object":t instanceof i.default.Color?r="p5.Color":t instanceof i.default.Vector&&(r="p5.Vector",t=[t.x,t.y,t.z]),t=JSON.stringify(t)}localStorage.setItem(e,t);var n="".concat(e,"p5TypeID");localStorage.setItem(n,r)},i.default.prototype.getItem=function(e){var t=localStorage.getItem(e),r=localStorage.getItem("".concat(e,"p5TypeID"));if(void 0===r)console.log("Unable to determine type of item stored under ".concat(e,"in local storage. Did you save the item with something other than setItem()?"));else if(null!==t)switch(r){case"number":t=parseFloat(t);break;case"boolean":t="true"===t;break;case"object":t=JSON.parse(t);break;case"p5.Color":t=JSON.parse(t),t=this.color.apply(this,o(t.levels));break;case"p5.Vector":t=JSON.parse(t),t=this.createVector.apply(this,o(t))}return t},i.default.prototype.clearStorage=function(){localStorage.clear()},i.default.prototype.removeItem=function(e){"string"!=typeof e&&console.log("The argument that you passed to removeItem() - ".concat(e," is not a string.")),localStorage.removeItem(e),localStorage.removeItem("".concat(e,"p5TypeID"))}},{"../core/main":36}],51:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.createStringDict=function(e,t){return i.default._validateParameters("createStringDict",arguments),new i.default.StringDict(e,t)},i.default.prototype.createNumberDict=function(e,t){return i.default._validateParameters("createNumberDict",arguments),new i.default.NumberDict(e,t)},i.default.TypedDict=function(e,t){return e instanceof Object?this.data=e:(this.data={},this.data[e]=t),this},i.default.TypedDict.prototype.size=function(){return Object.keys(this.data).length},i.default.TypedDict.prototype.hasKey=function(e){return this.data.hasOwnProperty(e)},i.default.TypedDict.prototype.get=function(e){if(this.data.hasOwnProperty(e))return this.data[e];console.log("".concat(e," does not exist in this Dictionary"))},i.default.TypedDict.prototype.set=function(e,t){this._validate(t)?this.data[e]=t:console.log("Those values dont work for this dictionary type.")},i.default.TypedDict.prototype._addObj=function(e){for(var t in e)this.set(t,e[t])},i.default.TypedDict.prototype.create=function(e,t){e instanceof Object&&void 0===t?this._addObj(e):void 0!==e?this.set(e,t):console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair")},i.default.TypedDict.prototype.clear=function(){this.data={}},i.default.TypedDict.prototype.remove=function(e){if(!this.data.hasOwnProperty(e))throw new Error("".concat(e," does not exist in this Dictionary"));delete this.data[e]},i.default.TypedDict.prototype.print=function(){for(var e in this.data)console.log("key:".concat(e," value:").concat(this.data[e]))},i.default.TypedDict.prototype.saveTable=function(e){var t="";for(var r in this.data)t+="".concat(r,",").concat(this.data[r],"\n");var n=new Blob([t],{type:"text/csv"});i.default.prototype.downloadFile(n,e||"mycsv","csv")},i.default.TypedDict.prototype.saveJSON=function(e,t){i.default.prototype.saveJSON(this.data,e,t)},i.default.TypedDict.prototype._validate=function(e){return!0},i.default.StringDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];i.default.TypedDict.apply(this,t)},i.default.StringDict.prototype=Object.create(i.default.TypedDict.prototype),i.default.StringDict.prototype._validate=function(e){return"string"==typeof e},i.default.NumberDict=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];i.default.TypedDict.apply(this,t)},i.default.NumberDict.prototype=Object.create(i.default.TypedDict.prototype),i.default.NumberDict.prototype._validate=function(e){return"number"==typeof e},i.default.NumberDict.prototype.add=function(e,t){this.data.hasOwnProperty(e)?this.data[e]+=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},i.default.NumberDict.prototype.sub=function(e,t){this.add(e,-t)},i.default.NumberDict.prototype.mult=function(e,t){this.data.hasOwnProperty(e)?this.data[e]*=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},i.default.NumberDict.prototype.div=function(e,t){this.data.hasOwnProperty(e)?this.data[e]/=t:console.log("The key - ".concat(e," does not exist in this dictionary."))},i.default.NumberDict.prototype._valueTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");if(1===Object.keys(this.data).length)return this.data[Object.keys(this.data)[0]];var t=this.data[Object.keys(this.data)[0]];for(var r in this.data)this.data[r]*e<t*e&&(t=this.data[r]);return t},i.default.NumberDict.prototype.minValue=function(){return this._valueTest(1)},i.default.NumberDict.prototype.maxValue=function(){return this._valueTest(-1)},i.default.NumberDict.prototype._keyTest=function(e){if(0===Object.keys(this.data).length)throw new Error("Unable to use minValue on an empty NumberDict");if(1===Object.keys(this.data).length)return Object.keys(this.data)[0];for(var t=Object.keys(this.data)[0],r=1;r<Object.keys(this.data).length;r++)Object.keys(this.data)[r]*e<t*e&&(t=Object.keys(this.data)[r]);return t},i.default.NumberDict.prototype.minKey=function(){return this._keyTest(1)},i.default.NumberDict.prototype.maxKey=function(){return this._keyTest(-1)};var o=i.default.TypedDict;r.default=o},{"../core/main":36}],52:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function a(e,t,r){(t._userNode?t._userNode:document.body).appendChild(e);var n=r?new i.default.MediaElement(e,t):new i.default.Element(e,t);return t._elements.push(n),n}function s(e,t,r,n){var i=document.createElement(t);"string"==typeof(r=r||"")&&(r=[r]);var o=!0,s=!1,l=void 0;try{for(var u,c=r[Symbol.iterator]();!(o=(u=c.next()).done);o=!0){var h=u.value,f=document.createElement("source");f.setAttribute("src",h),i.appendChild(f)}}catch(e){s=!0,l=e}finally{try{o||null==c.return||c.return()}finally{if(s)throw l}}"function"==typeof n&&i.addEventListener("canplaythrough",(function e(){n(),i.removeEventListener("canplaythrough",e)}));var d=a(i,e,!0);return d.loadedmetadata=!1,i.addEventListener("loadedmetadata",(function(){d.width=i.videoWidth,d.height=i.videoHeight,0===d.elt.width&&(d.elt.width=i.videoWidth),0===d.elt.height&&(d.elt.height=i.videoHeight),d.presetPlaybackRate&&(d.elt.playbackRate=d.presetPlaybackRate,delete d.presetPlaybackRate),d.loadedmetadata=!0})),d}function l(e,t,r,n){this.callback=e,this.time=t,this.id=r,this.val=n}i.default.prototype.select=function(e,t){i.default._validateParameters("select",arguments);var r=this._getContainer(t).querySelector(e);return r?this._wrapElement(r):null},i.default.prototype.selectAll=function(e,t){i.default._validateParameters("selectAll",arguments);var r=[],n=this._getContainer(t).querySelectorAll(e);if(n)for(var o=0;o<n.length;o++){var a=this._wrapElement(n[o]);r.push(a)}return r},i.default.prototype._getContainer=function(e){var t=document;return"string"==typeof e?t=document.querySelector(e)||document:e instanceof i.default.Element?t=e.elt:e instanceof HTMLElement&&(t=e),t},i.default.prototype._wrapElement=function(e){var t=Array.prototype.slice.call(e.children);if("INPUT"!==e.tagName||"checkbox"!==e.type)return"VIDEO"===e.tagName||"AUDIO"===e.tagName?new i.default.MediaElement(e,this):"SELECT"===e.tagName?this.createSelect(new i.default.Element(e,this)):0<t.length&&t.every((function(e){return"INPUT"===e.tagName||"LABEL"===e.tagName}))?this.createRadio(new i.default.Element(e,this)):new i.default.Element(e,this);var r=new i.default.Element(e,this);return r.checked=function(){return 0===arguments.length?this.elt.checked:(this.elt.checked=!!arguments[0],this)},r},i.default.prototype.removeElements=function(e){i.default._validateParameters("removeElements",arguments),this._elements.filter((function(e){return!(e.elt instanceof HTMLCanvasElement)})).map((function(e){return e.remove()}))},i.default.Element.prototype.changed=function(e){return i.default.Element._adjustListener("change",e,this),this},i.default.Element.prototype.input=function(e){return i.default.Element._adjustListener("input",e,this),this},i.default.prototype.createDiv=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("div");return t.innerHTML=e,a(t,this)},i.default.prototype.createP=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("p");return t.innerHTML=e,a(t,this)},i.default.prototype.createSpan=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=document.createElement("span");return t.innerHTML=e,a(t,this)},i.default.prototype.createImg=function(){i.default._validateParameters("createImg",arguments);var e,t=document.createElement("img"),r=arguments;return 1<r.length&&"string"==typeof r[1]&&(t.alt=r[1]),2<r.length&&"string"==typeof r[2]&&(t.crossOrigin=r[2]),t.src=r[0],e=a(t,this),t.addEventListener("load",(function(){e.width=t.offsetWidth||t.width,e.height=t.offsetHeight||t.height;var n=r[r.length-1];"function"==typeof n&&n(e)})),e},i.default.prototype.createA=function(e,t,r){i.default._validateParameters("createA",arguments);var n=document.createElement("a");return n.href=e,n.innerHTML=t,r&&(n.target=r),a(n,this)},i.default.prototype.createSlider=function(e,t,r,n){i.default._validateParameters("createSlider",arguments);var o=document.createElement("input");return o.type="range",o.min=e,o.max=t,0===n?o.step=1e-18:n&&(o.step=n),"number"==typeof r&&(o.value=r),a(o,this)},i.default.prototype.createButton=function(e,t){i.default._validateParameters("createButton",arguments);var r=document.createElement("button");return r.innerHTML=e,t&&(r.value=t),a(r,this)},i.default.prototype.createCheckbox=function(){i.default._validateParameters("createCheckbox",arguments);var e=document.createElement("div"),t=document.createElement("input");t.type="checkbox",e.appendChild(t);var r=a(e,this);if(r.checked=function(){var e=r.elt.getElementsByTagName("input")[0];if(e){if(0===arguments.length)return e.checked;e.checked=!!arguments[0]}return r},this.value=function(e){return r.value=e,this},arguments[0]){var n=Math.random().toString(36).slice(2),o=document.createElement("label");t.setAttribute("id",n),o.htmlFor=n,r.value(arguments[0]),o.appendChild(document.createTextNode(arguments[0])),e.appendChild(o)}return arguments[1]&&(t.checked=!0),r},i.default.prototype.createSelect=function(){var e;i.default._validateParameters("createSelect",arguments);var t=arguments[0];if(t instanceof i.default.Element&&t.elt instanceof HTMLSelectElement)e=t,this.elt=t.elt;else if(t instanceof HTMLSelectElement)e=a(t,this),this.elt=t;else{var r=document.createElement("select");t&&"boolean"==typeof t&&r.setAttribute("multiple","true"),e=a(r,this),this.elt=r}return e.option=function(e,t){var r;if(void 0!==e){for(var n=0;n<this.elt.length;n+=1)if(this.elt[n].innerHTML===e){r=n;break}if(void 0!==r)!1===t?this.elt.remove(r):this.elt[r].value=t;else{var i=document.createElement("option");i.innerHTML=e,i.value=void 0===t?e:t,this.elt.appendChild(i),this._pInst._elements.push(i)}}},e.selected=function(e){if(void 0!==e){for(var t=0;t<this.elt.length;t+=1)this.elt[t].value.toString()===e.toString()&&(this.elt.selectedIndex=t);return this}if(this.elt.getAttribute("multiple")){var r=[],n=!0,i=!1,o=void 0;try{for(var a,s=this.elt.selectedOptions[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;r.push(l.value)}}catch(e){i=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw o}}return r}return this.elt.value},e.disable=function(e){if("string"==typeof e)for(var t=0;t<this.elt.length;t++)this.elt[t].value.toString()===e&&(this.elt[t].disabled=!0,this.elt[t].selected=!1);else this.elt.disabled=!0;return this},e},i.default.prototype.createRadio=function(){var e,t,r=arguments[0];r instanceof HTMLDivElement||r instanceof HTMLSpanElement?(e=r,"string"==typeof arguments[1]&&(t=arguments[1])):("string"==typeof r&&(t=r),e=document.createElement("div"));var n=a(this.elt=e,this);function i(e){return e instanceof HTMLInputElement&&"radio"===e.type}function o(e){return e.nextElementSibling instanceof HTMLLabelElement}return n._name=t||"radioOption",n._getOptionsArray=function(){return Array.from(this.elt.children).filter(i)},n.option=function(e,t){var r,i,a=!0,s=!1,l=void 0;try{for(var u,c=n._getOptionsArray()[Symbol.iterator]();!(a=(u=c.next()).done);a=!0){var h=u.value;if(h.value===e){r=h;break}}}catch(e){s=!0,l=e}finally{try{a||null==c.return||c.return()}finally{if(s)throw l}}return void 0===r&&((r=document.createElement("input")).setAttribute("type","radio"),r.setAttribute("value",e),this.elt.appendChild(r)),o(r)?i=r.nextElementSibling:(i=document.createElement("label"),r.insertAdjacentElement("afterend",i)),i.innerHTML=void 0===t?e:t,r.setAttribute("name",n._name),r},n.remove=function(e){var t=!0,r=!1,i=void 0;try{for(var a,s=n._getOptionsArray()[Symbol.iterator]();!(t=(a=s.next()).done);t=!0){var l=a.value;if(l.value===e)return o(l)&&l.nextElementSibling.remove(),void l.remove()}}catch(e){r=!0,i=e}finally{try{t||null==s.return||s.return()}finally{if(r)throw i}}},n.value=function(){var e="",t=!0,r=!1,i=void 0;try{for(var o,a=n._getOptionsArray()[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var s=o.value;if(s.checked){e=s.value;break}}}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}return e},n.selected=function(e){var t=null;if(void 0===e){var r=!0,i=!1,o=void 0;try{for(var a,s=n._getOptionsArray()[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var l=a.value;if(l.checked){t=l;break}}}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}}else{var u=!0,c=!1,h=void 0;try{for(var f,d=n._getOptionsArray()[Symbol.iterator]();!(u=(f=d.next()).done);u=!0){var p=f.value;p.value===e&&(p.setAttribute("checked",!0),t=p)}}catch(e){c=!0,h=e}finally{try{u||null==d.return||d.return()}finally{if(c)throw h}}}return t},n.disable=function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=!0,r=!1,i=void 0;try{for(var o,a=n._getOptionsArray()[Symbol.iterator]();!(t=(o=a.next()).done);t=!0)o.value.setAttribute("disabled",e)}catch(e){r=!0,i=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw i}}},n},i.default.prototype.createColorPicker=function(e){i.default._validateParameters("createColorPicker",arguments);var t,r=document.createElement("input");return r.type="color",e?e instanceof i.default.Color?r.value=e.toString("#rrggbb"):(i.default.prototype._colorMode="rgb",i.default.prototype._colorMaxes={rgb:[255,255,255,255],hsb:[360,100,100,1],hsl:[360,100,100,1]},r.value=i.default.prototype.color(e).toString("#rrggbb")):r.value="#000000",(t=a(r,this)).color=function(){return e&&(e.mode&&(i.default.prototype._colorMode=e.mode),e.maxes&&(i.default.prototype._colorMaxes=e.maxes)),i.default.prototype.color(this.elt.value)},t},i.default.prototype.createInput=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"text";i.default._validateParameters("createInput",arguments);var r=document.createElement("input");return r.setAttribute("value",e),r.setAttribute("type",t),a(r,this)},i.default.prototype.createFileInput=function(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1];if(i.default._validateParameters("createFileInput",arguments),window.File&&window.FileReader&&window.FileList&&window.Blob){var r=document.createElement("input");return r.setAttribute("type","file"),t&&r.setAttribute("multiple",!0),r.addEventListener("change",(function(t){var r=!0,n=!1,o=void 0;try{for(var a,s=t.target.files[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var l=a.value;i.default.File._load(l,e)}}catch(t){n=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(n)throw o}}}),!1),a(r,this)}console.log("The File APIs are not fully supported in this browser. Cannot create element.")},i.default.prototype.createVideo=function(e,t){return i.default._validateParameters("createVideo",arguments),s(this,"video",e,t)},i.default.prototype.createAudio=function(e,t){return i.default._validateParameters("createAudio",arguments),s(this,"audio",e,t)},i.default.prototype.VIDEO="video",i.default.prototype.AUDIO="audio",void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return t?new Promise((function(r,n){t.call(navigator,e,r,n)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}),i.default.prototype.createCapture=function(){if(i.default._validateParameters("createCapture",arguments),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new DOMException("getUserMedia not supported in this browser");var e,t,r=!0,n=!0,s=!0,l=!1,u=void 0;try{for(var c,h=arguments[Symbol.iterator]();!(s=(c=h.next()).done);s=!0){var f=c.value;f===i.default.prototype.VIDEO?n=!1:f===i.default.prototype.AUDIO?r=!1:"object"===o(f)?e=f:"function"==typeof f&&(t=f)}}catch(e){l=!0,u=e}finally{try{s||null==h.return||h.return()}finally{if(l)throw u}}e=e||{video:r,audio:n};var d=document.createElement("video");d.setAttribute("playsinline",""),navigator.mediaDevices.getUserMedia(e).then((function(e){try{"srcObject"in d?d.srcObject=e:d.src=window.URL.createObjectURL(e)}catch(t){d.src=e}}),console.log);var p=a(d,this,!0);return p.loadedmetadata=!1,d.addEventListener("loadedmetadata",(function(){d.play(),d.width?(p.width=d.width,p.height=d.height):(p.width=p.elt.width=d.videoWidth,p.height=p.elt.height=d.videoHeight),p.loadedmetadata=!0,t&&t(d.srcObject)})),p},i.default.prototype.createElement=function(e,t){i.default._validateParameters("createElement",arguments);var r=document.createElement(e);return void 0!==t&&(r.innerHTML=t),a(r,this)},i.default.Element.prototype.addClass=function(e){return this.elt.className?this.hasClass(e)||(this.elt.className=this.elt.className+" "+e):this.elt.className=e,this},i.default.Element.prototype.removeClass=function(e){return this.elt.classList.remove(e),this},i.default.Element.prototype.hasClass=function(e){return this.elt.classList.contains(e)},i.default.Element.prototype.toggleClass=function(e){return this.elt.classList.contains(e)?this.elt.classList.remove(e):this.elt.classList.add(e),this},i.default.Element.prototype.child=function(e){return void 0===e?this.elt.childNodes:("string"==typeof e?("#"===e[0]&&(e=e.substring(1)),e=document.getElementById(e)):e instanceof i.default.Element&&(e=e.elt),e instanceof HTMLElement&&this.elt.appendChild(e),this)},i.default.Element.prototype.center=function(e){var t=this.elt.style.display,r="none"===this.elt.style.display,n="none"===this.parent().style.display,i={x:this.elt.offsetLeft,y:this.elt.offsetTop};r&&this.show(),n&&this.parent().show(),this.elt.style.display="block",this.position(0,0);var o=Math.abs(this.parent().offsetWidth-this.elt.offsetWidth),a=Math.abs(this.parent().offsetHeight-this.elt.offsetHeight);return"both"===e||void 0===e?this.position(o/2+this.parent().offsetLeft,a/2+this.parent().offsetTop):"horizontal"===e?this.position(o/2+this.parent().offsetLeft,i.y):"vertical"===e&&this.position(i.x,a/2+this.parent().offsetTop),this.style("display",t),r&&this.hide(),n&&this.parent().hide(),this},i.default.Element.prototype.html=function(){return 0===arguments.length?this.elt.innerHTML:(arguments[1]?this.elt.insertAdjacentHTML("beforeend",arguments[0]):this.elt.innerHTML=arguments[0],this)},i.default.Element.prototype.position=function(){if(0===arguments.length)return{x:this.elt.offsetLeft,y:this.elt.offsetTop};var e="absolute";return"static"!==arguments[2]&&"fixed"!==arguments[2]&&"relative"!==arguments[2]&&"sticky"!==arguments[2]&&"initial"!==arguments[2]&&"inherit"!==arguments[2]||(e=arguments[2]),this.elt.style.position=e,this.elt.style.left=arguments[0]+"px",this.elt.style.top=arguments[1]+"px",this.x=arguments[0],this.y=arguments[1],this},i.default.Element.prototype._translate=function(){this.elt.style.position="absolute";var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/translate3d\(.*\)/g,"")).replace(/translate[X-Z]?\(.*\)/g,"")),2===arguments.length?this.elt.style.transform="translate("+arguments[0]+"px, "+arguments[1]+"px)":2<arguments.length&&(this.elt.style.transform="translate3d("+arguments[0]+"px,"+arguments[1]+"px,"+arguments[2]+"px)",this.elt.parentElement.style.perspective=3===arguments.length?"1000px":arguments[3]+"px"),this.elt.style.transform+=e,this},i.default.Element.prototype._rotate=function(){var e="";return this.elt.style.transform&&(e=(e=this.elt.style.transform.replace(/rotate3d\(.*\)/g,"")).replace(/rotate[X-Z]?\(.*\)/g,"")),1===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg)":2===arguments.length?this.elt.style.transform="rotate("+arguments[0]+"deg, "+arguments[1]+"deg)":3===arguments.length&&(this.elt.style.transform="rotateX("+arguments[0]+"deg)",this.elt.style.transform+="rotateY("+arguments[1]+"deg)",this.elt.style.transform+="rotateZ("+arguments[2]+"deg)"),this.elt.style.transform+=e,this},i.default.Element.prototype.style=function(e,t){if(t instanceof i.default.Color&&(t="rgba("+t.levels[0]+","+t.levels[1]+","+t.levels[2]+","+t.levels[3]/255+")"),void 0===t){if(-1===e.indexOf(":"))return window.getComputedStyle(this.elt).getPropertyValue(e);for(var r=e.split(";"),n=0;n<r.length;n++){var o=r[n].split(":");o[0]&&o[1]&&(this.elt.style[o[0].trim()]=o[1].trim())}}else if(this.elt.style[e]=t,"width"===e||"height"===e||"left"===e||"top"===e){var a=window.getComputedStyle(this.elt).getPropertyValue(e).replace(/\D+/g,"");this[e]=parseInt(a,10)}return this},i.default.Element.prototype.attribute=function(e,t){if(null==this.elt.firstChild||"checkbox"!==this.elt.firstChild.type&&"radio"!==this.elt.firstChild.type)return void 0===t?this.elt.getAttribute(e):(this.elt.setAttribute(e,t),this);if(void 0===t)return this.elt.firstChild.getAttribute(e);for(var r=0;r<this.elt.childNodes.length;r++)this.elt.childNodes[r].setAttribute(e,t)},i.default.Element.prototype.removeAttribute=function(e){if(null!=this.elt.firstChild&&("checkbox"===this.elt.firstChild.type||"radio"===this.elt.firstChild.type))for(var t=0;t<this.elt.childNodes.length;t++)this.elt.childNodes[t].removeAttribute(e);return this.elt.removeAttribute(e),this},i.default.Element.prototype.value=function(){return 0<arguments.length?(this.elt.value=arguments[0],this):"range"===this.elt.type?parseFloat(this.elt.value):this.elt.value},i.default.Element.prototype.show=function(){return this.elt.style.display="block",this},i.default.Element.prototype.hide=function(){return this.elt.style.display="none",this},i.default.Element.prototype.size=function(e,t){if(0===arguments.length)return{width:this.elt.offsetWidth,height:this.elt.offsetHeight};var r=e,n=t,o=i.default.prototype.AUTO;if(r!==o||n!==o){if(r===o?r=t*this.width/this.height:n===o&&(n=e*this.height/this.width),this.elt instanceof HTMLCanvasElement){var a,s={},l=this.elt.getContext("2d");for(a in l)s[a]=l[a];for(a in this.elt.setAttribute("width",r*this._pInst._pixelDensity),this.elt.setAttribute("height",n*this._pInst._pixelDensity),this.elt.style.width=r+"px",this.elt.style.height=n+"px",this._pInst.scale(this._pInst._pixelDensity,this._pInst._pixelDensity),s)this.elt.getContext("2d")[a]=s[a]}else this.elt.style.width=r+"px",this.elt.style.height=n+"px",this.elt.width=r,this.elt.height=n;this.width=this.elt.offsetWidth,this.height=this.elt.offsetHeight,this._pInst&&this._pInst._curElement&&this._pInst._curElement.elt===this.elt&&(this._pInst._setProperty("width",this.elt.offsetWidth),this._pInst._setProperty("height",this.elt.offsetHeight))}return this},i.default.Element.prototype.remove=function(){if(this instanceof i.default.MediaElement){this.stop();var e=this.elt.srcObject;null!==e&&e.getTracks().forEach((function(e){e.stop()}))}var t=this._pInst._elements.indexOf(this);for(var r in-1!==t&&this._pInst._elements.splice(t,1),this._events)this.elt.removeEventListener(r,this._events[r]);this.elt&&this.elt.parentNode&&this.elt.parentNode.removeChild(this.elt)},i.default.Element.prototype.drop=function(e,t){if(window.File&&window.FileReader&&window.FileList&&window.Blob){if(!this._dragDisabled){this._dragDisabled=!0;var r=function(e){e.preventDefault()};this.elt.addEventListener("dragover",r),this.elt.addEventListener("dragleave",r)}i.default.Element._attachListener("drop",(function(r){r.preventDefault(),"function"==typeof t&&t.call(this,r);for(var n=r.dataTransfer.files,o=0;o<n.length;o++){var a=n[o];i.default.File._load(a,e)}}),this)}else console.log("The File APIs are not fully supported in this browser.");return this},i.default.MediaElement=function(e,t){i.default.Element.call(this,e,t);var r=this;this.elt.crossOrigin="anonymous",this._prevTime=0,this._cueIDCounter=0,this._cues=[],(this._pixelsState=this)._pixelDensity=1,this._modified=!1,Object.defineProperty(r,"src",{get:function(){var e=r.elt.children[0].src,t=r.elt.src===window.location.href?"":r.elt.src;return e===window.location.href?t:e},set:function(t){for(var n=0;n<r.elt.children.length;n++)r.elt.removeChild(r.elt.children[n]);var i=document.createElement("source");i.src=t,e.appendChild(i),r.elt.src=t,r.modified=!0}}),r._onended=function(){},r.elt.onended=function(){r._onended(r)}},i.default.MediaElement.prototype=Object.create(i.default.Element.prototype),i.default.MediaElement.prototype.play=function(){var e,t=this;return this.elt.currentTime===this.elt.duration&&(this.elt.currentTime=0),1<this.elt.readyState||this.elt.load(),(e=this.elt.play())&&e.catch&&e.catch((function(e){"NotAllowedError"===e.name?i.default._friendlyAutoplayError(t.src):console.error("Media play method encountered an unexpected error",e)})),this},i.default.MediaElement.prototype.stop=function(){return this.elt.pause(),this.elt.currentTime=0,this},i.default.MediaElement.prototype.pause=function(){return this.elt.pause(),this},i.default.MediaElement.prototype.loop=function(){return this.elt.setAttribute("loop",!0),this.play(),this},i.default.MediaElement.prototype.noLoop=function(){return this.elt.removeAttribute("loop"),this},i.default.MediaElement.prototype._setupAutoplayFailDetection=function(){var e=this,t=setTimeout((function(){return i.default._friendlyAutoplayError(e.src)}),500);this.elt.addEventListener("play",(function(){return clearTimeout(t)}),{passive:!0,once:!0})},i.default.MediaElement.prototype.autoplay=function(e){var t=this,r=this.elt.getAttribute("autoplay");if(this.elt.setAttribute("autoplay",e),e&&!r){var n=function(){return t._setupAutoplayFailDetection()};4===this.elt.readyState?n():this.elt.addEventListener("canplay",n,{passive:!0,once:!0})}return this},i.default.MediaElement.prototype.volume=function(e){if(void 0===e)return this.elt.volume;this.elt.volume=e},i.default.MediaElement.prototype.speed=function(e){if(void 0===e)return this.presetPlaybackRate||this.elt.playbackRate;this.loadedmetadata?this.elt.playbackRate=e:this.presetPlaybackRate=e},i.default.MediaElement.prototype.time=function(e){return void 0===e?this.elt.currentTime:(this.elt.currentTime=e,this)},i.default.MediaElement.prototype.duration=function(){return this.elt.duration},i.default.MediaElement.prototype.pixels=[],i.default.MediaElement.prototype._ensureCanvas=function(){this.canvas||(this.canvas=document.createElement("canvas"),this.drawingContext=this.canvas.getContext("2d"),this.setModified(!0)),this.loadedmetadata&&(this.canvas.width!==this.elt.width&&(this.canvas.width=this.elt.width,this.canvas.height=this.elt.height,this.width=this.canvas.width,this.height=this.canvas.height),this.drawingContext.drawImage(this.elt,0,0,this.canvas.width,this.canvas.height),this.setModified(!0))},i.default.MediaElement.prototype.loadPixels=function(){return this._ensureCanvas(),i.default.Renderer2D.prototype.loadPixels.apply(this,arguments)},i.default.MediaElement.prototype.updatePixels=function(e,t,r,n){return this.loadedmetadata&&(this._ensureCanvas(),i.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,n)),this.setModified(!0),this},i.default.MediaElement.prototype.get=function(){return this._ensureCanvas(),i.default.Renderer2D.prototype.get.apply(this,arguments)},i.default.MediaElement.prototype._getPixel=function(){return this.loadPixels(),i.default.Renderer2D.prototype._getPixel.apply(this,arguments)},i.default.MediaElement.prototype.set=function(e,t,r){this.loadedmetadata&&(this._ensureCanvas(),i.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0))},i.default.MediaElement.prototype.copy=function(){this._ensureCanvas(),i.default.prototype.copy.apply(this,arguments)},i.default.MediaElement.prototype.mask=function(){this.loadPixels(),this.setModified(!0),i.default.Image.prototype.mask.apply(this,arguments)},i.default.MediaElement.prototype.isModified=function(){return this._modified},i.default.MediaElement.prototype.setModified=function(e){this._modified=e},i.default.MediaElement.prototype.onended=function(e){return this._onended=e,this},i.default.MediaElement.prototype.connect=function(e){var t,r;if("function"==typeof i.default.prototype.getAudioContext)t=i.default.prototype.getAudioContext(),r=i.default.soundOut.input;else try{r=(t=e.context).destination}catch(e){throw"connect() is meant to be used with Web Audio API or p5.sound.js"}this.audioSourceNode||(this.audioSourceNode=t.createMediaElementSource(this.elt),this.audioSourceNode.connect(r)),e?e.input?this.audioSourceNode.connect(e.input):this.audioSourceNode.connect(e):this.audioSourceNode.connect(r)},i.default.MediaElement.prototype.disconnect=function(){if(!this.audioSourceNode)throw"nothing to disconnect";this.audioSourceNode.disconnect()},i.default.MediaElement.prototype.showControls=function(){this.elt.style["text-align"]="inherit",this.elt.controls=!0},i.default.MediaElement.prototype.hideControls=function(){this.elt.controls=!1},i.default.MediaElement.prototype.addCue=function(e,t,r){var n=this._cueIDCounter++,i=new l(t,e,n,r);return this._cues.push(i),this.elt.ontimeupdate||(this.elt.ontimeupdate=this._onTimeUpdate.bind(this)),n},i.default.MediaElement.prototype.removeCue=function(e){for(var t=0;t<this._cues.length;t++)this._cues[t].id===e&&(console.log(e),this._cues.splice(t,1));0===this._cues.length&&(this.elt.ontimeupdate=null)},i.default.MediaElement.prototype.clearCues=function(){this._cues=[],this.elt.ontimeupdate=null},i.default.MediaElement.prototype._onTimeUpdate=function(){for(var e=this.time(),t=0;t<this._cues.length;t++){var r=this._cues[t].time,n=this._cues[t].val;this._prevTime<r&&r<=e&&this._cues[t].callback(n)}this._prevTime=e},i.default.File=function(e,t){this.file=e,this._pInst=t;var r=e.type.split("/");this.type=r[0],this.subtype=r[1],this.name=e.name,this.size=e.size,this.data=void 0},i.default.File._createLoader=function(e,t){var r=new FileReader;return r.onload=function(r){var n=new i.default.File(e);if("application/json"===n.file.type)n.data=JSON.parse(r.target.result);else if("text/xml"===n.file.type){var o=(new DOMParser).parseFromString(r.target.result,"text/xml");n.data=new i.default.XML(o.documentElement)}else n.data=r.target.result;t(n)},r},i.default.File._load=function(e,t){if(/^text\//.test(e.type)||"application/json"===e.type)i.default.File._createLoader(e,t).readAsText(e);else if(/^(video|audio)\//.test(e.type)){var r=new i.default.File(e);r.data=URL.createObjectURL(e),t(r)}else i.default.File._createLoader(e,t).readAsDataURL(e)};var u=i.default;r.default=u},{"../core/main":36}],53:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.deviceOrientation=1<window.innerWidth/window.innerHeight?"landscape":"portrait",o.default.prototype.accelerationX=0,o.default.prototype.accelerationY=0,o.default.prototype.accelerationZ=0,o.default.prototype.pAccelerationX=0,o.default.prototype.pAccelerationY=0,o.default.prototype.pAccelerationZ=0,o.default.prototype._updatePAccelerations=function(){this._setProperty("pAccelerationX",this.accelerationX),this._setProperty("pAccelerationY",this.accelerationY),this._setProperty("pAccelerationZ",this.accelerationZ)},o.default.prototype.rotationX=0,o.default.prototype.rotationY=0,o.default.prototype.rotationZ=0,o.default.prototype.pRotationX=0,o.default.prototype.pRotationY=0;var l=o.default.prototype.pRotationZ=0,u=0,c=0,h="clockwise",f="clockwise",d="clockwise";o.default.prototype.pRotateDirectionX=void 0,o.default.prototype.pRotateDirectionY=void 0,o.default.prototype.pRotateDirectionZ=void 0,o.default.prototype._updatePRotations=function(){this._setProperty("pRotationX",this.rotationX),this._setProperty("pRotationY",this.rotationY),this._setProperty("pRotationZ",this.rotationZ)},o.default.prototype.turnAxis=void 0;var p=.5,m=30;o.default.prototype.setMoveThreshold=function(e){o.default._validateParameters("setMoveThreshold",arguments),p=e},o.default.prototype.setShakeThreshold=function(e){o.default._validateParameters("setShakeThreshold",arguments),m=e},o.default.prototype._ondeviceorientation=function(e){this._updatePRotations(),this._angleMode===a.radians&&(e.beta=e.beta*(_PI/180),e.gamma=e.gamma*(_PI/180),e.alpha=e.alpha*(_PI/180)),this._setProperty("rotationX",e.beta),this._setProperty("rotationY",e.gamma),this._setProperty("rotationZ",e.alpha),this._handleMotion()},o.default.prototype._ondevicemotion=function(e){this._updatePAccelerations(),this._setProperty("accelerationX",2*e.acceleration.x),this._setProperty("accelerationY",2*e.acceleration.y),this._setProperty("accelerationZ",2*e.acceleration.z),this._handleMotion()},o.default.prototype._handleMotion=function(){90===window.orientation||-90===window.orientation?this._setProperty("deviceOrientation","landscape"):0===window.orientation?this._setProperty("deviceOrientation","portrait"):void 0===window.orientation&&this._setProperty("deviceOrientation","undefined");var e,t,r=this._isGlobal?window:this;if("function"==typeof r.deviceMoved&&(Math.abs(this.accelerationX-this.pAccelerationX)>p||Math.abs(this.accelerationY-this.pAccelerationY)>p||Math.abs(this.accelerationZ-this.pAccelerationZ)>p)&&r.deviceMoved(),"function"==typeof r.deviceTurned){var n=this.rotationX+180,i=this.pRotationX+180,o=l+180;0<n-i&&n-i<270||n-i<-270?h="clockwise":(n-i<0||270<n-i)&&(h="counter-clockwise"),h!==this.pRotateDirectionX&&(o=n),90<Math.abs(n-o)&&Math.abs(n-o)<270&&(o=n,this._setProperty("turnAxis","X"),r.deviceTurned()),this.pRotateDirectionX=h,l=o-180;var a=this.rotationY+180,s=this.pRotationY+180,v=u+180;0<a-s&&a-s<270||a-s<-270?f="clockwise":(a-s<0||270<a-this.pRotationY)&&(f="counter-clockwise"),f!==this.pRotateDirectionY&&(v=a),90<Math.abs(a-v)&&Math.abs(a-v)<270&&(v=a,this._setProperty("turnAxis","Y"),r.deviceTurned()),this.pRotateDirectionY=f,u=v-180,0<this.rotationZ-this.pRotationZ&&this.rotationZ-this.pRotationZ<270||this.rotationZ-this.pRotationZ<-270?d="clockwise":(this.rotationZ-this.pRotationZ<0||270<this.rotationZ-this.pRotationZ)&&(d="counter-clockwise"),d!==this.pRotateDirectionZ&&(c=this.rotationZ),90<Math.abs(this.rotationZ-c)&&Math.abs(this.rotationZ-c)<270&&(c=this.rotationZ,this._setProperty("turnAxis","Z"),r.deviceTurned()),this.pRotateDirectionZ=d,this._setProperty("turnAxis",void 0)}"function"==typeof r.deviceShaken&&(null!==this.pAccelerationX&&(e=Math.abs(this.accelerationX-this.pAccelerationX),t=Math.abs(this.accelerationY-this.pAccelerationY)),m<e+t&&r.deviceShaken())};var v=o.default;r.default=v},{"../core/constants":26,"../core/main":36}],54:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.isKeyPressed=!1,i.default.prototype.keyIsPressed=!1,i.default.prototype.key="",i.default.prototype.keyCode=0,i.default.prototype._onkeydown=function(e){if(!this._downKeys[e.which]){this._setProperty("isKeyPressed",!0),this._setProperty("keyIsPressed",!0),this._setProperty("keyCode",e.which),this._downKeys[e.which]=!0,this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this._isGlobal?window:this;"function"!=typeof t.keyPressed||e.charCode||!1===t.keyPressed(e)&&e.preventDefault()}},i.default.prototype._onkeyup=function(e){this._downKeys[e.which]=!1,this._areDownKeys()||(this._setProperty("isKeyPressed",!1),this._setProperty("keyIsPressed",!1)),this._setProperty("_lastKeyCodeTyped",null),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which),this._setProperty("keyCode",e.which);var t=this._isGlobal?window:this;"function"==typeof t.keyReleased&&!1===t.keyReleased(e)&&e.preventDefault()},i.default.prototype._onkeypress=function(e){if(e.which!==this._lastKeyCodeTyped){this._setProperty("_lastKeyCodeTyped",e.which),this._setProperty("key",e.key||String.fromCharCode(e.which)||e.which);var t=this._isGlobal?window:this;"function"==typeof t.keyTyped&&!1===t.keyTyped(e)&&e.preventDefault()}},i.default.prototype._onblur=function(e){this._downKeys={}},i.default.prototype.keyIsDown=function(e){return i.default._validateParameters("keyIsDown",arguments),this._downKeys[e]||!1},i.default.prototype._areDownKeys=function(){for(var e in this._downKeys)if(this._downKeys.hasOwnProperty(e)&&!0===this._downKeys[e])return!0;return!1};var o=i.default;r.default=o},{"../core/main":36}],55:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.movedX=0,o.default.prototype.movedY=0,o.default.prototype._hasMouseInteracted=!1,o.default.prototype.mouseX=0,o.default.prototype.mouseY=0,o.default.prototype.pmouseX=0,o.default.prototype.pmouseY=0,o.default.prototype.winMouseX=0,o.default.prototype.winMouseY=0,o.default.prototype.pwinMouseX=0,o.default.prototype.pwinMouseY=0,o.default.prototype.mouseButton=0,o.default.prototype.mouseIsPressed=!1,o.default.prototype._updateNextMouseCoords=function(e){if(null!==this._curElement&&(!e.touches||0<e.touches.length)){var t=function(e,t,r,n){n&&!n.clientX&&(n.touches?n=n.touches[0]:n.changedTouches&&(n=n.changedTouches[0]));var i=e.getBoundingClientRect(),o=e.scrollWidth/t||1,a=e.scrollHeight/r||1;return{x:(n.clientX-i.left)/o,y:(n.clientY-i.top)/a,winX:n.clientX,winY:n.clientY,id:n.identifier}}(this._curElement.elt,this.width,this.height,e);this._setProperty("movedX",e.movementX),this._setProperty("movedY",e.movementY),this._setProperty("mouseX",t.x),this._setProperty("mouseY",t.y),this._setProperty("winMouseX",t.winX),this._setProperty("winMouseY",t.winY)}this._hasMouseInteracted||(this._updateMouseCoords(),this._setProperty("_hasMouseInteracted",!0))},o.default.prototype._updateMouseCoords=function(){this._setProperty("pmouseX",this.mouseX),this._setProperty("pmouseY",this.mouseY),this._setProperty("pwinMouseX",this.winMouseX),this._setProperty("pwinMouseY",this.winMouseY),this._setProperty("_pmouseWheelDeltaY",this._mouseWheelDeltaY)},o.default.prototype._setMouseButton=function(e){1===e.button?this._setProperty("mouseButton",a.CENTER):2===e.button?this._setProperty("mouseButton",a.RIGHT):this._setProperty("mouseButton",a.LEFT)},o.default.prototype._onmousemove=function(e){var t=this._isGlobal?window:this;this._updateNextMouseCoords(e),this.mouseIsPressed?"function"==typeof t.mouseDragged?!1===t.mouseDragged(e)&&e.preventDefault():"function"==typeof t.touchMoved&&!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseMoved&&!1===t.mouseMoved(e)&&e.preventDefault()},o.default.prototype._onmousedown=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._setMouseButton(e),this._updateNextMouseCoords(e),"function"==typeof t.mousePressed?!1===t.mousePressed(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.touchStarted&&!1===t.touchStarted(e)&&e.preventDefault()},o.default.prototype._onmouseup=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!1),"function"==typeof t.mouseReleased?!1===t.mouseReleased(e)&&e.preventDefault():"function"==typeof t.touchEnded&&!1===t.touchEnded(e)&&e.preventDefault()},o.default.prototype._ondragend=o.default.prototype._onmouseup,o.default.prototype._ondragover=o.default.prototype._onmousemove,o.default.prototype._onclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.mouseClicked&&!1===t.mouseClicked(e)&&e.preventDefault()},o.default.prototype._ondblclick=function(e){var t=this._isGlobal?window:this;"function"==typeof t.doubleClicked&&!1===t.doubleClicked(e)&&e.preventDefault()},o.default.prototype._mouseWheelDeltaY=0,o.default.prototype._pmouseWheelDeltaY=0,o.default.prototype._onwheel=function(e){var t=this._isGlobal?window:this;this._setProperty("_mouseWheelDeltaY",e.deltaY),"function"==typeof t.mouseWheel&&(e.delta=e.deltaY,!1===t.mouseWheel(e)&&e.preventDefault())},o.default.prototype.requestPointerLock=function(){var e=this._curElement.elt;return e.requestPointerLock=e.requestPointerLock||e.mozRequestPointerLock,e.requestPointerLock?(e.requestPointerLock(),!0):(console.log("requestPointerLock is not implemented in this browser"),!1)},o.default.prototype.exitPointerLock=function(){document.exitPointerLock()};var l=o.default;r.default=l},{"../core/constants":26,"../core/main":36}],56:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e,t,r,n,i){var o=4<arguments.length&&void 0!==i?i:0,a=e.getBoundingClientRect(),s=e.scrollWidth/t||1,l=e.scrollHeight/r||1,u=n.touches[o]||n.changedTouches[o];return{x:(u.clientX-a.left)/s,y:(u.clientY-a.top)/l,winX:u.clientX,winY:u.clientY,id:u.identifier}}i.default.prototype.touches=[],i.default.prototype._updateTouchCoords=function(e){if(null!==this._curElement){for(var t=[],r=0;r<e.touches.length;r++)t[r]=o(this._curElement.elt,this.width,this.height,e,r);this._setProperty("touches",t)}},i.default.prototype._ontouchstart=function(e){var t=this._isGlobal?window:this;this._setProperty("mouseIsPressed",!0),this._updateTouchCoords(e),this._updateNextMouseCoords(e),this._updateMouseCoords(),"function"==typeof t.touchStarted?!1===t.touchStarted(e)&&e.preventDefault():navigator.userAgent.toLowerCase().includes("safari")&&"function"==typeof t.mousePressed&&!1===t.mousePressed(e)&&e.preventDefault()},i.default.prototype._ontouchmove=function(e){var t=this._isGlobal?window:this;this._updateTouchCoords(e),this._updateNextMouseCoords(e),"function"==typeof t.touchMoved?!1===t.touchMoved(e)&&e.preventDefault():"function"==typeof t.mouseDragged&&!1===t.mouseDragged(e)&&e.preventDefault()},i.default.prototype._ontouchend=function(e){this._setProperty("mouseIsPressed",!1),this._updateTouchCoords(e),this._updateNextMouseCoords(e);var t=this._isGlobal?window:this;"function"==typeof t.touchEnded?!1===t.touchEnded(e)&&e.preventDefault():"function"==typeof t.mouseReleased&&!1===t.mouseReleased(e)&&e.preventDefault()};var a=i.default;r.default=a},{"../core/main":36}],57:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i,o,a,s={};s._toPixels=function(e){return e instanceof ImageData?e.data:e.getContext("2d").getImageData(0,0,e.width,e.height).data},s._getARGB=function(e,t){var r=4*t;return e[3+r]<<24&4278190080|e[r]<<16&16711680|e[1+r]<<8&65280|255&e[2+r]},s._setPixels=function(e,t){for(var r=0,n=0,i=e.length;n<i;n++)e[0+(r=4*n)]=(16711680&t[n])>>>16,e[r+1]=(65280&t[n])>>>8,e[r+2]=255&t[n],e[r+3]=(4278190080&t[n])>>>24},s._toImageData=function(e){return e instanceof ImageData?e:e.getContext("2d").getImageData(0,0,e.width,e.height)},s._createImageData=function(e,t){return s._tmpCanvas=document.createElement("canvas"),s._tmpCtx=s._tmpCanvas.getContext("2d"),this._tmpCtx.createImageData(e,t)},s.apply=function(e,t,r){var n=e.getContext("2d"),i=n.getImageData(0,0,e.width,e.height),o=t(i,r);o instanceof ImageData?n.putImageData(o,0,0,0,0,e.width,e.height):n.putImageData(i,0,0,0,0,e.width,e.height)},s.threshold=function(e,t){var r=s._toPixels(e);void 0===t&&(t=.5);for(var n=Math.floor(255*t),i=0;i<r.length;i+=4){var o;o=n<=.2126*r[i]+.7152*r[i+1]+.0722*r[i+2]?255:0,r[i]=r[i+1]=r[i+2]=o}},s.gray=function(e){for(var t=s._toPixels(e),r=0;r<t.length;r+=4){var n=.2126*t[r]+.7152*t[r+1]+.0722*t[r+2];t[r]=t[r+1]=t[r+2]=n}},s.opaque=function(e){for(var t=s._toPixels(e),r=0;r<t.length;r+=4)t[r+3]=255;return t},s.invert=function(e){for(var t=s._toPixels(e),r=0;r<t.length;r+=4)t[r]=255-t[r],t[r+1]=255-t[r+1],t[r+2]=255-t[r+2]},s.posterize=function(e,t){var r=s._toPixels(e);if(t<2||255<t)throw new Error("Level must be greater than 2 and less than 255 for posterize");for(var n=t-1,i=0;i<r.length;i+=4){var o=r[i],a=r[i+1],l=r[i+2];r[i]=255*(o*t>>8)/n,r[i+1]=255*(a*t>>8)/n,r[i+2]=255*(l*t>>8)/n}},s.dilate=function(e){for(var t,r,n,i,o,a,l,u,c,h,f,d,p,m,v,g,y,b=s._toPixels(e),_=0,w=b.length?b.length/4:0,x=new Int32Array(w);_<w;)for(r=(t=_)+e.width;_<r;)n=i=s._getARGB(b,_),(l=_-1)<t&&(l=_),r<=(a=_+1)&&(a=_),(u=_-e.width)<0&&(u=0),w<=(c=_+e.width)&&(c=_),d=s._getARGB(b,u),f=s._getARGB(b,l),p=s._getARGB(b,c),(o=77*(n>>16&255)+151*(n>>8&255)+28*(255&n))<(v=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))&&(i=f,o=v),o<(m=77*((h=s._getARGB(b,a))>>16&255)+151*(h>>8&255)+28*(255&h))&&(i=h,o=m),o<(g=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))&&(i=d,o=g),o<(y=77*(p>>16&255)+151*(p>>8&255)+28*(255&p))&&(i=p,o=y),x[_++]=i;s._setPixels(b,x)},s.erode=function(e){for(var t,r,n,i,o,a,l,u,c,h,f,d,p,m,v,g,y,b=s._toPixels(e),_=0,w=b.length?b.length/4:0,x=new Int32Array(w);_<w;)for(r=(t=_)+e.width;_<r;)n=i=s._getARGB(b,_),(l=_-1)<t&&(l=_),r<=(a=_+1)&&(a=_),(u=_-e.width)<0&&(u=0),w<=(c=_+e.width)&&(c=_),d=s._getARGB(b,u),f=s._getARGB(b,l),p=s._getARGB(b,c),(v=77*(f>>16&255)+151*(f>>8&255)+28*(255&f))<(o=77*(n>>16&255)+151*(n>>8&255)+28*(255&n))&&(i=f,o=v),(m=77*((h=s._getARGB(b,a))>>16&255)+151*(h>>8&255)+28*(255&h))<o&&(i=h,o=m),(g=77*(d>>16&255)+151*(d>>8&255)+28*(255&d))<o&&(i=d,o=g),(y=77*(p>>16&255)+151*(p>>8&255)+28*(255&p))<o&&(i=p,o=y),x[_++]=i;s._setPixels(b,x)},s.blur=function(e,t){!function(e,t){for(var r,l,u,c,h,f,d,p,m,v,g=s._toPixels(e),y=e.width,b=e.height,_=y*b,w=new Int32Array(_),x=0;x<_;x++)w[x]=s._getARGB(g,x);var S,E,M,T,C=new Int32Array(_),L=new Int32Array(_),O=new Int32Array(_),P=new Int32Array(_),A=0;for(function(e){var t=3.5*e|0;if(n!==(t=t<1?1:t<248?t:248)){i=1+(n=t)<<1,o=new Int32Array(i),a=new Array(i);for(var r=0;r<i;r++)a[r]=new Int32Array(256);for(var s,l,u,c,h=1,f=t-1;h<t;h++){o[t+h]=o[f]=l=f*f,u=a[t+h],c=a[f--];for(var d=0;d<256;d++)u[d]=c[d]=l*d}s=o[t]=t*t,u=a[t];for(var p=0;p<256;p++)u[p]=s*p}}(t),E=0;E<b;E++){for(S=0;S<y;S++){if(c=u=l=h=r=0,(f=S-n)<0)v=-f,f=0;else{if(y<=f)break;v=0}for(M=v;M<i&&!(y<=f);M++){var D=w[f+A];h+=(T=a[M])[(-16777216&D)>>>24],l+=T[(16711680&D)>>16],u+=T[(65280&D)>>8],c+=T[255&D],r+=o[M],f++}C[d=A+S]=h/r,L[d]=l/r,O[d]=u/r,P[d]=c/r}A+=y}for(m=(p=-n)*y,E=A=0;E<b;E++){for(S=0;S<y;S++){if(c=u=l=h=r=0,p<0)v=d=-p,f=S;else{if(b<=p)break;v=0,d=p,f=S+m}for(M=v;M<i&&!(b<=d);M++)h+=(T=a[M])[C[f]],l+=T[L[f]],u+=T[O[f]],c+=T[P[f]],r+=o[M],d++,f+=y;w[S+A]=h/r<<24|l/r<<16|u/r<<8|c/r}A+=y,m+=y,p++}s._setPixels(g,w)}(e,t)};var l=s;r.default=l},{}],58:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("../core/main")),i=o(e("omggif"));function o(e){return e&&e.__esModule?e:{default:e}}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}n.default.prototype.createImage=function(e,t){return n.default._validateParameters("createImage",arguments),new n.default.Image(e,t)},n.default.prototype.saveCanvas=function(){n.default._validateParameters("saveCanvas",arguments);var e,t,r,i,o=[].slice.call(arguments);switch(arguments[0]instanceof HTMLCanvasElement?(e=arguments[0],o.shift()):arguments[0]instanceof n.default.Element?(e=arguments[0].elt,o.shift()):e=this._curElement&&this._curElement.elt,1<=o.length&&(t=o[0]),2<=o.length&&(r=o[1]),r=r||n.default.prototype._checkFileExtension(t,r)[1]||"png"){default:i="image/png";break;case"jpeg":case"jpg":i="image/jpeg"}e.toBlob((function(e){n.default.prototype.downloadFile(e,t,r)}),i)},n.default.prototype.saveGif=function(e,t){var r=e.gifProperties,o=r.loopLimit;1===o?o=null:null===o&&(o=0);for(var s=new Uint8Array(e.width*e.height*r.numFrames),l=[],u={},c=0;c<r.numFrames;c++){for(var h=new Set,f=r.frames[c].image.data,d=f.length,p=new Uint32Array(e.width*e.height),m=0,v=0;m<d;m+=4,v++){var g=f[m+0]<<16|f[m+1]<<8|f[m+2]<<0;h.add(g),p[v]=g}var y=a(h).sort().toString();void 0===u[y]?u[y]={freq:1,frames:[c]}:(u[y].freq+=1,u[y].frames.push(c)),l.push(p)}var b=[],_=Object.keys(u).sort((function(e,t){return u[t].freq-u[e].freq})),w=_[0].split(",").map((function(e){return parseInt(e)}));b=b.concat(u[w].frames);for(var x=new Set(w),S=1;S<_.length;S++){var E=_[S].split(",").map((function(e){return parseInt(e)})).filter((function(e){return!x.has(e)}));if(w.length+E.length<=256){for(var M=0;M<E.length;M++)w.push(E[M]),x.add(E[M]);b=b.concat(u[_[S]].frames)}}b=new Set(b);for(var T={},C=0;C<w.length;C++)T[w[C]]||(T[w[C]]=C);for(var L=1;L<w.length;)L<<=1;w.length=L;for(var O={loop:o,palette:new Uint32Array(w)},P=new i.default.GifWriter(s,e.width,e.height,O),A={},D=function(t){for(var n=!b.has(t),i=n?[]:w,o=new Uint8Array(e.width*e.height),a={},s=new Set,u=0;u<l[t].length;u++){var c=l[t][u];n?(void 0===a[c]&&(a[c]=i.length,i.push(c)),o[u]=a[c]):o[u]=T[c],0<t&&l[t-1][u]!==c&&s.add(c)}var h={},f=i.filter((function(e){return!s.has(e)}));if(0<f.length){var d=f[0],p=n?a[d]:T[d];if(0<t){for(var m=0;m<l[t].length;m++)l[t-1][m]===l[t][m]&&(o[m]=p);h.transparent=p,A.frameOpts.disposal=1}}if(h.delay=r.frames[t].delay/10,n){for(var v=1;v<i.length;)v<<=1;i.length=v,h.palette=new Uint32Array(i)}0<t&&P.addFrame(0,0,e.width,e.height,A.pixelPaletteIndex,A.frameOpts),A={pixelPaletteIndex:o,frameOpts:h}},k=0;k<r.numFrames;k++)D(k);A.frameOpts.disposal=1,P.addFrame(0,0,e.width,e.height,A.pixelPaletteIndex,A.frameOpts);var R=new Blob([s.slice(0,P.end())],{type:"image/gif"});n.default.prototype.downloadFile(R,t,"gif")},n.default.prototype.saveFrames=function(e,t,r,i,o){n.default._validateParameters("saveFrames",arguments);var a=r||3;a=n.default.prototype.constrain(a,0,15),a*=1e3;var s=i||15;s=n.default.prototype.constrain(s,0,22);var l=0,u=n.default.prototype._makeFrame,c=this._curElement.elt,h=[],f=setInterval((function(){h.push(u(e+l,t,c)),l++}),1e3/s);setTimeout((function(){if(clearInterval(f),o)o(h);else{var e=!0,t=!1,r=void 0;try{for(var i,a=h[Symbol.iterator]();!(e=(i=a.next()).done);e=!0){var s=i.value;n.default.prototype.downloadFile(s.imageData,s.filename,s.ext)}}catch(e){t=!0,r=e}finally{try{e||null==a.return||a.return()}finally{if(t)throw r}}}h=[]}),a+.01)},n.default.prototype._makeFrame=function(e,t,r){var n,i;if(n=this?this._curElement.elt:r,t)switch(t.toLowerCase()){case"png":i="image/png";break;case"jpeg":case"jpg":i="image/jpeg";break;default:i="image/png"}else t="png",i="image/png";var o=n.toDataURL(i);o=o.replace(i,"image/octet-stream");var a={};return a.imageData=o,a.filename=e,a.ext=t,a};var s=n.default;r.default=s},{"../core/main":36,omggif:11}],59:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=c(e("../core/main")),o=c(e("./filters")),a=c(e("../core/helpers")),s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants")),l=c(e("omggif"));function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}function c(e){return e&&e.__esModule?e:{default:e}}function h(e,t){return 0<e&&e<t?e:t}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),i.default.prototype.loadImage=function(e,t,r){i.default._validateParameters("loadImage",arguments);var n=new i.default.Image(1,1,this),o=this,a=new Request(e,{method:"GET",mode:"cors"});return fetch(e,a).then((function(a){var s=a.headers.get("content-type");if(null===s&&console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."),s&&s.includes("image/gif"))a.arrayBuffer().then((function(e){e&&function(e,t,r,n,o){var a=new l.default.GifReader(e);t.width=t.canvas.width=a.width,t.height=t.canvas.height=a.height;var s=[],u=a.numFrames(),c=new Uint8ClampedArray(t.width*t.height*4);if(1<u){for(var h=function(e,r){try{r.decodeAndBlitFrameRGBA(e,c)}catch(e){i.default._friendlyFileLoadError(8,t.src),"function"==typeof n?n(e):console.error(e)}},f=0;f<u;f++){var d=a.frameInfo(f);1===a.frameInfo(f).disposal&&0<f?t.drawingContext.putImageData(s[f-1].image,0,0):(t.drawingContext.clearRect(0,0,t.width,t.height),c=new Uint8ClampedArray(t.width*t.height*4)),h(f,a);var p=new ImageData(c,t.width,t.height);t.drawingContext.putImageData(p,0,0),s.push({image:t.drawingContext.getImageData(0,0,t.width,t.height),delay:10*d.delay})}var m=a.loopCount();null===m?m=1:0===m&&(m=null),t.drawingContext.putImageData(s[0].image,0,0),t.gifProperties={displayIndex:0,loopLimit:m,loopCount:0,frames:s,numFrames:u,playing:!0,timeDisplayed:0,lastChangeTime:0}}"function"==typeof r&&r(t),o()}(new Uint8Array(e),n,t,r,function(e){o._decrementPreload()}.bind(o))}),(function(e){"function"==typeof r?r(e):console.error(e)}));else{var u=new Image;u.onload=function(){n.width=n.canvas.width=u.width,n.height=n.canvas.height=u.height,n.drawingContext.drawImage(u,0,0),n.modified=!0,"function"==typeof t&&t(n),o._decrementPreload()},u.onerror=function(e){i.default._friendlyFileLoadError(0,u.src),"function"==typeof r?r(e):console.error(e)},0!==e.indexOf("data:image/")&&(u.crossOrigin="Anonymous"),u.src=e}n.modified=!0})),n},i.default.prototype.image=function(e,t,r,n,o,s,l,u,c){i.default._validateParameters("image",arguments);var f=e.width,d=e.height;e.elt&&e.elt.videoWidth&&!e.canvas&&(f=e.elt.videoWidth,d=e.elt.videoHeight);var p=t,m=r,v=n||f,g=o||d,y=s||0,b=l||0,_=u||f,w=c||d;_=h(_,f),w=h(w,d);var x=1;e.elt&&!e.canvas&&e.elt.style.width&&(x=e.elt.videoWidth&&!n?e.elt.videoWidth:e.elt.width,x/=parseInt(e.elt.style.width,10)),y*=x,b*=x,w*=x,_*=x;var S=a.default.modeAdjust(p,m,v,g,this._renderer._imageMode);this._renderer.image(e,y,b,_,w,S.x,S.y,S.w,S.h)},i.default.prototype.tint=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];i.default._validateParameters("tint",t);var n=this.color.apply(this,t);this._renderer._tint=n.levels},i.default.prototype.noTint=function(){this._renderer._tint=null},i.default.prototype._getTintedImageCanvas=function(e){if(!e.canvas)return e;var t=o.default._toPixels(e.canvas),r=document.createElement("canvas");r.width=e.canvas.width,r.height=e.canvas.height;for(var n=r.getContext("2d"),i=n.createImageData(e.canvas.width,e.canvas.height),a=i.data,s=0;s<t.length;s+=4){var l=t[s],u=t[s+1],c=t[s+2],h=t[s+3];a[s]=l*this._renderer._tint[0]/255,a[s+1]=u*this._renderer._tint[1]/255,a[s+2]=c*this._renderer._tint[2]/255,a[s+3]=h*this._renderer._tint[3]/255}return n.putImageData(i,0,0),r},i.default.prototype.imageMode=function(e){i.default._validateParameters("imageMode",arguments),e!==s.CORNER&&e!==s.CORNERS&&e!==s.CENTER||(this._renderer._imageMode=e)};var f=i.default;r.default=f},{"../core/constants":26,"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/helpers":32,"../core/main":36,"./filters":57,omggif:11}],60:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("../core/main")),i=o(e("./filters"));function o(e){return e&&e.__esModule?e:{default:e}}n.default.Image=function(e,t){this.width=e,this.height=t,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.drawingContext=this.canvas.getContext("2d"),(this._pixelsState=this)._pixelDensity=1,this.gifProperties=null,this._modified=!1,this.pixels=[]},n.default.Image.prototype._animateGif=function(e){var t=this.gifProperties,r=e._lastFrameTime+e.deltaTime;if(0===t.lastChangeTime&&(t.lastChangeTime=r),t.playing){t.timeDisplayed=r-t.lastChangeTime;var n=t.frames[t.displayIndex].delay;if(t.timeDisplayed>=n){var i=Math.floor(t.timeDisplayed/n);if(t.timeDisplayed=0,t.lastChangeTime=r,t.displayIndex+=i,t.loopCount=Math.floor(t.displayIndex/t.numFrames),null!==t.loopLimit&&t.loopCount>=t.loopLimit)t.playing=!1;else{var o=t.displayIndex%t.numFrames;this.drawingContext.putImageData(t.frames[o].image,0,0),t.displayIndex=o,this.setModified(!0)}}}},n.default.Image.prototype._setProperty=function(e,t){this[e]=t,this.setModified(!0)},n.default.Image.prototype.loadPixels=function(){n.default.Renderer2D.prototype.loadPixels.call(this),this.setModified(!0)},n.default.Image.prototype.updatePixels=function(e,t,r,i){n.default.Renderer2D.prototype.updatePixels.call(this,e,t,r,i),this.setModified(!0)},n.default.Image.prototype.get=function(e,t,r,i){return n.default._validateParameters("p5.Image.get",arguments),n.default.Renderer2D.prototype.get.apply(this,arguments)},n.default.Image.prototype._getPixel=n.default.Renderer2D.prototype._getPixel,n.default.Image.prototype.set=function(e,t,r){n.default.Renderer2D.prototype.set.call(this,e,t,r),this.setModified(!0)},n.default.Image.prototype.resize=function(e,t){0===e&&0===t?(e=this.canvas.width,t=this.canvas.height):0===e?e=this.canvas.width*t/this.canvas.height:0===t&&(t=this.canvas.height*e/this.canvas.width),e=Math.floor(e),t=Math.floor(t);var r=document.createElement("canvas");if(r.width=e,r.height=t,this.gifProperties)for(var n=this.gifProperties,i=function(e,t){for(var r=0,n=0;n<t.height;n++)for(var i=0;i<t.width;i++){var o=Math.floor(i*e.width/t.width),a=4*(Math.floor(n*e.height/t.height)*e.width+o);t.data[r++]=e.data[a++],t.data[r++]=e.data[a++],t.data[r++]=e.data[a++],t.data[r++]=e.data[a++]}},o=0;o<n.numFrames;o++){var a=this.drawingContext.createImageData(e,t);i(n.frames[o].image,a),n.frames[o].image=a}r.getContext("2d").drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,r.width,r.height),this.canvas.width=this.width=e,this.canvas.height=this.height=t,this.drawingContext.drawImage(r,0,0,e,t,0,0,e,t),0<this.pixels.length&&this.loadPixels(),this.setModified(!0)},n.default.Image.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default.prototype.copy.apply(this,t)},n.default.Image.prototype.mask=function(e){void 0===e&&(e=this);var t=this.drawingContext.globalCompositeOperation,r=1;e instanceof n.default.Renderer&&(r=e._pInst._pixelDensity);var i=[e,0,0,r*e.width,r*e.height,0,0,this.width,this.height];this.drawingContext.globalCompositeOperation="destination-in",n.default.Image.prototype.copy.apply(this,i),this.drawingContext.globalCompositeOperation=t,this.setModified(!0)},n.default.Image.prototype.filter=function(e,t){i.default.apply(this.canvas,i.default[e],t),this.setModified(!0)},n.default.Image.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("p5.Image.blend",arguments),n.default.prototype.blend.apply(this,t),this.setModified(!0)},n.default.Image.prototype.setModified=function(e){this._modified=e},n.default.Image.prototype.isModified=function(){return this._modified},n.default.Image.prototype.save=function(e,t){this.gifProperties?n.default.prototype.saveGif(this,e):n.default.prototype.saveCanvas(this.canvas,e,t)},n.default.Image.prototype.reset=function(){if(this.gifProperties){var e=this.gifProperties;e.playing=!0,e.timeSinceStart=0,e.timeDisplayed=0,e.lastChangeTime=0,e.loopCount=0,e.displayIndex=0,this.drawingContext.putImageData(e.frames[0].image,0,0)}},n.default.Image.prototype.getCurrentFrame=function(){if(this.gifProperties){var e=this.gifProperties;return e.displayIndex%e.numFrames}},n.default.Image.prototype.setFrame=function(e){if(this.gifProperties){var t=this.gifProperties;e<t.numFrames&&0<=e?(t.timeDisplayed=0,t.lastChangeTime=0,t.displayIndex=e,this.drawingContext.putImageData(t.frames[e].image,0,0)):console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero.")}},n.default.Image.prototype.numFrames=function(){if(this.gifProperties)return this.gifProperties.numFrames},n.default.Image.prototype.play=function(){this.gifProperties&&(this.gifProperties.playing=!0)},n.default.Image.prototype.pause=function(){this.gifProperties&&(this.gifProperties.playing=!1)},n.default.Image.prototype.delay=function(e,t){if(this.gifProperties){var r=this.gifProperties;if(t<r.numFrames&&0<=t)r.frames[t].delay=e;else{var n=!0,i=!1,o=void 0;try{for(var a,s=r.frames[Symbol.iterator]();!(n=(a=s.next()).done);n=!0)a.value.delay=e}catch(e){i=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw o}}}}};var a=n.default.Image;r.default=a},{"../core/main":36,"./filters":57}],61:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("../core/main")),i=o(e("./filters"));function o(e){return e&&e.__esModule?e:{default:e}}e("../color/p5.Color"),n.default.prototype.pixels=[],n.default.prototype.blend=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i;n.default._validateParameters("blend",t),this._renderer?(i=this._renderer).blend.apply(i,t):n.default.Renderer2D.prototype.blend.apply(this,t)},n.default.prototype.copy=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var i,o,a,s,l,u,c,h,f;if(n.default._validateParameters("copy",t),9===t.length)i=t[0],o=t[1],a=t[2],s=t[3],l=t[4],u=t[5],c=t[6],h=t[7],f=t[8];else{if(8!==t.length)throw new Error("Signature not supported");i=this,o=t[0],a=t[1],s=t[2],l=t[3],u=t[4],c=t[5],h=t[6],f=t[7]}n.default.prototype._copyHelper(this,i,o,a,s,l,u,c,h,f)},n.default.prototype._copyHelper=function(e,t,r,i,o,a,s,l,u,c){t.loadPixels();var h=t.canvas.width/t.width,f=0,d=0;t._renderer&&t._renderer.isP3D&&(f=t.width/2,d=t.height/2),e._renderer&&e._renderer.isP3D?n.default.RendererGL.prototype.image.call(e._renderer,t,r+f,i+d,o,a,s,l,u,c):e.drawingContext.drawImage(t.canvas,h*(r+f),h*(i+d),h*o,h*a,s,l,u,c)},n.default.prototype.filter=function(e,t){n.default._validateParameters("filter",arguments),void 0!==this.canvas?i.default.apply(this.canvas,i.default[e],t):i.default.apply(this.elt,i.default[e],t)},n.default.prototype.get=function(e,t,r,i){var o;return n.default._validateParameters("get",arguments),(o=this._renderer).get.apply(o,arguments)},n.default.prototype.loadPixels=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("loadPixels",t),this._renderer.loadPixels()},n.default.prototype.set=function(e,t,r){this._renderer.set(e,t,r)},n.default.prototype.updatePixels=function(e,t,r,i){n.default._validateParameters("updatePixels",arguments),0!==this.pixels.length&&this._renderer.updatePixels(e,t,r,i)};var a=n.default;r.default=a},{"../color/p5.Color":24,"../core/main":36,"./filters":57}],62:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=a(e("../core/main"));e("whatwg-fetch"),e("es6-promise/auto");var i=a(e("fetch-jsonp")),o=a(e("file-saver"));function a(e){return e&&e.__esModule?e:{default:e}}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){var r={};if(void 0===(t=t||[]))for(var n=0;n<e.length;n++)t[n.toString()]=n;for(var i=0;i<t.length;i++){var o=t[i],a=e[i];r[o]=a}return r}function u(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function c(e,t){t&&!0!==t&&"true"!==t||(t="");var r="";return(e=e||"untitled")&&e.includes(".")&&(r=e.split(".").pop()),t&&r!==t&&(r=t,e="".concat(e,".").concat(r)),[e,r]}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),n.default.prototype.loadJSON=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("loadJSON",t);for(var i,o,a,l=t[0],u={},c="json",h=1;h<t.length;h++){var f=t[h];"string"==typeof f?"jsonp"!==f&&"json"!==f||(c=f):"function"==typeof f?i?o=f:i=f:"object"===s(f)&&(f.hasOwnProperty("jsonpCallback")||f.hasOwnProperty("jsonpCallbackFunction"))&&(c="jsonp",a=f)}var d=this;return this.httpDo(l,"GET",a,c,(function(e){for(var t in e)u[t]=e[t];void 0!==i&&i(e),d._decrementPreload()}),(function(e){if(n.default._friendlyFileLoadError(5,l),!o)throw e;o(e)})),u},n.default.prototype.loadStrings=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];n.default._validateParameters("loadStrings",t);for(var i,o,a=[],s=1;s<t.length;s++){var l=t[s];"function"==typeof l&&(void 0===i?i=l:void 0===o&&(o=l))}var u=this;return n.default.prototype.httpDo.call(this,t[0],"GET","text",(function(e){for(var t=e.replace(/\r\n/g,"\r").replace(/\n/g,"\r").split(/\r/),r=0,n=t.length;r<n;r+=32768)Array.prototype.push.apply(a,t.slice(r,Math.min(r+32768,n)));void 0!==i&&i(a),u._decrementPreload()}),(function(e){if(n.default._friendlyFileLoadError(3,e),!o)throw e;o(e)})),a},n.default.prototype.loadTable=function(e){var t,r,i,o=[],a=!1,s=e.substring(e.lastIndexOf(".")+1,e.length);"csv"===s?i=",":"ssv"===s?i=";":"tsv"===s&&(i="\t");for(var u=1;u<arguments.length;u++)"function"==typeof arguments[u]?void 0===t?t=arguments[u]:void 0===r&&(r=arguments[u]):"string"==typeof arguments[u]&&(o.push(arguments[u]),"header"===arguments[u]&&(a=!0),"csv"===arguments[u]?i=",":"ssv"===arguments[u]?i=";":"tsv"===arguments[u]&&(i="\t"));var c=new n.default.Table,h=this;return this.httpDo(e,"GET","table",(function(e){for(var r,o,s={},u=[],f=0,d=null,p=function(){s.currentState=0,s.token=""},m=function(){d.push(s.token),p()},v=function(){s.currentState=4,u.push(d),d=null};;){if(null==(r=e[f++])){if(s.escaped)throw new Error("Unclosed quote in file.");if(d){m(),v();break}}if(null===d&&(s.escaped=!1,d=[],p()),0===s.currentState){if('"'===r){s.escaped=!0,s.currentState=1;continue}s.currentState=1}if(1===s.currentState&&s.escaped)if('"'===r)'"'===e[f]?(s.token+='"',f++):(s.escaped=!1,s.currentState=2);else{if("\r"===r)continue;s.token+=r}else"\r"===r?("\n"===e[f]&&f++,m(),v()):"\n"===r?(m(),v()):r===i?m():1===s.currentState&&(s.token+=r)}if(a)c.columns=u.shift();else for(var g=0;g<u[0].length;g++)c.columns[g]="null";for(var y=0;y<u.length;y++)(1!==u[y].length||"undefined"!==u[y][0]&&""!==u[y][0])&&((o=new n.default.TableRow).arr=u[y],o.obj=l(u[y],c.columns),c.addRow(o));"function"==typeof t&&t(c),h._decrementPreload()}),(function(t){n.default._friendlyFileLoadError(2,e),r?r(t):console.error(t)})),c},n.default.prototype.loadXML=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var i,o,a=new n.default.XML,s=1;s<t.length;s++){var l=t[s];"function"==typeof l&&(void 0===i?i=l:void 0===o&&(o=l))}var u=this;return this.httpDo(t[0],"GET","xml",(function(e){for(var t in e)a[t]=e[t];void 0!==i&&i(a),u._decrementPreload()}),(function(e){if(n.default._friendlyFileLoadError(1,e),!o)throw e;o(e)})),a},n.default.prototype.loadBytes=function(e,t,r){var i={},o=this;return this.httpDo(e,"GET","arrayBuffer",(function(e){i.bytes=new Uint8Array(e),"function"==typeof t&&t(i),o._decrementPreload()}),(function(t){if(n.default._friendlyFileLoadError(6,e),!r)throw t;r(t)})),i},n.default.prototype.httpGet=function(){n.default._validateParameters("httpGet",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"GET"),n.default.prototype.httpDo.apply(this,e)},n.default.prototype.httpPost=function(){n.default._validateParameters("httpPost",arguments);var e=Array.prototype.slice.call(arguments);return e.splice(1,0,"POST"),n.default.prototype.httpDo.apply(this,e)},n.default.prototype.httpDo=function(){for(var e,t,r,o,a,l={},u=0,c="text/plain",h=arguments.length-1;0<h&&"function"==typeof(h<0||arguments.length<=h?void 0:arguments[h]);h--)u++;var f=arguments.length<=0?void 0:arguments[0];if(2==arguments.length-u&&"string"==typeof f&&"object"===s(arguments.length<=1?void 0:arguments[1]))o=new Request(f,arguments.length<=1?void 0:arguments[1]),t=arguments.length<=2?void 0:arguments[2],r=arguments.length<=3?void 0:arguments[3];else{for(var d,p="GET",m=1;m<arguments.length;m++){var v=m<0||arguments.length<=m?void 0:arguments[m];if("string"==typeof v)"GET"===v||"POST"===v||"PUT"===v||"DELETE"===v?p=v:"json"===v||"jsonp"===v||"binary"===v||"arrayBuffer"===v||"xml"===v||"text"===v||"table"===v?e=v:d=v;else if("number"==typeof v)d=v.toString();else if("object"===s(v))if(v.hasOwnProperty("jsonpCallback")||v.hasOwnProperty("jsonpCallbackFunction"))for(var g in v)l[g]=v[g];else c=v instanceof n.default.XML?(d=v.serialize(),"application/xml"):(d=JSON.stringify(v),"application/json");else"function"==typeof v&&(t?r=v:t=v)}var y="GET"===p?new Headers:new Headers({"Content-Type":c});o=new Request(f,{method:p,mode:"cors",body:d,headers:y})}return(a=(a="jsonp"===(e=e||(f.includes("json")?"json":f.includes("xml")?"xml":"text"))?(0,i.default)(f,l):fetch(o)).then((function(t){if(!t.ok){var r=new Error(t.body);throw r.status=t.status,r.ok=!1,r}var i=0;switch("jsonp"!==e&&(i=t.headers.get("content-length")),i&&64e6<i&&n.default._friendlyFileLoadError(7,f),e){case"json":case"jsonp":return t.json();case"binary":return t.blob();case"arrayBuffer":return t.arrayBuffer();case"xml":return t.text().then((function(e){var t=(new DOMParser).parseFromString(e,"text/xml");return new n.default.XML(t.documentElement)}));default:return t.text()}}))).then(t||function(){}),a.catch(r||console.error),a},window.URL=window.URL||window.webkitURL,n.default.prototype._pWriters=[],n.default.prototype.createWriter=function(e,t){var r;for(var i in n.default.prototype._pWriters)if(n.default.prototype._pWriters[i].name===e)return r=new n.default.PrintWriter(e+this.millis(),t),n.default.prototype._pWriters.push(r),r;return r=new n.default.PrintWriter(e,t),n.default.prototype._pWriters.push(r),r},n.default.PrintWriter=function(e,t){var r=this;this.name=e,this.content="",this.write=function(e){this.content+=e},this.print=function(e){this.content+="".concat(e,"\n")},this.clear=function(){this.content=""},this.close=function(){var i=[];for(var o in i.push(this.content),n.default.prototype.writeFile(i,e,t),n.default.prototype._pWriters)n.default.prototype._pWriters[o].name===this.name&&n.default.prototype._pWriters.splice(o,1);r.clear(),r={}}},n.default.prototype.save=function(e,t,r){var i=arguments,o=this._curElement?this._curElement.elt:this.elt;if(0!==i.length)if(i[0]instanceof n.default.Renderer||i[0]instanceof n.default.Graphics)n.default.prototype.saveCanvas(i[0].elt,i[1],i[2]);else if(1===i.length&&"string"==typeof i[0])n.default.prototype.saveCanvas(o,i[0]);else switch(c(i[1],i[2])[1]){case"json":return void n.default.prototype.saveJSON(i[0],i[1],i[2]);case"txt":return void n.default.prototype.saveStrings(i[0],i[1],i[2]);default:i[0]instanceof Array?n.default.prototype.saveStrings(i[0],i[1],i[2]):i[0]instanceof n.default.Table?n.default.prototype.saveTable(i[0],i[1],i[2]):i[0]instanceof n.default.Image?n.default.prototype.saveCanvas(i[0].canvas,i[1]):i[0]instanceof n.default.SoundFile&&n.default.prototype.saveSound(i[0],i[1],i[2],i[3])}else n.default.prototype.saveCanvas(o)},n.default.prototype.saveJSON=function(e,t,r){var i;n.default._validateParameters("saveJSON",arguments),i=r?JSON.stringify(e):JSON.stringify(e,void 0,2),this.saveStrings(i.split("\n"),t,"json")},n.default.prototype.saveJSONObject=n.default.prototype.saveJSON,n.default.prototype.saveJSONArray=n.default.prototype.saveJSON,n.default.prototype.saveStrings=function(e,t,r,i){n.default._validateParameters("saveStrings",arguments);for(var o=r||"txt",a=this.createWriter(t,o),s=0;s<e.length;s++)i?a.write(e[s]+"\r\n"):a.write(e[s]+"\n");a.close(),a.clear()},n.default.prototype.saveTable=function(e,t,r){var i;n.default._validateParameters("saveTable",arguments),i=void 0===r?t.substring(t.lastIndexOf(".")+1,t.length):r;var o=this.createWriter(t,i),a=e.columns,s=",";if("tsv"===i&&(s="\t"),"html"!==i){if("0"!==a[0]){for(var l=0;l<a.length;l++)l<a.length-1?o.write(a[l]+s):o.write(a[l]);o.write("\n")}for(var c=0;c<e.rows.length;c++){var h=void 0;for(h=0;h<e.rows[c].arr.length;h++)h<e.rows[c].arr.length-1?"csv"===i&&e.rows[c].arr[h].includes(",")?o.write('"'+e.rows[c].arr[h]+'"'+s):o.write(e.rows[c].arr[h]+s):"csv"===i&&e.rows[c].arr[h].includes(",")?o.write('"'+e.rows[c].arr[h]+'"'):o.write(e.rows[c].arr[h]);o.write("\n")}}else{if(o.print("<html>"),o.print("<head>"),o.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'),o.print("</head>"),o.print("<body>"),o.print("  <table>"),"0"!==a[0]){o.print("    <tr>");for(var f=0;f<a.length;f++){var d=u(a[f]);o.print("      <td>".concat(d)),o.print("      </td>")}o.print("    </tr>")}for(var p=0;p<e.rows.length;p++){o.print("    <tr>");for(var m=0;m<e.columns.length;m++){var v=u(e.rows[p].getString(m));o.print("      <td>".concat(v)),o.print("      </td>")}o.print("    </tr>")}o.print("  </table>"),o.print("</body>"),o.print("</html>")}o.close(),o.clear()},n.default.prototype.writeFile=function(e,t,r){var i="application/octet-stream";n.default.prototype._isSafari()&&(i="text/plain");var o=new Blob(e,{type:i});n.default.prototype.downloadFile(o,t,r)},n.default.prototype.downloadFile=function(e,t,r){var i=c(t,r),a=i[0];if(e instanceof Blob)o.default.saveAs(e,a);else{var s=document.createElement("a");if(s.href=e,s.download=a,s.onclick=function(e){var t;t=e,document.body.removeChild(t.target),e.stopPropagation()},s.style.display="none",document.body.appendChild(s),n.default.prototype._isSafari()){var l="Hello, Safari user! To download this file...\n";l+="1. Go to File --\x3e Save As.\n",l+='2. Choose "Page Source" as the Format.\n',l+='3. Name it with this extension: ."'.concat(i[1],'"'),alert(l)}s.click()}},n.default.prototype._checkFileExtension=c,n.default.prototype._isSafari=function(){return 0<Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")};var h=n.default;r.default=h},{"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36,"es6-promise/auto":5,"fetch-jsonp":7,"file-saver":8,"whatwg-fetch":15}],63:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.Table=function(e){this.columns=[],this.rows=[]},i.default.Table.prototype.addRow=function(e){var t=e||new i.default.TableRow;if(void 0===t.arr||void 0===t.obj)throw new Error("invalid TableRow: ".concat(t));return(t.table=this).rows.push(t),t},i.default.Table.prototype.removeRow=function(e){this.rows[e].table=null;var t=this.rows.splice(e+1,this.rows.length);this.rows.pop(),this.rows=this.rows.concat(t)},i.default.Table.prototype.getRow=function(e){return this.rows[e]},i.default.Table.prototype.getRows=function(){return this.rows},i.default.Table.prototype.findRow=function(e,t){if("string"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].obj[t]===e)return this.rows[r]}else for(var n=0;n<this.rows.length;n++)if(this.rows[n].arr[t]===e)return this.rows[n];return null},i.default.Table.prototype.findRows=function(e,t){var r=[];if("string"==typeof t)for(var n=0;n<this.rows.length;n++)this.rows[n].obj[t]===e&&r.push(this.rows[n]);else for(var i=0;i<this.rows.length;i++)this.rows[i].arr[t]===e&&r.push(this.rows[i]);return r},i.default.Table.prototype.matchRow=function(e,t){if("number"==typeof t){for(var r=0;r<this.rows.length;r++)if(this.rows[r].arr[t].match(e))return this.rows[r]}else for(var n=0;n<this.rows.length;n++)if(this.rows[n].obj[t].match(e))return this.rows[n];return null},i.default.Table.prototype.matchRows=function(e,t){var r=[];if("number"==typeof t)for(var n=0;n<this.rows.length;n++)this.rows[n].arr[t].match(e)&&r.push(this.rows[n]);else for(var i=0;i<this.rows.length;i++)this.rows[i].obj[t].match(e)&&r.push(this.rows[i]);return r},i.default.Table.prototype.getColumn=function(e){var t=[];if("string"==typeof e)for(var r=0;r<this.rows.length;r++)t.push(this.rows[r].obj[e]);else for(var n=0;n<this.rows.length;n++)t.push(this.rows[n].arr[e]);return t},i.default.Table.prototype.clearRows=function(){delete this.rows,this.rows=[]},i.default.Table.prototype.addColumn=function(e){var t=e||null;this.columns.push(t)},i.default.Table.prototype.getColumnCount=function(){return this.columns.length},i.default.Table.prototype.getRowCount=function(){return this.rows.length},i.default.Table.prototype.removeTokens=function(e,t){for(var r=[],n=0;n<e.length;n++)r.push(e.charAt(n).replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"));var i=new RegExp(r.join("|"),"g");if(void 0===t)for(var o=0;o<this.columns.length;o++)for(var a=0;a<this.rows.length;a++){var s=this.rows[a].arr[o];s=s.replace(i,""),this.rows[a].arr[o]=s,this.rows[a].obj[this.columns[o]]=s}else if("string"==typeof t)for(var l=0;l<this.rows.length;l++){var u=this.rows[l].obj[t];u=u.replace(i,""),this.rows[l].obj[t]=u;var c=this.columns.indexOf(t);this.rows[l].arr[c]=u}else for(var h=0;h<this.rows.length;h++){var f=this.rows[h].arr[t];f=f.replace(i,""),this.rows[h].arr[t]=f,this.rows[h].obj[this.columns[t]]=f}},i.default.Table.prototype.trim=function(e){var t=new RegExp(" ","g");if(void 0===e)for(var r=0;r<this.columns.length;r++)for(var n=0;n<this.rows.length;n++){var i=this.rows[n].arr[r];i=i.replace(t,""),this.rows[n].arr[r]=i,this.rows[n].obj[this.columns[r]]=i}else if("string"==typeof e)for(var o=0;o<this.rows.length;o++){var a=this.rows[o].obj[e];a=a.replace(t,""),this.rows[o].obj[e]=a;var s=this.columns.indexOf(e);this.rows[o].arr[s]=a}else for(var l=0;l<this.rows.length;l++){var u=this.rows[l].arr[e];u=u.replace(t,""),this.rows[l].arr[e]=u,this.rows[l].obj[this.columns[e]]=u}},i.default.Table.prototype.removeColumn=function(e){var t,r;"string"==typeof e?(t=e,r=this.columns.indexOf(e)):(r=e,t=this.columns[e]);var n=this.columns.splice(r+1,this.columns.length);this.columns.pop(),this.columns=this.columns.concat(n);for(var i=0;i<this.rows.length;i++){var o=this.rows[i].arr,a=o.splice(r+1,o.length);o.pop(),this.rows[i].arr=o.concat(a),delete this.rows[i].obj[t]}},i.default.Table.prototype.set=function(e,t,r){this.rows[e].set(t,r)},i.default.Table.prototype.setNum=function(e,t,r){this.rows[e].setNum(t,r)},i.default.Table.prototype.setString=function(e,t,r){this.rows[e].setString(t,r)},i.default.Table.prototype.get=function(e,t){return this.rows[e].get(t)},i.default.Table.prototype.getNum=function(e,t){return this.rows[e].getNum(t)},i.default.Table.prototype.getString=function(e,t){return this.rows[e].getString(t)},i.default.Table.prototype.getObject=function(e){for(var t,r={},n=0;n<this.rows.length;n++)if(t=this.rows[n].obj,"string"==typeof e){if(!(0<=this.columns.indexOf(e)))throw new Error('This table has no column named "'.concat(e,'"'));r[t[e]]=t}else r[n]=this.rows[n].obj;return r},i.default.Table.prototype.getArray=function(){for(var e=[],t=0;t<this.rows.length;t++)e.push(this.rows[t].arr);return e};var o=i.default;r.default=o},{"../core/main":36}],64:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.TableRow=function(e,t){var r=[],n={};e&&(t=t||",",r=e.split(t));for(var i=0;i<r.length;i++){var o=i,a=r[i];n[o]=a}this.arr=r,this.obj=n,this.table=null},i.default.TableRow.prototype.set=function(e,t){if("string"==typeof e){var r=this.table.columns.indexOf(e);if(!(0<=r))throw new Error('This table has no column named "'.concat(e,'"'));this.obj[e]=t,this.arr[r]=t}else{if(!(e<this.table.columns.length))throw new Error("Column #".concat(e," is out of the range of this table"));this.arr[e]=t;var n=this.table.columns[e];this.obj[n]=t}},i.default.TableRow.prototype.setNum=function(e,t){var r=parseFloat(t);this.set(e,r)},i.default.TableRow.prototype.setString=function(e,t){var r=t.toString();this.set(e,r)},i.default.TableRow.prototype.get=function(e){return"string"==typeof e?this.obj[e]:this.arr[e]},i.default.TableRow.prototype.getNum=function(e){var t;if("NaN"===(t="string"==typeof e?parseFloat(this.obj[e]):parseFloat(this.arr[e])).toString())throw"Error: ".concat(this.obj[e]," is NaN (Not a Number)");return t},i.default.TableRow.prototype.getString=function(e){return"string"==typeof e?this.obj[e].toString():this.arr[e].toString()};var o=i.default;r.default=o},{"../core/main":36}],65:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.XML=function(e){if(e)this.DOM=e;else{var t=document.implementation.createDocument(null,"doc");this.DOM=t.createElement("root")}},i.default.XML.prototype.getParent=function(){return new i.default.XML(this.DOM.parentElement)},i.default.XML.prototype.getName=function(){return this.DOM.tagName},i.default.XML.prototype.setName=function(e){var t=this.DOM.innerHTML,r=this.DOM.attributes,n=document.implementation.createDocument(null,"default").createElement(e);n.innerHTML=t;for(var i=0;i<r.length;i++)n.setAttribute(r[i].nodeName,r.nodeValue);this.DOM=n},i.default.XML.prototype.hasChildren=function(){return 0<this.DOM.children.length},i.default.XML.prototype.listChildren=function(){for(var e=[],t=0;t<this.DOM.childNodes.length;t++)e.push(this.DOM.childNodes[t].nodeName);return e},i.default.XML.prototype.getChildren=function(e){return function(e){for(var t=[],r=0;r<e.length;r++)t.push(new i.default.XML(e[r]));return t}(e?this.DOM.getElementsByTagName(e):this.DOM.children)},i.default.XML.prototype.getChild=function(e){if("string"!=typeof e)return new i.default.XML(this.DOM.children[e]);var t=!0,r=!1,n=void 0;try{for(var o,a=this.DOM.children[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var s=o.value;if(s.tagName===e)return new i.default.XML(s)}}catch(e){r=!0,n=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw n}}},i.default.XML.prototype.addChild=function(e){e instanceof i.default.XML&&this.DOM.appendChild(e.DOM)},i.default.XML.prototype.removeChild=function(e){var t=-1;if("string"==typeof e){for(var r=0;r<this.DOM.children.length;r++)if(this.DOM.children[r].tagName===e){t=r;break}}else t=e;-1!==t&&this.DOM.removeChild(this.DOM.children[t])},i.default.XML.prototype.getAttributeCount=function(){return this.DOM.attributes.length},i.default.XML.prototype.listAttributes=function(){var e=[],t=!0,r=!1,n=void 0;try{for(var i,o=this.DOM.attributes[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;e.push(a.nodeName)}}catch(e){r=!0,n=e}finally{try{t||null==o.return||o.return()}finally{if(r)throw n}}return e},i.default.XML.prototype.hasAttribute=function(e){var t={},r=!0,n=!1,i=void 0;try{for(var o,a=this.DOM.attributes[Symbol.iterator]();!(r=(o=a.next()).done);r=!0){var s=o.value;t[s.nodeName]=s.nodeValue}}catch(e){n=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw i}}return!!t[e]},i.default.XML.prototype.getNum=function(e,t){var r={},n=!0,i=!1,o=void 0;try{for(var a,s=this.DOM.attributes[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;r[l.nodeName]=l.nodeValue}}catch(e){i=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw o}}return Number(r[e])||t||0},i.default.XML.prototype.getString=function(e,t){var r={},n=!0,i=!1,o=void 0;try{for(var a,s=this.DOM.attributes[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;r[l.nodeName]=l.nodeValue}}catch(e){i=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw o}}return r[e]?String(r[e]):t||null},i.default.XML.prototype.setAttribute=function(e,t){this.DOM.setAttribute(e,t)},i.default.XML.prototype.getContent=function(e){return this.DOM.textContent.replace(/\s\s+/g,",")||e||null},i.default.XML.prototype.setContent=function(e){this.DOM.children.length||(this.DOM.textContent=e)},i.default.XML.prototype.serialize=function(){return(new XMLSerializer).serializeToString(this.DOM)};var o=i.default;r.default=o},{"../core/main":36}],66:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(){if("function"==typeof Math.hypot)return Math.hypot.apply(null,arguments);for(var e=arguments.length,t=[],r=0,n=0;n<e;n++){var i=arguments[n];if((i=+i)==1/0||i===-1/0)return 1/0;r<(i=Math.abs(i))&&(r=i),t[n]=i}0===r&&(r=1);for(var o=0,a=0,s=0;s<e;s++){var l=t[s]/r,u=l*l-a,c=o+u;a=c-o-u,o=c}return Math.sqrt(o)*r}i.default.prototype.abs=Math.abs,i.default.prototype.ceil=Math.ceil,i.default.prototype.constrain=function(e,t,r){return i.default._validateParameters("constrain",arguments),Math.max(Math.min(e,r),t)},i.default.prototype.dist=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i.default._validateParameters("dist",t),4===t.length?o(t[2]-t[0],t[3]-t[1]):6===t.length?o(t[3]-t[0],t[4]-t[1],t[5]-t[2]):void 0},i.default.prototype.exp=Math.exp,i.default.prototype.floor=Math.floor,i.default.prototype.lerp=function(e,t,r){return i.default._validateParameters("lerp",arguments),r*(t-e)+e},i.default.prototype.log=Math.log,i.default.prototype.mag=function(e,t){return i.default._validateParameters("mag",arguments),o(e,t)},i.default.prototype.map=function(e,t,r,n,o,a){i.default._validateParameters("map",arguments);var s=(e-t)/(r-t)*(o-n)+n;return a?n<o?this.constrain(s,n,o):this.constrain(s,o,n):s},i.default.prototype.max=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t[0]instanceof Array?Math.max.apply(null,t[0]):Math.max.apply(null,t)},i.default.prototype.min=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t[0]instanceof Array?Math.min.apply(null,t[0]):Math.min.apply(null,t)},i.default.prototype.norm=function(e,t,r){return i.default._validateParameters("norm",arguments),this.map(e,t,r,0,1)},i.default.prototype.pow=Math.pow,i.default.prototype.round=function(e,t){return t?Number(Math.round(e+"e"+t)+"e-"+t):Math.round(e)},i.default.prototype.sq=function(e){return e*e},i.default.prototype.sqrt=Math.sqrt,i.default.prototype.fract=function(e){i.default._validateParameters("fract",arguments);var t=0,r=Number(e);if(isNaN(r)||Math.abs(r)===1/0)return r;if(r<0&&(r=-r,t=1),!String(r).includes(".")||String(r).includes("e"))return r<1?Math.abs(t-r):0;var n=String(r);return n=Number("0"+n.slice(n.indexOf("."))),Math.abs(t-n)};var a=i.default;r.default=a},{"../core/main":36}],67:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.createVector=function(e,t,r){return this instanceof i.default?new i.default.Vector(this,arguments):new i.default.Vector(e,t,r)};var o=i.default;r.default=o},{"../core/main":36}],68:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e){return.5*(1-Math.cos(e*Math.PI))}var a,s=4095,l=4,u=.5;i.default.prototype.noise=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0;if(null==a){a=new Array(4096);for(var n=0;n<4096;n++)a[n]=Math.random()}e<0&&(e=-e),t<0&&(t=-t),r<0&&(r=-r);for(var i,c,h,f,d,p=Math.floor(e),m=Math.floor(t),v=Math.floor(r),g=e-p,y=t-m,b=r-v,_=0,w=.5,x=0;x<l;x++){var S=p+(m<<4)+(v<<8);i=o(g),c=o(y),h=a[S&s],h+=i*(a[S+1&s]-h),f=a[S+16&s],h+=c*((f+=i*(a[S+16+1&s]-f))-h),f=a[(S+=256)&s],f+=i*(a[S+1&s]-f),d=a[S+16&s],f+=c*((d+=i*(a[S+16+1&s]-d))-f),_+=(h+=o(b)*(f-h))*w,w*=u,p<<=1,m<<=1,v<<=1,1<=(g*=2)&&(p++,g--),1<=(y*=2)&&(m++,y--),1<=(b*=2)&&(v++,b--)}return _},i.default.prototype.noiseDetail=function(e,t){0<e&&(l=e),0<t&&(u=t)},i.default.prototype.noiseSeed=function(e){var t,r,n,i=(n=4294967296,{setSeed:function(e){r=t=(null==e?Math.random()*n:e)>>>0},getSeed:function(){return t},rand:function(){return(r=(1664525*r+1013904223)%n)/n}});i.setSeed(e),a=new Array(4096);for(var o=0;o<4096;o++)a[o]=i.rand()};var c=i.default;r.default=c},{"../core/main":36}],69:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e,t){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),this}function u(e,t,r){return 0!==e&&(this.x=this.x%e),0!==t&&(this.y=this.y%t),0!==r&&(this.z=this.z%r),this}o.default.Vector=function(e,t,r){var n,i,a;a=e instanceof o.default?(this.p5=e,n=t[0]||0,i=t[1]||0,t[2]||0):(n=e||0,i=t||0,r||0),this.x=n,this.y=i,this.z=a},o.default.Vector.prototype.toString=function(){return"p5.Vector Object : [".concat(this.x,", ").concat(this.y,", ").concat(this.z,"]")},o.default.Vector.prototype.set=function(e,t,r){return e instanceof o.default.Vector?(this.x=e.x||0,this.y=e.y||0,this.z=e.z||0):e instanceof Array?(this.x=e[0]||0,this.y=e[1]||0,this.z=e[2]||0):(this.x=e||0,this.y=t||0,this.z=r||0),this},o.default.Vector.prototype.copy=function(){return this.p5?new o.default.Vector(this.p5,[this.x,this.y,this.z]):new o.default.Vector(this.x,this.y,this.z)},o.default.Vector.prototype.add=function(e,t,r){return e instanceof o.default.Vector?(this.x+=e.x||0,this.y+=e.y||0,this.z+=e.z||0):e instanceof Array?(this.x+=e[0]||0,this.y+=e[1]||0,this.z+=e[2]||0):(this.x+=e||0,this.y+=t||0,this.z+=r||0),this},o.default.Vector.prototype.rem=function(e,t,r){if(e instanceof o.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)){var n=parseFloat(e.x),i=parseFloat(e.y),a=parseFloat(e.z);u.call(this,n,i,a)}}else if(e instanceof Array)e.every((function(e){return Number.isFinite(e)}))&&(2===e.length&&l.call(this,e[0],e[1]),3===e.length&&u.call(this,e[0],e[1],e[2]));else if(1===arguments.length){if(Number.isFinite(e)&&0!==e)return this.x=this.x%e,this.y=this.y%e,this.z=this.z%e,this}else if(2===arguments.length){var s=Array.prototype.slice.call(arguments);s.every((function(e){return Number.isFinite(e)}))&&2===s.length&&l.call(this,s[0],s[1])}else if(3===arguments.length){var c=Array.prototype.slice.call(arguments);c.every((function(e){return Number.isFinite(e)}))&&3===c.length&&u.call(this,c[0],c[1],c[2])}},o.default.Vector.prototype.sub=function(e,t,r){return e instanceof o.default.Vector?(this.x-=e.x||0,this.y-=e.y||0,this.z-=e.z||0):e instanceof Array?(this.x-=e[0]||0,this.y-=e[1]||0,this.z-=e[2]||0):(this.x-=e||0,this.y-=t||0,this.z-=r||0),this},o.default.Vector.prototype.mult=function(e,t,r){if(e instanceof o.default.Vector)return Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z?(this.x*=e.x,this.y*=e.y,this.z*=e.z):console.warn("p5.Vector.prototype.mult:","x contains components that are either undefined or not finite numbers"),this;if(e instanceof Array)return e.every((function(e){return Number.isFinite(e)}))&&e.every((function(e){return"number"==typeof e}))?1===e.length?(this.x*=e[0],this.y*=e[0],this.z*=e[0]):2===e.length?(this.x*=e[0],this.y*=e[1]):3===e.length&&(this.x*=e[0],this.y*=e[1],this.z*=e[2]):console.warn("p5.Vector.prototype.mult:","x contains elements that are either undefined or not finite numbers"),this;var n=Array.prototype.slice.call(arguments);return n.every((function(e){return Number.isFinite(e)}))&&n.every((function(e){return"number"==typeof e}))?(1===arguments.length&&(this.x*=e,this.y*=e,this.z*=e),2===arguments.length&&(this.x*=e,this.y*=t),3===arguments.length&&(this.x*=e,this.y*=t,this.z*=r)):console.warn("p5.Vector.prototype.mult:","x, y, or z arguments are either undefined or not a finite number"),this},o.default.Vector.prototype.div=function(e,t,r){if(e instanceof o.default.Vector){if(Number.isFinite(e.x)&&Number.isFinite(e.y)&&Number.isFinite(e.z)&&"number"==typeof e.x&&"number"==typeof e.y&&"number"==typeof e.z){if(0===e.x||0===e.y||0===e.z)return console.warn("p5.Vector.prototype.div:","divide by 0"),this;this.x/=e.x,this.y/=e.y,this.z/=e.z}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}if(e instanceof Array){if(e.every((function(e){return Number.isFinite(e)}))&&e.every((function(e){return"number"==typeof e}))){if(e.some((function(e){return 0===e})))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===e.length?(this.x/=e[0],this.y/=e[0],this.z/=e[0]):2===e.length?(this.x/=e[0],this.y/=e[1]):3===e.length&&(this.x/=e[0],this.y/=e[1],this.z/=e[2])}else console.warn("p5.Vector.prototype.div:","x contains components that are either undefined or not finite numbers");return this}var n=Array.prototype.slice.call(arguments);if(n.every((function(e){return Number.isFinite(e)}))&&n.every((function(e){return"number"==typeof e}))){if(n.some((function(e){return 0===e})))return console.warn("p5.Vector.prototype.div:","divide by 0"),this;1===arguments.length&&(this.x/=e,this.y/=e,this.z/=e),2===arguments.length&&(this.x/=e,this.y/=t),3===arguments.length&&(this.x/=e,this.y/=t,this.z/=r)}else console.warn("p5.Vector.prototype.div:","x, y, or z arguments are either undefined or not a finite number");return this},o.default.Vector.prototype.mag=function(){return Math.sqrt(this.magSq())},o.default.Vector.prototype.magSq=function(){var e=this.x,t=this.y,r=this.z;return e*e+t*t+r*r},o.default.Vector.prototype.dot=function(e,t,r){return e instanceof o.default.Vector?this.dot(e.x,e.y,e.z):this.x*(e||0)+this.y*(t||0)+this.z*(r||0)},o.default.Vector.prototype.cross=function(e){var t=this.y*e.z-this.z*e.y,r=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return this.p5?new o.default.Vector(this.p5,[t,r,n]):new o.default.Vector(t,r,n)},o.default.Vector.prototype.dist=function(e){return e.copy().sub(this).mag()},o.default.Vector.prototype.normalize=function(){var e=this.mag();return 0!==e&&this.mult(1/e),this},o.default.Vector.prototype.limit=function(e){var t=this.magSq();return e*e<t&&this.div(Math.sqrt(t)).mult(e),this},o.default.Vector.prototype.setMag=function(e){return this.normalize().mult(e)},o.default.Vector.prototype.heading=function(){var e=Math.atan2(this.y,this.x);return this.p5?this.p5._fromRadians(e):e},o.default.Vector.prototype.setHeading=function(e){var t=this.mag();return this.x=t*Math.cos(e),this.y=t*Math.sin(e),this},o.default.Vector.prototype.rotate=function(e){var t=this.heading()+e;this.p5&&(t=this.p5._toRadians(t));var r=this.mag();return this.x=Math.cos(t)*r,this.y=Math.sin(t)*r,this},o.default.Vector.prototype.angleBetween=function(e){var t,r=this.dot(e)/(this.mag()*e.mag());return t=Math.acos(Math.min(1,Math.max(-1,r))),t*=Math.sign(this.cross(e).z||1),this.p5&&(t=this.p5._fromRadians(t)),t},o.default.Vector.prototype.lerp=function(e,t,r,n){return e instanceof o.default.Vector?this.lerp(e.x,e.y,e.z,t):(this.x+=(e-this.x)*n||0,this.y+=(t-this.y)*n||0,this.z+=(r-this.z)*n||0,this)},o.default.Vector.prototype.reflect=function(e){return e.normalize(),this.sub(e.mult(2*this.dot(e)))},o.default.Vector.prototype.array=function(){return[this.x||0,this.y||0,this.z||0]},o.default.Vector.prototype.equals=function(e,t,r){var n,i,a;return a=e instanceof o.default.Vector?(n=e.x||0,i=e.y||0,e.z||0):e instanceof Array?(n=e[0]||0,i=e[1]||0,e[2]||0):(n=e||0,i=t||0,r||0),this.x===n&&this.y===i&&this.z===a},o.default.Vector.fromAngle=function(e,t){return void 0===t&&(t=1),new o.default.Vector(t*Math.cos(e),t*Math.sin(e),0)},o.default.Vector.fromAngles=function(e,t,r){void 0===r&&(r=1);var n=Math.cos(t),i=Math.sin(t),a=Math.cos(e),s=Math.sin(e);return new o.default.Vector(r*s*i,-r*a,r*s*n)},o.default.Vector.random2D=function(){return this.fromAngle(Math.random()*a.TWO_PI)},o.default.Vector.random3D=function(){var e=Math.random()*a.TWO_PI,t=2*Math.random()-1,r=Math.sqrt(1-t*t),n=r*Math.cos(e),i=r*Math.sin(e);return new o.default.Vector(n,i,t)},o.default.Vector.add=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&o.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.add")),r.add(t),r},o.default.Vector.rem=function(e,t){if(e instanceof o.default.Vector&&t instanceof o.default.Vector){var r=e.copy();return r.rem(t),r}},o.default.Vector.sub=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&o.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.sub")),r.sub(t),r},o.default.Vector.mult=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&o.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.mult")),r.mult(t),r},o.default.Vector.div=function(e,t,r){return r?r.set(e):(r=e.copy(),3===arguments.length&&o.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.div")),r.div(t),r},o.default.Vector.dot=function(e,t){return e.dot(t)},o.default.Vector.cross=function(e,t){return e.cross(t)},o.default.Vector.dist=function(e,t){return e.dist(t)},o.default.Vector.lerp=function(e,t,r,n){return n?n.set(e):(n=e.copy(),4===arguments.length&&o.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector","p5.Vector.lerp")),n.lerp(t,r),n},o.default.Vector.mag=function(e){var t=e.x,r=e.y,n=e.z,i=t*t+r*r+n*n;return Math.sqrt(i)};var c=o.default.Vector;r.default=c},{"../core/constants":26,"../core/main":36}],70:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n},o="_lcg_random_state",a=4294967296,s=0;i.default.prototype._lcg=function(e){return this[e]=(1664525*this[e]+1013904223)%a,this[e]/a},i.default.prototype._lcgSetSeed=function(e,t){this[e]=(null==t?Math.random()*a:t)>>>0},i.default.prototype.randomSeed=function(e){this._lcgSetSeed(o,e),this._gaussian_previous=!1},i.default.prototype.random=function(e,t){var r;if(i.default._validateParameters("random",arguments),r=null!=this[o]?this._lcg(o):Math.random(),void 0===e)return r;if(void 0===t)return e instanceof Array?e[Math.floor(r*e.length)]:r*e;if(t<e){var n=e;e=t,t=n}return r*(t-e)+e},i.default.prototype.randomGaussian=function(e){var t,r,n,i,o=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1;if(this._gaussian_previous)t=s,this._gaussian_previous=!1;else{for(;1<=(i=(r=this.random(2)-1)*r+(n=this.random(2)-1)*n););t=r*(i=Math.sqrt(-2*Math.log(i)/i)),s=n*i,this._gaussian_previous=!0}return t*o+(e||0)};var l=i.default;r.default=l},{"../core/main":36}],71:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype._angleMode=a.RADIANS,o.default.prototype.acos=function(e){return this._fromRadians(Math.acos(e))},o.default.prototype.asin=function(e){return this._fromRadians(Math.asin(e))},o.default.prototype.atan=function(e){return this._fromRadians(Math.atan(e))},o.default.prototype.atan2=function(e,t){return this._fromRadians(Math.atan2(e,t))},o.default.prototype.cos=function(e){return Math.cos(this._toRadians(e))},o.default.prototype.sin=function(e){return Math.sin(this._toRadians(e))},o.default.prototype.tan=function(e){return Math.tan(this._toRadians(e))},o.default.prototype.degrees=function(e){return e*a.RAD_TO_DEG},o.default.prototype.radians=function(e){return e*a.DEG_TO_RAD},o.default.prototype.angleMode=function(e){e!==a.DEGREES&&e!==a.RADIANS||(this._angleMode=e)},o.default.prototype._toRadians=function(e){return this._angleMode===a.DEGREES?e*a.DEG_TO_RAD:e},o.default.prototype._toDegrees=function(e){return this._angleMode===a.RADIANS?e*a.RAD_TO_DEG:e},o.default.prototype._fromRadians=function(e){return this._angleMode===a.DEGREES?e*a.RAD_TO_DEG:e};var l=o.default;r.default=l},{"../core/constants":26,"../core/main":36}],72:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.textAlign=function(e,t){var r;return i.default._validateParameters("textAlign",arguments),(r=this._renderer).textAlign.apply(r,arguments)},i.default.prototype.textLeading=function(e){var t;return i.default._validateParameters("textLeading",arguments),(t=this._renderer).textLeading.apply(t,arguments)},i.default.prototype.textSize=function(e){var t;return i.default._validateParameters("textSize",arguments),(t=this._renderer).textSize.apply(t,arguments)},i.default.prototype.textStyle=function(e){var t;return i.default._validateParameters("textStyle",arguments),(t=this._renderer).textStyle.apply(t,arguments)},i.default.prototype.textWidth=function(){for(var e,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return r[0]+="",i.default._validateParameters("textWidth",r),0===r[0].length?0:(e=this._renderer).textWidth.apply(e,r)},i.default.prototype.textAscent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i.default._validateParameters("textAscent",t),this._renderer.textAscent()},i.default.prototype.textDescent=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return i.default._validateParameters("textDescent",t),this._renderer.textDescent()},i.default.prototype._updateTextMetrics=function(){return this._renderer._updateTextMetrics()};var o=i.default;r.default=o},{"../core/main":36}],73:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=u(e("../core/constants")),s=u(e("opentype.js"));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function u(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),o.default.prototype.loadFont=function(e,t,r){o.default._validateParameters("loadFont",arguments);var n=new o.default.Font(this),i=this;return s.load(e,(function(a,s){if(a)return o.default._friendlyFileLoadError(4,e),void 0!==r?r(a):void console.error(a,e);n.font=s,void 0!==t&&t(n),i._decrementPreload();var l,u,c=e.split("\\").pop().split("/").pop(),h=c.lastIndexOf("."),f=h<1?null:c.substr(h+1);["ttf","otf","woff","woff2"].includes(f)&&(l=c.substr(0,h),(u=document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(l,";\nsrc: url(").concat(e,");\n}\n"))),document.head.appendChild(u))})),n},o.default.prototype.text=function(e,t,r,n,i){var a;return o.default._validateParameters("text",arguments),this._renderer._doFill||this._renderer._doStroke?(a=this._renderer).text.apply(a,arguments):this},o.default.prototype.textFont=function(e,t){if(o.default._validateParameters("textFont",arguments),arguments.length){if(!e)throw new Error("null font passed to textFont");return this._renderer._setProperty("_textFont",e),t&&(this._renderer._setProperty("_textSize",t),this._renderer._setProperty("_textLeading",t*a._DEFAULT_LEADMULT)),this._renderer._applyTextProperties()}return this._renderer._textFont};var c=o.default;r.default=c},{"../core/constants":26,"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36,"opentype.js":12}],74:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n},o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==s(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var o=n?Object.getOwnPropertyDescriptor(e,i):null;o&&(o.get||o.set)?Object.defineProperty(r,i,o):r[i]=e[i]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var r=function(e,t){if("object"!==s(e))e=t;else for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e}(t,{sampleFactor:.1,simplifyThreshold:0}),n=m(e,0,1),i=n/(n*r.sampleFactor),o=[],a=0;a<n;a+=i)o.push(m(e,a));return r.simplifyThreshold&&function(e){for(var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,r=e.length-1;3<e.length&&0<=r;--r)f(h(e,r-1),h(e,r),h(e,r+1),t)&&e.splice(r%e.length,1)}(o,r.simplifyThreshold),o}function u(e){for(var t,r=[],n=0;n<e.length;n++)"M"===e[n].type&&(t&&r.push(t),t=[]),t.push(c(e[n]));return r.push(t),r}function c(e){var t=[e.type];return"M"===e.type||"L"===e.type?t.push(e.x,e.y):"C"===e.type?t.push(e.x1,e.y1,e.x2,e.y2,e.x,e.y):"Q"===e.type&&t.push(e.x1,e.y1,e.x,e.y),t}function h(e,t){var r=e.length;return e[t<0?t%r+r:t%r]}function f(e,t,r,n){if(!n)return 0==(i=e,a=r,((o=t)[0]-i[0])*(a[1]-i[1])-(a[0]-i[0])*(o[1]-i[1]));var i,o,a;void 0===f.tmpPoint1&&(f.tmpPoint1=[],f.tmpPoint2=[]);var s=f.tmpPoint1,l=f.tmpPoint2;s.x=t.x-e.x,s.y=t.y-e.y,l.x=r.x-t.x,l.y=r.y-t.y;var u=s.x*l.x+s.y*l.y,c=Math.sqrt(s.x*s.x+s.y*s.y),h=Math.sqrt(l.x*l.x+l.y*l.y);return Math.acos(u/(c*h))<n}function d(e,t,r,n,i,o,a,s,l){var u=1-l,c=Math.pow(u,3),h=Math.pow(u,2),f=l*l,d=f*l,p=c*e+3*h*l*r+3*u*l*l*i+d*a,m=c*t+3*h*l*n+3*u*l*l*o+d*s,v=e+2*l*(r-e)+f*(i-2*r+e),g=t+2*l*(n-t)+f*(o-2*n+t),y=r+2*l*(i-r)+f*(a-2*i+r),b=n+2*l*(o-n)+f*(s-2*o+n),_=u*e+l*r,w=u*t+l*n,x=u*i+l*a,S=u*o+l*s,E=90-180*Math.atan2(v-y,g-b)/Math.PI;return(y<v||g<b)&&(E+=180),{x:p,y:m,m:{x:v,y:g},n:{x:y,y:b},start:{x:_,y:w},end:{x,y:S},alpha:E}}function p(e,t,r,n,i,o,a,s,l){return null==l?_(e,t,r,n,i,o,a,s):d(e,t,r,n,i,o,a,s,function(e,t,r,n,i,o,a,s,l){if(!(l<0||_(e,t,r,n,i,o,a,s)<l)){var u,c=.5,h=1-c;for(u=_(e,t,r,n,i,o,a,s,h);.01<Math.abs(u-l);)u=_(e,t,r,n,i,o,a,s,h+=(u<l?1:-1)*(c/=2));return h}}(e,t,r,n,i,o,a,s,l))}function m(e,t,r){for(var n,i,o,a,s,l=0,u=0,c=(e=function(e,t){function r(e,t,r){var n,i;if(!e)return["C",t.x,t.y,t.x,t.y,t.x,t.y];switch(e[0]in{T:1,Q:1}||(t.qx=t.qy=null),e[0]){case"M":t.X=e[1],t.Y=e[2];break;case"A":e=["C"].concat(function e(t,r,n,i,o,a,s,l,u,c){var h,f,d,p,m,v=Math.PI,g=120*v/180,y=v/180*(+o||0),b=[],_=function(e,t,r){return{x:e*Math.cos(r)-t*Math.sin(r),y:e*Math.sin(r)+t*Math.cos(r)}};if(c)h=c[0],f=c[1],d=c[2],p=c[3];else{t=(m=_(t,r,-y)).x,r=m.y;var w=(t-(l=(m=_(l,u,-y)).x))/2,x=(r-(u=m.y))/2,S=w*w/(n*n)+x*x/(i*i);1<S&&(n*=S=Math.sqrt(S),i*=S);var E=n*n,M=i*i,T=(a===s?-1:1)*Math.sqrt(Math.abs((E*M-E*x*x-M*w*w)/(E*x*x+M*w*w)));d=T*n*x/i+(t+l)/2,p=T*-i*w/n+(r+u)/2,h=Math.asin(((r-p)/i).toFixed(9)),f=Math.asin(((u-p)/i).toFixed(9)),(h=t<d?v-h:h)<0&&(h=2*v+h),(f=l<d?v-f:f)<0&&(f=2*v+f),s&&f<h&&(h-=2*v),!s&&h<f&&(f-=2*v)}var C=f-h;if(Math.abs(C)>g){var L=f,O=l,P=u;f=h+g*(s&&h<f?1:-1),b=e(l=d+n*Math.cos(f),u=p+i*Math.sin(f),n,i,o,0,s,O,P,[f,L,d,p])}C=f-h;var A=Math.cos(h),D=Math.sin(h),k=Math.cos(f),R=Math.sin(f),I=Math.tan(C/4),U=4/3*n*I,N=4/3*i*I,B=[t,r],F=[t+U*D,r-N*A],G=[l+U*R,u-N*k],j=[l,u];if(F[0]=2*B[0]-F[0],F[1]=2*B[1]-F[1],c)return[F,G,j].concat(b);for(var V=[],z=0,H=(b=[F,G,j].concat(b).join().split(",")).length;z<H;z++)V[z]=z%2?_(b[z-1],b[z],y).y:_(b[z],b[z+1],y).x;return V}.apply(0,[t.x,t.y].concat(e.slice(1))));break;case"S":i="C"===r||"S"===r?(n=2*t.x-t.bx,2*t.y-t.by):(n=t.x,t.y),e=["C",n,i].concat(e.slice(1));break;case"T":"Q"===r||"T"===r?(t.qx=2*t.x-t.qx,t.qy=2*t.y-t.qy):(t.qx=t.x,t.qy=t.y),e=["C"].concat(b(t.x,t.y,t.qx,t.qy,e[1],e[2]));break;case"Q":t.qx=e[1],t.qy=e[2],e=["C"].concat(b(t.x,t.y,e[1],e[2],e[3],e[4]));break;case"L":e=["C"].concat(y(t.x,t.y,e[1],e[2]));break;case"H":e=["C"].concat(y(t.x,t.y,e[1],t.y));break;case"V":e=["C"].concat(y(t.x,t.y,t.x,e[1]));break;case"Z":e=["C"].concat(y(t.x,t.y,t.X,t.Y))}return e}function n(e,t){if(7<e[t].length){e[t].shift();for(var r=e[t];r.length;)c[t]="A",s&&(h[t]="A"),e.splice(t++,0,["C"].concat(r.splice(0,6)));e.splice(t,1),o=Math.max(a.length,s&&s.length||0)}}function i(e,t,r,n,i){e&&t&&"M"===e[i][0]&&"M"!==t[i][0]&&(t.splice(i,0,["M",n.x,n.y]),r.bx=0,r.by=0,r.x=e[i][1],r.y=e[i][2],o=Math.max(a.length,s&&s.length||0))}var o,a=v(e),s=t,l={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},u={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},c=[],h=[],f="",d="";o=Math.max(a.length,s&&s.length||0);for(var p=0;p<o;p++){a[p]&&(f=a[p][0]),"C"!==f&&(c[p]=f,p&&(d=c[p-1])),a[p]=r(a[p],l,d),"A"!==c[p]&&"C"===f&&(c[p]="C"),n(a,p),s&&(s[p]&&(f=s[p][0]),"C"!==f&&(h[p]=f,p&&(d=h[p-1])),s[p]=r(s[p],u,d),"A"!==h[p]&&"C"===f&&(h[p]="C"),n(s,p)),i(a,s,l,u,p),i(s,a,u,l,p);var m=a[p],g=s&&s[p],_=m.length,w=s&&g.length;l.x=m[_-2],l.y=m[_-1],l.bx=parseFloat(m[_-4])||l.x,l.by=parseFloat(m[_-3])||l.y,u.bx=s&&(parseFloat(g[w-4])||u.x),u.by=s&&(parseFloat(g[w-3])||u.y),u.x=s&&g[w-2],u.y=s&&g[w-1]}return s?[a,s]:a}(e)).length;u<c;u++){if("M"===(o=e[u])[0])n=+o[1],i=+o[2];else{if(t<l+(a=p(n,i,o[1],o[2],o[3],o[4],o[5],o[6]))&&!r)return{x:(s=p(n,i,o[1],o[2],o[3],o[4],o[5],o[6],t-l)).x,y:s.y,alpha:s.alpha};l+=a,n=+o[5],i=+o[6]}o.shift()}return(s=r?l:d(n,i,o[0],o[1],o[2],o[3],o[4],o[5],1)).alpha&&(s={x:s.x,y:s.y,alpha:s.alpha}),s}function v(e){var t,r=[],n=0,i=0,o=0,a=0,s=0;if(!e)return r;"M"===e[0][0]&&(o=n=+e[0][1],a=i=+e[0][2],s++,r[0]=["M",n,i]);for(var l,u,c=3===e.length&&"M"===e[0][0]&&"R"===e[1][0].toUpperCase()&&"Z"===e[2][0].toUpperCase(),h=s,f=e.length;h<f;h++){if(r.push(l=[]),(u=e[h])[0]!==String.prototype.toUpperCase.call(u[0]))switch(l[0]=String.prototype.toUpperCase.call(u[0]),l[0]){case"A":l[1]=u[1],l[2]=u[2],l[3]=u[3],l[4]=u[4],l[5]=u[5],l[6]=+(u[6]+n),l[7]=+(u[7]+i);break;case"V":l[1]=+u[1]+i;break;case"H":l[1]=+u[1]+n;break;case"R":for(var d=2,p=(t=[n,i].concat(u.slice(1))).length;d<p;d++)t[d]=+t[d]+n,t[++d]=+t[d]+i;r.pop(),r=r.concat(g(t,c));break;case"M":o=+u[1]+n,a=+u[2]+i;break;default:for(var m=1,v=u.length;m<v;m++)l[m]=+u[m]+(m%2?n:i)}else if("R"===u[0])t=[n,i].concat(u.slice(1)),r.pop(),r=r.concat(g(t,c)),l=["R"].concat(u.slice(-2));else for(var y=0,b=u.length;y<b;y++)l[y]=u[y];switch(l[0]){case"Z":n=o,i=a;break;case"H":n=l[1];break;case"V":i=l[1];break;case"M":o=l[l.length-2],a=l[l.length-1];break;default:n=l[l.length-2],i=l[l.length-1]}}return r}function g(e,t){for(var r=[],n=0,i=e.length;n<i-2*!t;n+=2){var o=[{x:+e[n-2],y:+e[n-1]},{x:+e[n],y:+e[n+1]},{x:+e[n+2],y:+e[n+3]},{x:+e[n+4],y:+e[n+5]}];t?n?i-4===n?o[3]={x:+e[0],y:+e[1]}:i-2===n&&(o[2]={x:+e[0],y:+e[1]},o[3]={x:+e[2],y:+e[3]}):o[0]={x:+e[i-2],y:+e[i-1]}:i-4===n?o[3]=o[2]:n||(o[0]={x:+e[n],y:+e[n+1]}),r.push(["C",(-o[0].x+6*o[1].x+o[2].x)/6,(-o[0].y+6*o[1].y+o[2].y)/6,(o[1].x+6*o[2].x-o[3].x)/6,(o[1].y+6*o[2].y-o[3].y)/6,o[2].x,o[2].y])}return r}function y(e,t,r,n){return[e,t,r,n,r,n]}function b(e,t,r,n,i,o){return[1/3*e+2/3*r,1/3*t+2/3*n,1/3*i+2/3*r,1/3*o+2/3*n,i,o]}function _(e,t,r,n,i,o,a,s,l){null==l&&(l=1);for(var u=(l=1<l?1:l<0?0:l)/2,c=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],h=0,f=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0;d<12;d++){var p=u*c[d]+u,m=w(p,e,r,i,a),v=w(p,t,n,o,s),g=m*m+v*v;h+=f[d]*Math.sqrt(g)}return u*h}function w(e,t,r,n,i){return e*(e*(-3*t+9*r-9*n+3*i)+6*t-12*r+6*n)-3*t+3*r}i.default.Font=function(e){this.parent=e,this.cache={},this.font=void 0},i.default.Font.prototype.textBounds=function(e){var t,r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,i=3<arguments.length?arguments[3]:void 0,a=4<arguments.length?arguments[4]:void 0,s=a&&a.renderer&&a.renderer._pInst||this.parent,l=s._renderer.drawingContext;if(l.textAlign||o.LEFT,l.textBaseline||o.BASELINE,i=i||s._renderer._textSize,!t){var u,c,h=[],f=[],d=[];d[0]=[];var p=[],m=this._scale(i),v=s._renderer.textLeading(),g=0;this.font.forEachGlyph(e,r,n,i,a,(function(e,t,r,n){var i=e.getMetrics();0===e.index||10===e.index?d[g+=1]=[]:(d[g].push(t+i.xMin*m),d[g].push(t+i.xMax*m),p.push(r+g*v+-i.yMin*m),p.push(r+g*v+-i.yMax*m))})),0<d[g].length&&(h[g]=Math.min.apply(null,d[g]),f[g]=Math.max.apply(null,d[g]));for(var y=0,b=0;b<=g;b++){h[b]=Math.min.apply(null,d[b]),f[b]=Math.max.apply(null,d[b]);var _=f[b]-h[b];y<_&&(y=_)}var w=Math.min.apply(null,h);t={x:w,y:u=Math.min.apply(null,p),h:Math.max.apply(null,p)-u,w:y,advance:w-r},c=this._handleAlignment(s._renderer,e,t.x,t.y,t.w+t.advance),t.x=c.x,t.y=c.y}return t},i.default.Font.prototype.textToPoints=function(e,t,r,n,i){var o,a=0,s=[],c=this._getGlyphs(e);n=n||this.parent._renderer._textSize;for(var h=0;h<c.length;h++){if(!(c[o=h].name&&"space"===c[o].name||e.length===c.length&&" "===e[o]||c[o].index&&3===c[o].index))for(var f=u(c[h].getPath(t,r,n).commands),d=0;d<f.length;d++)for(var p=l(f[d],i),m=0;m<p.length;m++)p[m].x+=a,s.push(p[m]);a+=c[h].advanceWidth*this._scale(n)}return s},i.default.Font.prototype._getGlyphs=function(e){return this.font.stringToGlyphs(e)},i.default.Font.prototype._getPath=function(e,t,r,n){var i=(n&&n.renderer&&n.renderer._pInst||this.parent)._renderer,o=this._handleAlignment(i,e,t,r);return this.font.getPath(e,o.x,o.y,i._textSize,n)},i.default.Font.prototype._getPathData=function(e,t,r,n){var i=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,n):"object"===s(t)&&(n=t),n&&"number"==typeof n.decimals&&(i=n.decimals),e.toPathData(i)},i.default.Font.prototype._getSVG=function(e,t,r,n){var i=3;return"string"==typeof e&&2<arguments.length?e=this._getPath(e,t,r,n):"object"===s(t)&&(n=t),n&&("number"==typeof n.decimals&&(i=n.decimals),"number"==typeof n.strokeWidth&&(e.strokeWidth=n.strokeWidth),void 0!==n.fill&&(e.fill=n.fill),void 0!==n.stroke&&(e.stroke=n.stroke)),e.toSVG(i)},i.default.Font.prototype._renderPath=function(e,t,r,n){var i,a=n&&n.renderer||this.parent._renderer,l=a.drawingContext;i="object"===s(e)&&e.commands?e.commands:this._getPath(e,t,r,n).commands,l.beginPath();var u=!0,c=!1,h=void 0;try{for(var f,d=i[Symbol.iterator]();!(u=(f=d.next()).done);u=!0){var p=f.value;"M"===p.type?l.moveTo(p.x,p.y):"L"===p.type?l.lineTo(p.x,p.y):"C"===p.type?l.bezierCurveTo(p.x1,p.y1,p.x2,p.y2,p.x,p.y):"Q"===p.type?l.quadraticCurveTo(p.x1,p.y1,p.x,p.y):"Z"===p.type&&l.closePath()}}catch(e){c=!0,h=e}finally{try{u||null==d.return||d.return()}finally{if(c)throw h}}return a._doStroke&&a._strokeSet&&l.stroke(),a._doFill&&(a._fillSet||a._setFill(o._DEFAULT_TEXT_FILL),l.fill()),this},i.default.Font.prototype._textWidth=function(e,t){return this.font.getAdvanceWidth(e,t)},i.default.Font.prototype._textAscent=function(e){return this.font.ascender*this._scale(e)},i.default.Font.prototype._textDescent=function(e){return-this.font.descender*this._scale(e)},i.default.Font.prototype._scale=function(e){return 1/this.font.unitsPerEm*(e||this.parent._renderer._textSize)},i.default.Font.prototype._handleAlignment=function(e,t,r,n,i){var a=e._textSize;switch(void 0===i&&(i=this._textWidth(t,a)),e._textAlign){case o.CENTER:r-=i/2;break;case o.RIGHT:r-=i}switch(e._textBaseline){case o.TOP:n+=this._textAscent(a);break;case o.CENTER:n+=this._textAscent(a)/2;break;case o.BOTTOM:n-=this._textDescent(a)}return{x:r,y:n}};var x=i.default;r.default=x},{"../core/constants":26,"../core/main":36}],75:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.append=function(e,t){return e.push(t),e},i.default.prototype.arrayCopy=function(e,t,r,n,i){var o,a;e=void 0!==i?(a=Math.min(i,e.length),o=n,e.slice(t,a+t)):(a=void 0!==r?(a=r,Math.min(a,e.length)):e.length,o=0,r=t,e.slice(0,a)),Array.prototype.splice.apply(r,[o,a].concat(e))},i.default.prototype.concat=function(e,t){return e.concat(t)},i.default.prototype.reverse=function(e){return e.reverse()},i.default.prototype.shorten=function(e){return e.pop(),e},i.default.prototype.shuffle=function(e,t){for(var r,n,i=ArrayBuffer&&ArrayBuffer.isView&&ArrayBuffer.isView(e),o=(e=t||i?e:e.slice()).length;1<o;)r=this.random(0,1)*o|0,n=e[--o],e[o]=e[r],e[r]=n;return e},i.default.prototype.sort=function(e,t){var r=t?e.slice(0,Math.min(t,e.length)):e,n=t?e.slice(Math.min(t,e.length)):[];return(r="string"==typeof r[0]?r.sort():r.sort((function(e,t){return e-t}))).concat(n)},i.default.prototype.splice=function(e,t,r){return Array.prototype.splice.apply(e,[r,0].concat(t)),e},i.default.prototype.subset=function(e,t,r){return void 0!==r?e.slice(t,t+r):e.slice(t,e.length)};var o=i.default;r.default=o},{"../core/main":36}],76:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.float=function(e){return e instanceof Array?e.map(parseFloat):parseFloat(e)},i.default.prototype.int=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:10;return e===1/0||"Infinity"===e?1/0:e===-1/0||"-Infinity"===e?-1/0:"string"==typeof e?parseInt(e,t):"number"==typeof e?0|e:"boolean"==typeof e?e?1:0:e instanceof Array?e.map((function(e){return i.default.prototype.int(e,t)})):void 0},i.default.prototype.str=function(e){return e instanceof Array?e.map(i.default.prototype.str):String(e)},i.default.prototype.boolean=function(e){return"number"==typeof e?0!==e:"string"==typeof e?"true"===e.toLowerCase():"boolean"==typeof e?e:e instanceof Array?e.map(i.default.prototype.boolean):void 0},i.default.prototype.byte=function(e){var t=i.default.prototype.int(e,10);return"number"==typeof t?(t+128)%256-128:t instanceof Array?t.map(i.default.prototype.byte):void 0},i.default.prototype.char=function(e){return"number"!=typeof e||isNaN(e)?e instanceof Array?e.map(i.default.prototype.char):"string"==typeof e?i.default.prototype.char(parseInt(e,10)):void 0:String.fromCharCode(e)},i.default.prototype.unchar=function(e){return"string"==typeof e&&1===e.length?e.charCodeAt(0):e instanceof Array?e.map(i.default.prototype.unchar):void 0},i.default.prototype.hex=function(e,t){if(t=null==t?t=8:t,e instanceof Array)return e.map((function(e){return i.default.prototype.hex(e,t)}));if(e===1/0||e===-1/0)return(e===1/0?"F":"0").repeat(t);if("number"==typeof e){e<0&&(e=4294967295+e+1);for(var r=Number(e).toString(16).toUpperCase();r.length<t;)r="0".concat(r);return r.length>=t&&(r=r.substring(r.length-t,r.length)),r}},i.default.prototype.unhex=function(e){return e instanceof Array?e.map(i.default.prototype.unhex):parseInt("0x".concat(e),16)};var o=i.default;r.default=o},{"../core/main":36}],77:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e,t,r){var n=e<0,i=n?e.toString().substring(1):e.toString(),o=i.indexOf("."),a=-1!==o?i.substring(0,o):i,s=-1!==o?i.substring(o+1):"",l=n?"-":"";if(void 0!==r){var u="";(-1!==o||0<r-s.length)&&(u="."),s.length>r&&(s=s.substring(0,r));for(var c=0;c<t-a.length;c++)l+="0";l+=a,l+=u,l+=s;for(var h=0;h<r-s.length;h++)l+="0";return l}for(var f=0;f<Math.max(t-a.length,0);f++)l+="0";return l+i}function a(e,t){var r=(e=e.toString()).indexOf("."),n=-1!==r?e.substring(r):"",i=-1!==r?e.substring(0,r):e;if(i=i.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","),0===t)n="";else if(void 0!==t)if(t>n.length)for(var o=t-(n+=-1===r?".":"").length+1,a=0;a<o;a++)n+="0";else n=n.substring(0,t+1);return i+n}function s(e){return 0<parseFloat(e)?"+".concat(e.toString()):e.toString()}function l(e){return 0<=parseFloat(e)?" ".concat(e.toString()):e.toString()}e("../core/friendly_errors/validate_params"),e("../core/friendly_errors/file_errors"),e("../core/friendly_errors/fes_core"),i.default.prototype.join=function(e,t){return i.default._validateParameters("join",arguments),e.join(t)},i.default.prototype.match=function(e,t){return i.default._validateParameters("match",arguments),e.match(t)},i.default.prototype.matchAll=function(e,t){i.default._validateParameters("matchAll",arguments);for(var r=new RegExp(t,"g"),n=r.exec(e),o=[];null!==n;)o.push(n),n=r.exec(e);return o},i.default.prototype.nf=function(e,t,r){return i.default._validateParameters("nf",arguments),e instanceof Array?e.map((function(e){return o(e,t,r)})):"[object Arguments]"===Object.prototype.toString.call(e)?3===e.length?this.nf(e[0],e[1],e[2]):2===e.length?this.nf(e[0],e[1]):this.nf(e[0]):o(e,t,r)},i.default.prototype.nfc=function(e,t){return i.default._validateParameters("nfc",arguments),e instanceof Array?e.map((function(e){return a(e,t)})):a(e,t)},i.default.prototype.nfp=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];i.default._validateParameters("nfp",t);var n=i.default.prototype.nf.apply(this,t);return n instanceof Array?n.map(s):s(n)},i.default.prototype.nfs=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];i.default._validateParameters("nfs",t);var n=i.default.prototype.nf.apply(this,t);return n instanceof Array?n.map(l):l(n)},i.default.prototype.split=function(e,t){return i.default._validateParameters("split",arguments),e.split(t)},i.default.prototype.splitTokens=function(e,t){var r;if(i.default._validateParameters("splitTokens",arguments),void 0!==t){var n=t,o=/\]/g.exec(n),a=/\[/g.exec(n);r=a&&o?(n=n.slice(0,o.index)+n.slice(o.index+1),a=/\[/g.exec(n),n=n.slice(0,a.index)+n.slice(a.index+1),new RegExp("[\\[".concat(n,"\\]]"),"g")):o?(n=n.slice(0,o.index)+n.slice(o.index+1),new RegExp("[".concat(n,"\\]]"),"g")):a?(n=n.slice(0,a.index)+n.slice(a.index+1),new RegExp("[".concat(n,"\\[]"),"g")):new RegExp("[".concat(n,"]"),"g")}else r=/\s/g;return e.split(r).filter((function(e){return e}))},i.default.prototype.trim=function(e){return i.default._validateParameters("trim",arguments),e instanceof Array?e.map(this.trim):e.trim()};var u=i.default;r.default=u},{"../core/friendly_errors/fes_core":28,"../core/friendly_errors/file_errors":29,"../core/friendly_errors/validate_params":31,"../core/main":36}],78:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.day=function(){return(new Date).getDate()},i.default.prototype.hour=function(){return(new Date).getHours()},i.default.prototype.minute=function(){return(new Date).getMinutes()},i.default.prototype.millis=function(){return-1===this._millisStart?0:window.performance.now()-this._millisStart},i.default.prototype.month=function(){return(new Date).getMonth()+1},i.default.prototype.second=function(){return(new Date).getSeconds()},i.default.prototype.year=function(){return(new Date).getFullYear()};var o=i.default;r.default=o},{"../core/main":36}],79:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i};e("./p5.Geometry");var a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e,t,r,n,i,a,s){e=e<=0?1:e,t=t<0?0:t,r=r<=0?e:r,n=n<3?3:n;var l,u,c,h=(a=void 0===a||a)?-2:0,f=(i=i<1?1:i)+((s=void 0===s?0!==t:s)?2:0),d=Math.atan2(e-t,r),p=Math.sin(d),m=Math.cos(d);for(l=h;l<=f;++l){var v=l/i,g=r*v,y=void 0;for(y=l<0?(v=g=0,e):i<l?(g=r,v=1,t):e+(t-e)*v,-2!==l&&l!==i+2||(y=0),g-=r/2,u=0;u<n;++u){var b=u/(n-1),_=2*Math.PI*b,w=Math.sin(_),x=Math.cos(_);this.vertices.push(new o.default.Vector(w*y,g,x*y));var S;S=l<0?new o.default.Vector(0,-1,0):i<l&&t?new o.default.Vector(0,1,0):new o.default.Vector(w*m,p,x*m),this.vertexNormals.push(S),this.uvs.push(b,v)}}var E=0;if(a){for(c=0;c<n;++c){var M=(c+1)%n;this.faces.push([E+c,E+n+M,E+n+c])}E+=2*n}for(l=0;l<i;++l){for(u=0;u<n;++u){var T=(u+1)%n;this.faces.push([E+u,E+T,E+n+T]),this.faces.push([E+u,E+n+T,E+n+u])}E+=n}if(s)for(E+=n,u=0;u<n;++u)this.faces.push([E+u,E+(u+1)%n,E+n])}o.default.prototype.plane=function(e,t,r,n){this._assert3d("plane"),o.default._validateParameters("plane",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=1),void 0===n&&(n=1);var i="plane|".concat(r,"|").concat(n);if(!this._renderer.geometryInHash(i)){var a=new o.default.Geometry(r,n,(function(){for(var e,t,r,n=0;n<=this.detailY;n++){t=n/this.detailY;for(var i=0;i<=this.detailX;i++)e=i/this.detailX,r=new o.default.Vector(e-.5,t-.5,0),this.vertices.push(r),this.uvs.push(e,t)}}));a.computeFaces().computeNormals(),r<=1&&n<=1?a._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"),this._renderer.createBuffers(i,a)}return this._renderer.drawBuffersScaled(i,e,t,1),this},o.default.prototype.box=function(e,t,r,n,i){this._assert3d("box"),o.default._validateParameters("box",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=t);var a=this._renderer.attributes&&this._renderer.attributes.perPixelLighting;void 0===n&&(n=a?1:4),void 0===i&&(i=a?1:4);var s="box|".concat(n,"|").concat(i);if(!this._renderer.geometryInHash(s)){var l=new o.default.Geometry(n,i,(function(){var e=[[0,4,2,6],[1,3,5,7],[0,1,4,5],[2,6,3,7],[0,2,1,3],[4,5,6,7]];this.strokeIndices=[[0,1],[1,3],[3,2],[6,7],[8,9],[9,11],[14,15],[16,17],[17,19],[18,19],[20,21],[22,23]];for(var t=0;t<e.length;t++){for(var r=e[t],n=4*t,i=0;i<4;i++){var a=r[i],s=new o.default.Vector((2*(1&a)-1)/2,((2&a)-1)/2,((4&a)/2-1)/2);this.vertices.push(s),this.uvs.push(1&i,(2&i)/2)}this.faces.push([n,1+n,2+n]),this.faces.push([2+n,1+n,3+n])}}));l.computeNormals(),n<=4&&i<=4?l._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"),this._renderer.createBuffers(s,l)}return this._renderer.drawBuffersScaled(s,e,t,r),this},o.default.prototype.sphere=function(e,t,r){return this._assert3d("sphere"),o.default._validateParameters("sphere",arguments),void 0===e&&(e=50),void 0===t&&(t=24),void 0===r&&(r=16),this.ellipsoid(e,e,e,t,r),this},o.default.prototype.cylinder=function(e,t,r,n,i,a){this._assert3d("cylinder"),o.default._validateParameters("cylinder",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===n&&(n=1),void 0===a&&(a=!0),void 0===i&&(i=!0);var s="cylinder|".concat(r,"|").concat(n,"|").concat(i,"|").concat(a);if(!this._renderer.geometryInHash(s)){var u=new o.default.Geometry(r,n);l.call(u,1,1,1,r,n,i,a),r<=24&&n<=16?u._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(s,u)}return this._renderer.drawBuffersScaled(s,e,t,e),this},o.default.prototype.cone=function(e,t,r,n,i){this._assert3d("cone"),o.default._validateParameters("cone",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=24),void 0===n&&(n=1),void 0===i&&(i=!0);var a="cone|".concat(r,"|").concat(n,"|").concat(i);if(!this._renderer.geometryInHash(a)){var s=new o.default.Geometry(r,n);l.call(s,1,0,1,r,n,i,!1),r<=24&&n<=16?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(a,s)}return this._renderer.drawBuffersScaled(a,e,t,e),this},o.default.prototype.ellipsoid=function(e,t,r,n,i){this._assert3d("ellipsoid"),o.default._validateParameters("ellipsoid",arguments),void 0===e&&(e=50),void 0===t&&(t=e),void 0===r&&(r=e),void 0===n&&(n=24),void 0===i&&(i=16);var a="ellipsoid|".concat(n,"|").concat(i);if(!this._renderer.geometryInHash(a)){var s=new o.default.Geometry(n,i,(function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=Math.PI*t-Math.PI/2,n=Math.cos(r),i=Math.sin(r),a=0;a<=this.detailX;a++){var s=a/this.detailX,l=2*Math.PI*s,u=Math.cos(l),c=Math.sin(l),h=new o.default.Vector(n*c,i,n*u);this.vertices.push(h),this.vertexNormals.push(h),this.uvs.push(s,t)}}));s.computeFaces(),n<=24&&i<=24?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"),this._renderer.createBuffers(a,s)}return this._renderer.drawBuffersScaled(a,e,t,r),this},o.default.prototype.torus=function(e,t,r,n){if(this._assert3d("torus"),o.default._validateParameters("torus",arguments),void 0===e)e=50;else if(!e)return;if(void 0===t)t=10;else if(!t)return;void 0===r&&(r=24),void 0===n&&(n=16);var i=(t/e).toPrecision(4),a="torus|".concat(i,"|").concat(r,"|").concat(n);if(!this._renderer.geometryInHash(a)){var s=new o.default.Geometry(r,n,(function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=2*Math.PI*t,n=Math.cos(r),a=Math.sin(r),s=1+i*n,l=0;l<=this.detailX;l++){var u=l/this.detailX,c=2*Math.PI*u,h=Math.cos(c),f=Math.sin(c),d=new o.default.Vector(s*h,s*f,i*a),p=new o.default.Vector(n*h,n*f,a);this.vertices.push(d),this.vertexNormals.push(p),this.uvs.push(u,t)}}));s.computeFaces(),r<=24&&n<=16?s._makeTriangleEdges()._edgesToVertices():this._renderer._doStroke&&console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"),this._renderer.createBuffers(a,s)}return this._renderer.drawBuffersScaled(a,e,e,e),this},o.default.RendererGL.prototype.point=function(e,t,r){void 0===r&&(r=0);var n=[];return n.push(new o.default.Vector(e,t,r)),this._drawPoints(n,this.immediateMode.buffers.point),this},o.default.RendererGL.prototype.triangle=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5];if(!this.geometryInHash("tri")){var l=new o.default.Geometry(1,1,(function(){var e=[];e.push(new o.default.Vector(0,0,0)),e.push(new o.default.Vector(0,1,0)),e.push(new o.default.Vector(1,0,0)),this.strokeIndices=[[0,1],[1,2],[2,0]],this.vertices=e,this.faces=[[0,1,2]],this.uvs=[0,0,0,1,1,1]}));l._makeTriangleEdges()._edgesToVertices(),l.computeNormals(),this.createBuffers("tri",l)}var u=this.uMVMatrix.copy();try{var c=new o.default.Matrix([n-t,i-r,0,0,a-t,s-r,0,0,0,0,1,0,t,r,0,1]).mult(this.uMVMatrix);this.uMVMatrix=c,this.drawBuffers("tri")}finally{this.uMVMatrix=u}return this},o.default.RendererGL.prototype.ellipse=function(e){this.arc(e[0],e[1],e[2],e[3],0,a.TWO_PI,a.OPEN,e[4])},o.default.RendererGL.prototype.arc=function(e){var t,r=e,n=arguments[1],i=arguments[2],s=arguments[3],l=arguments[4],u=arguments[5],c=arguments[6],h=arguments[7]||25;if(t=Math.abs(u-l)>=a.TWO_PI?"".concat("ellipse","|").concat(h,"|"):"".concat("arc","|").concat(l,"|").concat(u,"|").concat(c,"|").concat(h,"|"),!this.geometryInHash(t)){var f=new o.default.Geometry(h,1,(function(){if(this.strokeIndices=[],l.toFixed(10)!==u.toFixed(10)){c!==a.PIE&&void 0!==c||(this.vertices.push(new o.default.Vector(.5,.5,0)),this.uvs.push([.5,.5]));for(var e=0;e<=h;e++){var t=e/h*(u-l)+l,r=.5+Math.cos(t)/2,n=.5+Math.sin(t)/2;this.vertices.push(new o.default.Vector(r,n,0)),this.uvs.push([r,n]),e<h-1&&(this.faces.push([0,e+1,e+2]),this.strokeIndices.push([e+1,e+2]))}switch(c){case a.PIE:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case a.CHORD:this.strokeIndices.push([0,1]),this.strokeIndices.push([0,this.vertices.length-1]);break;case a.OPEN:this.strokeIndices.push([0,1]);break;default:this.faces.push([0,this.vertices.length-2,this.vertices.length-1]),this.strokeIndices.push([this.vertices.length-2,this.vertices.length-1])}}}));f.computeNormals(),h<=50?f._makeTriangleEdges()._edgesToVertices(f):this._renderer._doStroke&&console.log("Cannot stroke ${shape} with more than 50 detail"),this.createBuffers(t,f)}var d=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(i,s,1),this.drawBuffers(t)}finally{this.uMVMatrix=d}return this},o.default.RendererGL.prototype.rect=function(e){var t=this._pInst._glAttributes.perPixelLighting,r=e[0],n=e[1],i=e[2],a=e[3],s=e[4]||(t?1:24),l=e[5]||(t?1:16),u="rect|".concat(s,"|").concat(l);if(!this.geometryInHash(u)){var c=new o.default.Geometry(s,l,(function(){for(var e=0;e<=this.detailY;e++)for(var t=e/this.detailY,r=0;r<=this.detailX;r++){var n=r/this.detailX,i=new o.default.Vector(n,t,0);this.vertices.push(i),this.uvs.push(n,t)}0<s&&0<l&&(this.strokeIndices=[[0,s],[s,(s+1)*(l+1)-1],[(s+1)*(l+1)-1,(s+1)*l],[(s+1)*l,0]])}));c.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(),this.createBuffers(u,c)}var h=this.uMVMatrix.copy();try{this.uMVMatrix.translate([r,n,0]),this.uMVMatrix.scale(i,a,1),this.drawBuffers(u)}finally{this.uMVMatrix=h}return this},o.default.RendererGL.prototype.quad=function(e,t,r,n,i,a,s,l,u,c,h,f){var d="quad|".concat(e,"|").concat(t,"|").concat(r,"|").concat(n,"|").concat(i,"|").concat(a,"|").concat(s,"|").concat(l,"|").concat(u,"|").concat(c,"|").concat(h,"|").concat(f);if(!this.geometryInHash(d)){var p=new o.default.Geometry(2,2,(function(){this.vertices.push(new o.default.Vector(e,t,r)),this.vertices.push(new o.default.Vector(n,i,a)),this.vertices.push(new o.default.Vector(s,l,u)),this.vertices.push(new o.default.Vector(c,h,f)),this.uvs.push(0,0,1,0,1,1,0,1),this.strokeIndices=[[0,1],[1,2],[2,3],[3,0]]}));p.computeNormals()._makeTriangleEdges()._edgesToVertices(),p.faces=[[0,1,2],[2,3,0]],this.createBuffers(d,p)}return this.drawBuffers(d),this},o.default.RendererGL.prototype.bezier=function(e,t,r,n,i,o,a,s,l,u,c,h){8===arguments.length&&(c=s,u=a,s=o,a=i,i=n,n=r,r=o=l=h=0);var f=this._pInst._bezierDetail||20;this.beginShape();for(var d=0;d<=f;d++){var p=Math.pow(1-d/f,3),m=d/f*3*Math.pow(1-d/f,2),v=3*Math.pow(d/f,2)*(1-d/f),g=Math.pow(d/f,3);this.vertex(e*p+n*m+a*v+u*g,t*p+i*m+s*v+c*g,r*p+o*m+l*v+h*g)}return this.endShape(),this},o.default.RendererGL.prototype.curve=function(e,t,r,n,i,o,a,s,l,u,c,h){8===arguments.length&&(u=a,c=s,a=i,s=n,i=n=r,r=o=l=h=0);var f=this._pInst._curveDetail;this.beginShape();for(var d=0;d<=f;d++){var p=.5*Math.pow(d/f,3),m=.5*Math.pow(d/f,2),v=d/f*.5,g=p*(3*n-e-3*a+u)+m*(2*e-5*n+4*a-u)+v*(-e+a)+2*n*.5,y=p*(3*i-t-3*s+c)+m*(2*t-5*i+4*s-c)+v*(-t+s)+2*i*.5,b=p*(3*o-r-3*l+h)+m*(2*r-5*o+4*l-h)+v*(-r+l)+2*o*.5;this.vertex(g,y,b)}return this.endShape(),this},o.default.RendererGL.prototype.line=function(){return 6===arguments.length?(this.beginShape(a.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],arguments.length<=2?void 0:arguments[2]),this.vertex(arguments.length<=3?void 0:arguments[3],arguments.length<=4?void 0:arguments[4],arguments.length<=5?void 0:arguments[5]),this.endShape()):4===arguments.length&&(this.beginShape(a.LINES),this.vertex(arguments.length<=0?void 0:arguments[0],arguments.length<=1?void 0:arguments[1],0),this.vertex(arguments.length<=2?void 0:arguments[2],arguments.length<=3?void 0:arguments[3],0),this.endShape()),this},o.default.RendererGL.prototype.bezierVertex=function(){if(0===this.immediateMode._bezierVertex.length)throw Error("vertex() must be used once before calling bezierVertex()");var e,t,r,n,i,o=[],a=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var u=1/this._lutBezierDetail,c=0,h=1,f=0;c<1;){if(e=parseFloat(c.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(e),h.toFixed(6)===u.toFixed(6)){e=parseFloat(h.toFixed(6))+parseFloat(c.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(e);break}c+=u,h-=u,++f}}var d=this._lookUpTableBezier.length;if(6===l){for(this.isBezier=!0,o=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2],arguments.length<=4?void 0:arguments[4]],a=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3],arguments.length<=5?void 0:arguments[5]],i=0;i<d;i++)t=o[0]*this._lookUpTableBezier[i][0]+o[1]*this._lookUpTableBezier[i][1]+o[2]*this._lookUpTableBezier[i][2]+o[3]*this._lookUpTableBezier[i][3],r=a[0]*this._lookUpTableBezier[i][0]+a[1]*this._lookUpTableBezier[i][1]+a[2]*this._lookUpTableBezier[i][2]+a[3]*this._lookUpTableBezier[i][3],this.vertex(t,r);this.immediateMode._bezierVertex[0]=arguments.length<=4?void 0:arguments[4],this.immediateMode._bezierVertex[1]=arguments.length<=5?void 0:arguments[5]}else if(9===l){for(this.isBezier=!0,o=[this.immediateMode._bezierVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3],arguments.length<=6?void 0:arguments[6]],a=[this.immediateMode._bezierVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4],arguments.length<=7?void 0:arguments[7]],s=[this.immediateMode._bezierVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5],arguments.length<=8?void 0:arguments[8]],i=0;i<d;i++)t=o[0]*this._lookUpTableBezier[i][0]+o[1]*this._lookUpTableBezier[i][1]+o[2]*this._lookUpTableBezier[i][2]+o[3]*this._lookUpTableBezier[i][3],r=a[0]*this._lookUpTableBezier[i][0]+a[1]*this._lookUpTableBezier[i][1]+a[2]*this._lookUpTableBezier[i][2]+a[3]*this._lookUpTableBezier[i][3],n=s[0]*this._lookUpTableBezier[i][0]+s[1]*this._lookUpTableBezier[i][1]+s[2]*this._lookUpTableBezier[i][2]+s[3]*this._lookUpTableBezier[i][3],this.vertex(t,r,n);this.immediateMode._bezierVertex[0]=arguments.length<=6?void 0:arguments[6],this.immediateMode._bezierVertex[1]=arguments.length<=7?void 0:arguments[7],this.immediateMode._bezierVertex[2]=arguments.length<=8?void 0:arguments[8]}},o.default.RendererGL.prototype.quadraticVertex=function(){if(0===this.immediateMode._quadraticVertex.length)throw Error("vertex() must be used once before calling quadraticVertex()");var e,t,r,n,i,o=[],a=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableQuadratic.length||this._lutQuadraticDetail!==this._pInst._curveDetail){this._lookUpTableQuadratic=[],this._lutQuadraticDetail=this._pInst._curveDetail;for(var u=1/this._lutQuadraticDetail,c=0,h=1,f=0;c<1;){if(e=parseFloat(c.toFixed(6)),this._lookUpTableQuadratic[f]=this._quadraticCoefficients(e),h.toFixed(6)===u.toFixed(6)){e=parseFloat(h.toFixed(6))+parseFloat(c.toFixed(6)),++f,this._lookUpTableQuadratic[f]=this._quadraticCoefficients(e);break}c+=u,h-=u,++f}}var d=this._lookUpTableQuadratic.length;if(4===l){for(this.isQuadratic=!0,o=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=2?void 0:arguments[2]],a=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=3?void 0:arguments[3]],i=0;i<d;i++)t=o[0]*this._lookUpTableQuadratic[i][0]+o[1]*this._lookUpTableQuadratic[i][1]+o[2]*this._lookUpTableQuadratic[i][2],r=a[0]*this._lookUpTableQuadratic[i][0]+a[1]*this._lookUpTableQuadratic[i][1]+a[2]*this._lookUpTableQuadratic[i][2],this.vertex(t,r);this.immediateMode._quadraticVertex[0]=arguments.length<=2?void 0:arguments[2],this.immediateMode._quadraticVertex[1]=arguments.length<=3?void 0:arguments[3]}else if(6===l){for(this.isQuadratic=!0,o=[this.immediateMode._quadraticVertex[0],arguments.length<=0?void 0:arguments[0],arguments.length<=3?void 0:arguments[3]],a=[this.immediateMode._quadraticVertex[1],arguments.length<=1?void 0:arguments[1],arguments.length<=4?void 0:arguments[4]],s=[this.immediateMode._quadraticVertex[2],arguments.length<=2?void 0:arguments[2],arguments.length<=5?void 0:arguments[5]],i=0;i<d;i++)t=o[0]*this._lookUpTableQuadratic[i][0]+o[1]*this._lookUpTableQuadratic[i][1]+o[2]*this._lookUpTableQuadratic[i][2],r=a[0]*this._lookUpTableQuadratic[i][0]+a[1]*this._lookUpTableQuadratic[i][1]+a[2]*this._lookUpTableQuadratic[i][2],n=s[0]*this._lookUpTableQuadratic[i][0]+s[1]*this._lookUpTableQuadratic[i][1]+s[2]*this._lookUpTableQuadratic[i][2],this.vertex(t,r,n);this.immediateMode._quadraticVertex[0]=arguments.length<=3?void 0:arguments[3],this.immediateMode._quadraticVertex[1]=arguments.length<=4?void 0:arguments[4],this.immediateMode._quadraticVertex[2]=arguments.length<=5?void 0:arguments[5]}},o.default.RendererGL.prototype.curveVertex=function(){var e,t,r,n,i,o=[],a=[],s=[],l=arguments.length;if((e=0)===this._lookUpTableBezier.length||this._lutBezierDetail!==this._pInst._curveDetail){this._lookUpTableBezier=[],this._lutBezierDetail=this._pInst._curveDetail;for(var u=1/this._lutBezierDetail,c=0,h=1,f=0;c<1;){if(e=parseFloat(c.toFixed(6)),this._lookUpTableBezier[f]=this._bezierCoefficients(e),h.toFixed(6)===u.toFixed(6)){e=parseFloat(h.toFixed(6))+parseFloat(c.toFixed(6)),++f,this._lookUpTableBezier[f]=this._bezierCoefficients(e);break}c+=u,h-=u,++f}}var d=this._lookUpTableBezier.length;if(2===l){if(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),8===this.immediateMode._curveVertex.length){for(this.isCurve=!0,o=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[6]]),a=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[7]]),i=0;i<d;i++)t=o[0]*this._lookUpTableBezier[i][0]+o[1]*this._lookUpTableBezier[i][1]+o[2]*this._lookUpTableBezier[i][2]+o[3]*this._lookUpTableBezier[i][3],r=a[0]*this._lookUpTableBezier[i][0]+a[1]*this._lookUpTableBezier[i][1]+a[2]*this._lookUpTableBezier[i][2]+a[3]*this._lookUpTableBezier[i][3],this.vertex(t,r);for(i=0;i<l;i++)this.immediateMode._curveVertex.shift()}}else if(3===l&&(this.immediateMode._curveVertex.push(arguments.length<=0?void 0:arguments[0]),this.immediateMode._curveVertex.push(arguments.length<=1?void 0:arguments[1]),this.immediateMode._curveVertex.push(arguments.length<=2?void 0:arguments[2]),12===this.immediateMode._curveVertex.length)){for(this.isCurve=!0,o=this._bezierToCatmull([this.immediateMode._curveVertex[0],this.immediateMode._curveVertex[3],this.immediateMode._curveVertex[6],this.immediateMode._curveVertex[9]]),a=this._bezierToCatmull([this.immediateMode._curveVertex[1],this.immediateMode._curveVertex[4],this.immediateMode._curveVertex[7],this.immediateMode._curveVertex[10]]),s=this._bezierToCatmull([this.immediateMode._curveVertex[2],this.immediateMode._curveVertex[5],this.immediateMode._curveVertex[8],this.immediateMode._curveVertex[11]]),i=0;i<d;i++)t=o[0]*this._lookUpTableBezier[i][0]+o[1]*this._lookUpTableBezier[i][1]+o[2]*this._lookUpTableBezier[i][2]+o[3]*this._lookUpTableBezier[i][3],r=a[0]*this._lookUpTableBezier[i][0]+a[1]*this._lookUpTableBezier[i][1]+a[2]*this._lookUpTableBezier[i][2]+a[3]*this._lookUpTableBezier[i][3],n=s[0]*this._lookUpTableBezier[i][0]+s[1]*this._lookUpTableBezier[i][1]+s[2]*this._lookUpTableBezier[i][2]+s[3]*this._lookUpTableBezier[i][3],this.vertex(t,r,n);for(i=0;i<l;i++)this.immediateMode._curveVertex.shift()}},o.default.RendererGL.prototype.image=function(e,t,r,n,i,o,s,l,u){this._isErasing&&this.blendMode(this._cachedBlendMode),this._pInst.push(),this._pInst.noLights(),this._pInst.texture(e),this._pInst.textureMode(a.NORMAL);var c=0;t<=e.width&&(c=t/e.width);var h=1;t+n<=e.width&&(h=(t+n)/e.width);var f=0;r<=e.height&&(f=r/e.height);var d=1;r+i<=e.height&&(d=(r+i)/e.height),this.beginShape(),this.vertex(o,s,0,c,f),this.vertex(o+l,s,0,h,f),this.vertex(o+l,s+u,0,h,d),this.vertex(o,s+u,0,c,d),this.endShape(a.CLOSE),this._pInst.pop(),this._isErasing&&this.blendMode(a.REMOVE)};var u=o.default;r.default=u},{"../core/constants":26,"../core/main":36,"./p5.Geometry":85}],80:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.prototype.orbitControl=function(e,t,r){if(this._assert3d("orbitControl"),o.default._validateParameters("orbitControl",arguments),this.mouseX<this.width&&0<this.mouseX&&this.mouseY<this.height&&0<this.mouseY){var n=this._renderer._curCamera;void 0===e&&(e=1),void 0===t&&(t=e),void 0===r&&(r=.5),!0!==this.contextMenuDisabled&&(this.canvas.oncontextmenu=function(){return!1},this._setProperty("contextMenuDisabled",!0)),!0!==this.wheelDefaultDisabled&&(this.canvas.onwheel=function(){return!1},this._setProperty("wheelDefaultDisabled",!0));var i=this.height<this.width?this.height:this.width;if(this._mouseWheelDeltaY!==this._pmouseWheelDeltaY&&(0<this._mouseWheelDeltaY?this._renderer._curCamera._orbit(0,0,r*i):this._renderer._curCamera._orbit(0,0,-r*i)),this.mouseIsPressed)if(this.mouseButton===this.LEFT){var a=-e*(this.mouseX-this.pmouseX)/i,s=t*(this.mouseY-this.pmouseY)/i;this._renderer._curCamera._orbit(a,s,0)}else if(this.mouseButton===this.RIGHT){var l=n._getLocalAxes(),u=Math.sqrt(l.x[0]*l.x[0]+l.x[2]*l.x[2]);0!==u&&(l.x[0]/=u,l.x[2]/=u);var c=Math.sqrt(l.y[0]*l.y[0]+l.y[2]*l.y[2]);0!==c&&(l.y[0]/=c,l.y[2]/=c);var h=-1*e*(this.mouseX-this.pmouseX),f=-1*t*(this.mouseY-this.pmouseY);n.setPosition(n.eyeX+h*l.x[0]+f*l.z[0],n.eyeY,n.eyeZ+h*l.x[2]+f*l.z[2])}return this}},o.default.prototype.debugMode=function(){this._assert3d("debugMode");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];o.default._validateParameters("debugMode",t);for(var n=this._registeredMethods.post.length-1;0<=n;n--)this._registeredMethods.post[n].toString()!==this._grid().toString()&&this._registeredMethods.post[n].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(n,1);t[0]===a.GRID?this.registerMethod("post",this._grid.call(this,t[1],t[2],t[3],t[4],t[5])):t[0]===a.AXES?this.registerMethod("post",this._axesIcon.call(this,t[1],t[2],t[3],t[4])):(this.registerMethod("post",this._grid.call(this,t[0],t[1],t[2],t[3],t[4])),this.registerMethod("post",this._axesIcon.call(this,t[5],t[6],t[7],t[8])))},o.default.prototype.noDebugMode=function(){this._assert3d("noDebugMode");for(var e=this._registeredMethods.post.length-1;0<=e;e--)this._registeredMethods.post[e].toString()!==this._grid().toString()&&this._registeredMethods.post[e].toString()!==this._axesIcon().toString()||this._registeredMethods.post.splice(e,1)},o.default.prototype._grid=function(e,t,r,n,i){void 0===e&&(e=this.width/2),void 0===t&&(t=Math.round(e/30)<4?4:Math.round(e/30)),void 0===r&&(r=0),void 0===n&&(n=0),void 0===i&&(i=0);var o=e/t,a=e/2;return function(){this.push(),this.stroke(255*this._renderer.curStrokeColor[0],255*this._renderer.curStrokeColor[1],255*this._renderer.curStrokeColor[2]),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]);for(var e=0;e<=t;e++)this.beginShape(this.LINES),this.vertex(-a+r,n,e*o-a+i),this.vertex(+a+r,n,e*o-a+i),this.endShape();for(var s=0;s<=t;s++)this.beginShape(this.LINES),this.vertex(s*o-a+r,n,-a+i),this.vertex(s*o-a+r,n,+a+i),this.endShape();this.pop()}},o.default.prototype._axesIcon=function(e,t,r,n){return void 0===e&&(e=40<this.width/20?this.width/20:40),void 0===t&&(t=-this.width/4),void 0===r&&(r=t),void 0===n&&(n=t),function(){this.push(),this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0],this._renderer._curCamera.cameraMatrix.mat4[1],this._renderer._curCamera.cameraMatrix.mat4[2],this._renderer._curCamera.cameraMatrix.mat4[3],this._renderer._curCamera.cameraMatrix.mat4[4],this._renderer._curCamera.cameraMatrix.mat4[5],this._renderer._curCamera.cameraMatrix.mat4[6],this._renderer._curCamera.cameraMatrix.mat4[7],this._renderer._curCamera.cameraMatrix.mat4[8],this._renderer._curCamera.cameraMatrix.mat4[9],this._renderer._curCamera.cameraMatrix.mat4[10],this._renderer._curCamera.cameraMatrix.mat4[11],this._renderer._curCamera.cameraMatrix.mat4[12],this._renderer._curCamera.cameraMatrix.mat4[13],this._renderer._curCamera.cameraMatrix.mat4[14],this._renderer._curCamera.cameraMatrix.mat4[15]),this.strokeWeight(2),this.stroke(255,0,0),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t+e,r,n),this.endShape(),this.stroke(0,255,0),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t,r+e,n),this.endShape(),this.stroke(0,0,255),this.beginShape(this.LINES),this.vertex(t,r,n),this.vertex(t,r,n+e),this.endShape(),this.pop()}};var l=o.default;r.default=l},{"../core/constants":26,"../core/main":36}],81:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.ambientLight=function(e,t,r,n){this._assert3d("ambientLight"),i.default._validateParameters("ambientLight",arguments);var o=this.color.apply(this,arguments);return this._renderer.ambientLightColors.push(o._array[0],o._array[1],o._array[2]),this._renderer._enableLighting=!0,this},i.default.prototype.specularColor=function(e,t,r){this._assert3d("specularColor"),i.default._validateParameters("specularColor",arguments);var n=this.color.apply(this,arguments);return this._renderer.specularColors=[n._array[0],n._array[1],n._array[2]],this},i.default.prototype.directionalLight=function(e,t,r,n,o,a){var s,l,u,c;this._assert3d("directionalLight"),i.default._validateParameters("directionalLight",arguments),s=e instanceof i.default.Color?e:this.color(e,t,r);var h=arguments[arguments.length-1];c="number"==typeof h?(l=arguments[arguments.length-3],u=arguments[arguments.length-2],arguments[arguments.length-1]):(l=h.x,u=h.y,h.z);var f=Math.sqrt(l*l+u*u+c*c);return this._renderer.directionalLightDirections.push(l/f,u/f,c/f),this._renderer.directionalLightDiffuseColors.push(s._array[0],s._array[1],s._array[2]),Array.prototype.push.apply(this._renderer.directionalLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},i.default.prototype.pointLight=function(e,t,r,n,o,a){var s,l,u,c;this._assert3d("pointLight"),i.default._validateParameters("pointLight",arguments),s=e instanceof i.default.Color?e:this.color(e,t,r);var h=arguments[arguments.length-1];return c="number"==typeof h?(l=arguments[arguments.length-3],u=arguments[arguments.length-2],arguments[arguments.length-1]):(l=h.x,u=h.y,h.z),this._renderer.pointLightPositions.push(l,u,c),this._renderer.pointLightDiffuseColors.push(s._array[0],s._array[1],s._array[2]),Array.prototype.push.apply(this._renderer.pointLightSpecularColors,this._renderer.specularColors),this._renderer._enableLighting=!0,this},i.default.prototype.lights=function(){return this._assert3d("lights"),this.ambientLight(128,128,128),this.directionalLight(128,128,128,0,0,-1),this},i.default.prototype.lightFalloff=function(e,t,r){return this._assert3d("lightFalloff"),i.default._validateParameters("lightFalloff",arguments),e<0&&(e=0,console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")),t<0&&(t=0,console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")),r<0&&(r=0,console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")),0===e&&0===t&&0===r&&(e=1,console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")),this._renderer.constantAttenuation=e,this._renderer.linearAttenuation=t,this._renderer.quadraticAttenuation=r,this},i.default.prototype.spotLight=function(e,t,r,n,o,a,s,l,u,c,h){var f,d,p;this._assert3d("spotLight"),i.default._validateParameters("spotLight",arguments);var m=arguments.length;switch(m){case 11:case 10:f=this.color(e,t,r),d=new i.default.Vector(n,o,a),p=new i.default.Vector(s,l,u);break;case 9:e instanceof i.default.Color?(f=e,d=new i.default.Vector(t,r,n),p=new i.default.Vector(o,a,s),c=l,h=u):n instanceof i.default.Vector?(f=this.color(e,t,r),d=n,p=new i.default.Vector(o,a,s),c=l,h=u):s instanceof i.default.Vector?(f=this.color(e,t,r),d=new i.default.Vector(n,o,a),p=s,c=l,h=u):(f=this.color(e,t,r),d=new i.default.Vector(n,o,a),p=new i.default.Vector(s,l,u));break;case 8:p=e instanceof i.default.Color?(f=e,d=new i.default.Vector(t,r,n),new i.default.Vector(o,a,s)):n instanceof i.default.Vector?(f=this.color(e,t,r),d=n,new i.default.Vector(o,a,s)):(f=this.color(e,t,r),d=new i.default.Vector(n,o,a),s),c=l;break;case 7:e instanceof i.default.Color&&t instanceof i.default.Vector?(f=e,d=t,p=new i.default.Vector(r,n,o),c=a,h=s):e instanceof i.default.Color&&o instanceof i.default.Vector?(f=e,d=new i.default.Vector(t,r,n),p=o,c=a,h=s):n instanceof i.default.Vector&&o instanceof i.default.Vector?(f=this.color(e,t,r),d=n,p=o,c=a,h=s):p=e instanceof i.default.Color?(f=e,d=new i.default.Vector(t,r,n),new i.default.Vector(o,a,s)):n instanceof i.default.Vector?(f=this.color(e,t,r),d=n,new i.default.Vector(o,a,s)):(f=this.color(e,t,r),d=new i.default.Vector(n,o,a),s);break;case 6:n instanceof i.default.Vector&&o instanceof i.default.Vector?(f=this.color(e,t,r),d=n,p=o,c=a):e instanceof i.default.Color&&o instanceof i.default.Vector?(f=e,d=new i.default.Vector(t,r,n),p=o,c=a):e instanceof i.default.Color&&t instanceof i.default.Vector&&(f=e,d=t,p=new i.default.Vector(r,n,o),c=a);break;case 5:e instanceof i.default.Color&&t instanceof i.default.Vector&&r instanceof i.default.Vector?(f=e,d=t,p=r,c=n,h=o):n instanceof i.default.Vector&&o instanceof i.default.Vector?(f=this.color(e,t,r),d=n,p=o):e instanceof i.default.Color&&o instanceof i.default.Vector?(f=e,d=new i.default.Vector(t,r,n),p=o):e instanceof i.default.Color&&t instanceof i.default.Vector&&(f=e,d=t,p=new i.default.Vector(r,n,o));break;case 4:f=e,d=t,p=r,c=n;break;case 3:f=e,d=t,p=r;break;default:return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(m<3?"few":"many"," arguments were provided")),this}return this._renderer.spotLightDiffuseColors.push(f._array[0],f._array[1],f._array[2]),Array.prototype.push.apply(this._renderer.spotLightSpecularColors,this._renderer.specularColors),this._renderer.spotLightPositions.push(d.x,d.y,d.z),p.normalize(),this._renderer.spotLightDirections.push(p.x,p.y,p.z),void 0===c&&(c=Math.PI/3),void 0!==h&&h<1?(h=1,console.warn("Value of concentration needs to be greater than 1. Setting it to 1")):void 0===h&&(h=100),c=this._renderer._pInst._toRadians(c),this._renderer.spotLightAngle.push(Math.cos(c)),this._renderer.spotLightConc.push(h),this._renderer._enableLighting=!0,this},i.default.prototype.noLights=function(){return this._assert3d("noLights"),i.default._validateParameters("noLights",arguments),this._renderer._enableLighting=!1,this._renderer.ambientLightColors.length=0,this._renderer.specularColors=[1,1,1],this._renderer.directionalLightDirections.length=0,this._renderer.directionalLightDiffuseColors.length=0,this._renderer.directionalLightSpecularColors.length=0,this._renderer.pointLightPositions.length=0,this._renderer.pointLightDiffuseColors.length=0,this._renderer.pointLightSpecularColors.length=0,this._renderer.spotLightPositions.length=0,this._renderer.spotLightDirections.length=0,this._renderer.spotLightDiffuseColors.length=0,this._renderer.spotLightSpecularColors.length=0,this._renderer.spotLightAngle.length=0,this._renderer.spotLightConc.length=0,this._renderer.constantAttenuation=1,this._renderer.linearAttenuation=0,this._renderer.quadraticAttenuation=0,this._renderer._useShininess=1,this};var o=i.default;r.default=o},{"../core/main":36}],82:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};function o(e,t,r){for(var n=0,i=e.length;n<i;n++)if(e[n]!==t.getUint8(r+n,!1))return!1;return!0}e("./p5.Geometry"),i.default.prototype.loadModel=function(e){var t,r,n;i.default._validateParameters("loadModel",arguments);var a=e.slice(-4);"boolean"==typeof arguments[1]?(t=arguments[1],r=arguments[2],n=arguments[3],void 0!==arguments[4]&&(a=arguments[4])):(t=!1,r=arguments[1],n=arguments[2],void 0!==arguments[3]&&(a=arguments[3]));var s=new i.default.Geometry;s.gid="".concat(e,"|").concat(t);var l=this;return a.match(/\.stl$/i)?this.httpDo(e,"GET","arrayBuffer",(function(e){!function(e,t){if(function(e){for(var t=new DataView(e),r=[115,111,108,105,100],n=0;n<5;n++)if(o(r,t,n))return!1;return!0}(t))!function(e,t){for(var r,n,o,a,s,l,u,c=new DataView(t),h=c.getUint32(80,!0),f=!1,d=0;d<70;d++)1129270351===c.getUint32(d,!1)&&82===c.getUint8(d+4)&&61===c.getUint8(d+5)&&(f=!0,a=[],s=c.getUint8(d+6)/255,l=c.getUint8(d+7)/255,u=c.getUint8(d+8)/255);for(var p=0;p<h;p++){var m=84+50*p,v=c.getFloat32(m,!0),g=c.getFloat32(4+m,!0),y=c.getFloat32(8+m,!0);if(f){var b=c.getUint16(48+m,!0);o=0==(32768&b)?(r=(31&b)/31,n=(b>>5&31)/31,(b>>10&31)/31):(r=s,n=l,u)}for(var _=new i.default.Vector(v,g,y),w=1;w<=3;w++){var x=m+12*w,S=new i.default.Vector(c.getFloat32(x,!0),c.getFloat32(4+x,!0),c.getFloat32(8+x,!0));e.vertices.push(S),e.vertexNormals.push(_),f&&a.push(r,n,o)}e.faces.push([3*p,3*p+1,3*p+2]),e.uvs.push([0,0],[0,0],[0,0])}}(e,t);else{var r=new DataView(t);if(!("TextDecoder"in window))return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");!function(e,t){for(var r,n,o="",a=[],s=0;s<t.length;++s){for(var l=t[s].trim(),u=l.split(" "),c=0;c<u.length;++c)""===u[c]&&u.splice(c,1);if(0!==u.length)switch(o){case"":if("solid"!==u[0])return console.error(l),console.error('Invalid state "'.concat(u[0],'", should be "solid"'));o="solid";break;case"solid":if("facet"!==u[0]||"normal"!==u[1])return console.error(l),console.error('Invalid state "'.concat(u[0],'", should be "facet normal"'));r=new i.default.Vector(parseFloat(u[2]),parseFloat(u[3]),parseFloat(u[4])),e.vertexNormals.push(r,r,r),o="facet normal";break;case"facet normal":if("outer"!==u[0]||"loop"!==u[1])return console.error(l),console.error('Invalid state "'.concat(u[0],'", should be "outer loop"'));o="vertex";break;case"vertex":if("vertex"===u[0])n=new i.default.Vector(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3])),e.vertices.push(n),e.uvs.push([0,0]),a.push(e.vertices.indexOf(n));else{if("endloop"!==u[0])return console.error(l),console.error('Invalid state "'.concat(u[0],'", should be "vertex" or "endloop"'));e.faces.push(a),a=[],o="endloop"}break;case"endloop":if("endfacet"!==u[0])return console.error(l),console.error('Invalid state "'.concat(u[0],'", should be "endfacet"'));o="endfacet";break;case"endfacet":if("endsolid"!==u[0]){if("facet"!==u[0]||"normal"!==u[1])return console.error(l),console.error('Invalid state "'.concat(u[0],'", should be "endsolid" or "facet normal"'));r=new i.default.Vector(parseFloat(u[2]),parseFloat(u[3]),parseFloat(u[4])),e.vertexNormals.push(r,r,r),o="facet normal"}break;default:console.error('Invalid state "'.concat(o,'"'))}}}(e,new TextDecoder("utf-8").decode(r).split("\n"))}}(s,e),t&&s.normalize(),l._decrementPreload(),"function"==typeof r&&r(s)}),n):a.match(/\.obj$/i)?this.loadStrings(e,(function(e){!function(e,t){for(var r={v:[],vt:[],vn:[]},n={},o=0;o<t.length;++o){var a=t[o].trim().split(/\b\s+/);if(0<a.length)if("v"===a[0]||"vn"===a[0]){var s=new i.default.Vector(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));r[a[0]].push(s)}else if("vt"===a[0]){var l=[parseFloat(a[1]),parseFloat(a[2])];r[a[0]].push(l)}else if("f"===a[0])for(var u=3;u<a.length;++u){for(var c=[],h=[1,u-1,u],f=0;f<h.length;++f){var d=a[h[f]],p=0;if(void 0!==n[d])p=n[d];else{for(var m=d.split("/"),v=0;v<m.length;v++)m[v]=parseInt(m[v])-1;p=n[d]=e.vertices.length,e.vertices.push(r.v[m[0]].copy()),r.vt[m[1]]?e.uvs.push(r.vt[m[1]].slice()):e.uvs.push([0,0]),r.vn[m[2]]&&e.vertexNormals.push(r.vn[m[2]].copy())}c.push(p)}c[0]!==c[1]&&c[0]!==c[2]&&c[1]!==c[2]&&e.faces.push(c)}}0===e.vertexNormals.length&&e.computeNormals()}(s,e),t&&s.normalize(),l._decrementPreload(),"function"==typeof r&&r(s)}),n):(i.default._friendlyFileLoadError(3,e),n?n():console.error("Sorry, the file type is invalid. Only OBJ and STL files are supported.")),s},i.default.prototype.model=function(e){this._assert3d("model"),i.default._validateParameters("model",arguments),0<e.vertices.length&&(this._renderer.geometryInHash(e.gid)||(e._makeTriangleEdges()._edgesToVertices(),this._renderer.createBuffers(e.gid,e)),this._renderer.drawBuffers(e.gid))};var a=i.default;r.default=a},{"../core/main":36,"./p5.Geometry":85}],83:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.Texture"),o.default.prototype.loadShader=function(e,t,r,n){function i(){s._decrementPreload(),r&&r(a)}o.default._validateParameters("loadShader",arguments),n=n||console.error;var a=new o.default.Shader,s=this,l=!1,u=!1;return this.loadStrings(e,(function(e){a._vertSrc=e.join("\n"),u=!0,l&&i()}),n),this.loadStrings(t,(function(e){a._fragSrc=e.join("\n"),l=!0,u&&i()}),n),a},o.default.prototype.createShader=function(e,t){return this._assert3d("createShader"),o.default._validateParameters("createShader",arguments),new o.default.Shader(this._renderer,e,t)},o.default.prototype.shader=function(e){return this._assert3d("shader"),o.default._validateParameters("shader",arguments),void 0===e._renderer&&(e._renderer=this._renderer),e.isStrokeShader()?this._renderer.userStrokeShader=e:(this._renderer.userFillShader=e,this._renderer._useNormalMaterial=!1),e.init(),this},o.default.prototype.resetShader=function(){return this._renderer.userFillShader=this._renderer.userStrokeShader=null,this},o.default.prototype.normalMaterial=function(){this._assert3d("normalMaterial");for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return o.default._validateParameters("normalMaterial",t),this._renderer.drawMode=a.FILL,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!0,this._renderer.curFillColor=[1,1,1,1],this._renderer._setProperty("_doFill",!0),this.noStroke(),this},o.default.prototype.texture=function(e){return this._assert3d("texture"),o.default._validateParameters("texture",arguments),e.gifProperties&&e._animateGif(this),this._renderer.drawMode=a.TEXTURE,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._tex=e,this._renderer._setProperty("_doFill",!0),this},o.default.prototype.textureMode=function(e){e!==a.IMAGE&&e!==a.NORMAL?console.warn("You tried to set ".concat(e," textureMode only supports IMAGE & NORMAL ")):this._renderer.textureMode=e},o.default.prototype.textureWrap=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:e;this._renderer.textureWrapX=e,this._renderer.textureWrapY=t;for(var r=this._renderer.textures,n=0;n<r.length;n++)r[n].setWrapMode(e,t)},o.default.prototype.ambientMaterial=function(e,t,r){this._assert3d("ambientMaterial"),o.default._validateParameters("ambientMaterial",arguments);var n=o.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=n._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},o.default.prototype.emissiveMaterial=function(e,t,r,n){this._assert3d("emissiveMaterial"),o.default._validateParameters("emissiveMaterial",arguments);var i=o.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=i._array,this._renderer._useSpecularMaterial=!1,this._renderer._useEmissiveMaterial=!0,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},o.default.prototype.specularMaterial=function(e,t,r,n){this._assert3d("specularMaterial"),o.default._validateParameters("specularMaterial",arguments);var i=o.default.prototype.color.apply(this,arguments);return this._renderer.curFillColor=i._array,this._renderer._useSpecularMaterial=!0,this._renderer._useEmissiveMaterial=!1,this._renderer._useNormalMaterial=!1,this._renderer._enableLighting=!0,this._renderer._tex=null,this},o.default.prototype.shininess=function(e){return this._assert3d("shininess"),o.default._validateParameters("shininess",arguments),e<1&&(e=1),this._renderer._useShininess=e,this},o.default.RendererGL.prototype._applyColorBlend=function(e){var t=this.GL,r=this.drawMode===a.TEXTURE||e[e.length-1]<1||this._isErasing;return r!==this._isBlending&&(r||this.curBlendMode!==a.BLEND&&this.curBlendMode!==a.ADD?t.enable(t.BLEND):t.disable(t.BLEND),t.depthMask(!0),this._isBlending=r),this._applyBlendMode(),e},o.default.RendererGL.prototype._applyBlendMode=function(){if(this._cachedBlendMode!==this.curBlendMode){var e=this.GL;switch(this.curBlendMode){case a.BLEND:case a.ADD:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA);break;case a.REMOVE:e.blendEquation(e.FUNC_REVERSE_SUBTRACT),e.blendFunc(e.SRC_ALPHA,e.DST_ALPHA);break;case a.MULTIPLY:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ONE,e.ONE);break;case a.SCREEN:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE,e.ONE,e.ONE);break;case a.EXCLUSION:e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE_MINUS_DST_COLOR,e.ONE_MINUS_SRC_COLOR,e.ONE,e.ONE);break;case a.REPLACE:e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO);break;case a.SUBTRACT:e.blendEquationSeparate(e.FUNC_REVERSE_SUBTRACT,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE,e.ONE,e.ONE);break;case a.DARKEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MIN_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");break;case a.LIGHTEST:this.blendExt?(e.blendEquationSeparate(this.blendExt.MAX_EXT,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");break;default:console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.")}this._isErasing||(this._cachedBlendMode=this.curBlendMode)}};var l=o.default;r.default=l},{"../core/constants":26,"../core/main":36,"./p5.Texture":92}],84:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.prototype.camera=function(){var e;this._assert3d("camera");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return i.default._validateParameters("camera",r),(e=this._renderer._curCamera).camera.apply(e,r),this},i.default.prototype.perspective=function(){var e;this._assert3d("perspective");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return i.default._validateParameters("perspective",r),(e=this._renderer._curCamera).perspective.apply(e,r),this},i.default.prototype.ortho=function(){var e;this._assert3d("ortho");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return i.default._validateParameters("ortho",r),(e=this._renderer._curCamera).ortho.apply(e,r),this},i.default.prototype.frustum=function(){var e;this._assert3d("frustum");for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return i.default._validateParameters("frustum",r),(e=this._renderer._curCamera).frustum.apply(e,r),this},i.default.prototype.createCamera=function(){this._assert3d("createCamera");var e=new i.default.Camera(this._renderer);return e._computeCameraDefaultSettings(),e._setDefaultCamera(),this._renderer._curCamera=e},i.default.Camera=function(e){this._renderer=e,this.cameraType="default",this.cameraMatrix=new i.default.Matrix,this.projMatrix=new i.default.Matrix},i.default.Camera.prototype.perspective=function(e,t,r,n){this.cameraType=0<arguments.length?"custom":"default",void 0===e?(e=this.defaultCameraFOV,this.cameraFOV=e):this.cameraFOV=this._renderer._pInst._toRadians(e),void 0===t&&(t=this.defaultAspectRatio),void 0===r&&(r=this.defaultCameraNear),void 0===n&&(n=this.defaultCameraFar),r<=1e-4&&(r=.01,console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")),n<r&&console.log("Perspective far plane value is less than near plane value. Nothing will be shown."),this.aspectRatio=t,this.cameraNear=r,this.cameraFar=n,this.projMatrix=i.default.Matrix.identity();var o=1/Math.tan(this.cameraFOV/2),a=1/(this.cameraNear-this.cameraFar);this.projMatrix.set(o/t,0,0,0,0,-o,0,0,0,0,(n+r)*a,-1,0,0,2*n*r*a,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15])},i.default.Camera.prototype.ortho=function(e,t,r,n,o,a){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=this._renderer.height/2),void 0===o&&(o=0),void 0===a&&(a=Math.max(this._renderer.width,this._renderer.height));var s=t-e,l=n-r,u=a-o,c=2/s,h=2/l,f=-2/u,d=-(t+e)/s,p=-(n+r)/l,m=-(a+o)/u;this.projMatrix=i.default.Matrix.identity(),this.projMatrix.set(c,0,0,0,0,-h,0,0,0,0,f,0,d,p,m,1),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},i.default.Camera.prototype.frustum=function(e,t,r,n,o,a){void 0===e&&(e=-this._renderer.width/2),void 0===t&&(t=this._renderer.width/2),void 0===r&&(r=-this._renderer.height/2),void 0===n&&(n=this._renderer.height/2),void 0===o&&(o=0),void 0===a&&(a=Math.max(this._renderer.width,this._renderer.height));var s=t-e,l=n-r,u=a-o,c=2*o/s,h=2*o/l,f=-2*a*o/u,d=(t+e)/s,p=(n+r)/l,m=-(a+o)/u;this.projMatrix=i.default.Matrix.identity(),this.projMatrix.set(c,0,0,0,0,h,0,0,d,p,m,-1,0,0,f,0),this._isActive()&&this._renderer.uPMatrix.set(this.projMatrix.mat4[0],this.projMatrix.mat4[1],this.projMatrix.mat4[2],this.projMatrix.mat4[3],this.projMatrix.mat4[4],this.projMatrix.mat4[5],this.projMatrix.mat4[6],this.projMatrix.mat4[7],this.projMatrix.mat4[8],this.projMatrix.mat4[9],this.projMatrix.mat4[10],this.projMatrix.mat4[11],this.projMatrix.mat4[12],this.projMatrix.mat4[13],this.projMatrix.mat4[14],this.projMatrix.mat4[15]),this.cameraType="custom"},i.default.Camera.prototype._rotateView=function(e,t,r,n){var o=this.centerX,a=this.centerY,s=this.centerZ;o-=this.eyeX,a-=this.eyeY,s-=this.eyeZ;var l=i.default.Matrix.identity(this._renderer._pInst);l.rotate(this._renderer._pInst._toRadians(e),t,r,n);var u=[o*l.mat4[0]+a*l.mat4[4]+s*l.mat4[8],o*l.mat4[1]+a*l.mat4[5]+s*l.mat4[9],o*l.mat4[2]+a*l.mat4[6]+s*l.mat4[10]];u[0]+=this.eyeX,u[1]+=this.eyeY,u[2]+=this.eyeZ,this.camera(this.eyeX,this.eyeY,this.eyeZ,u[0],u[1],u[2],this.upX,this.upY,this.upZ)},i.default.Camera.prototype.pan=function(e){var t=this._getLocalAxes();this._rotateView(e,t.y[0],t.y[1],t.y[2])},i.default.Camera.prototype.tilt=function(e){var t=this._getLocalAxes();this._rotateView(e,t.x[0],t.x[1],t.x[2])},i.default.Camera.prototype.lookAt=function(e,t,r){this.camera(this.eyeX,this.eyeY,this.eyeZ,e,t,r,this.upX,this.upY,this.upZ)},i.default.Camera.prototype.camera=function(e,t,r,n,i,o,a,s,l){void 0===e&&(e=this.defaultEyeX,t=this.defaultEyeY,r=this.defaultEyeZ,n=e,i=t,s=1,l=a=o=0),this.eyeX=e,this.eyeY=t,this.eyeZ=r,void 0!==n&&(this.centerX=n,this.centerY=i,this.centerZ=o),void 0!==a&&(this.upX=a,this.upY=s,this.upZ=l);var u=this._getLocalAxes();this.cameraMatrix.set(u.x[0],u.y[0],u.z[0],0,u.x[1],u.y[1],u.z[1],0,u.x[2],u.y[2],u.z[2],0,0,0,0,1);var c=-e,h=-t,f=-r;return this.cameraMatrix.translate([c,h,f]),this._isActive()&&this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0],this.cameraMatrix.mat4[1],this.cameraMatrix.mat4[2],this.cameraMatrix.mat4[3],this.cameraMatrix.mat4[4],this.cameraMatrix.mat4[5],this.cameraMatrix.mat4[6],this.cameraMatrix.mat4[7],this.cameraMatrix.mat4[8],this.cameraMatrix.mat4[9],this.cameraMatrix.mat4[10],this.cameraMatrix.mat4[11],this.cameraMatrix.mat4[12],this.cameraMatrix.mat4[13],this.cameraMatrix.mat4[14],this.cameraMatrix.mat4[15]),this},i.default.Camera.prototype.move=function(e,t,r){var n=this._getLocalAxes(),i=[n.x[0]*e,n.x[1]*e,n.x[2]*e],o=[n.y[0]*t,n.y[1]*t,n.y[2]*t],a=[n.z[0]*r,n.z[1]*r,n.z[2]*r];this.camera(this.eyeX+i[0]+o[0]+a[0],this.eyeY+i[1]+o[1]+a[1],this.eyeZ+i[2]+o[2]+a[2],this.centerX+i[0]+o[0]+a[0],this.centerY+i[1]+o[1]+a[1],this.centerZ+i[2]+o[2]+a[2],0,1,0)},i.default.Camera.prototype.setPosition=function(e,t,r){var n=e-this.eyeX,i=t-this.eyeY,o=r-this.eyeZ;this.camera(e,t,r,this.centerX+n,this.centerY+i,this.centerZ+o,0,1,0)},i.default.Camera.prototype._computeCameraDefaultSettings=function(){this.defaultCameraFOV=60/180*Math.PI,this.defaultAspectRatio=this._renderer.width/this._renderer.height,this.defaultEyeX=0,this.defaultEyeY=0,this.defaultEyeZ=this._renderer.height/2/Math.tan(this.defaultCameraFOV/2),this.defaultCenterX=0,this.defaultCenterY=0,this.defaultCenterZ=0,this.defaultCameraNear=.1*this.defaultEyeZ,this.defaultCameraFar=10*this.defaultEyeZ},i.default.Camera.prototype._setDefaultCamera=function(){this.cameraFOV=this.defaultCameraFOV,this.aspectRatio=this.defaultAspectRatio,this.eyeX=this.defaultEyeX,this.eyeY=this.defaultEyeY,this.eyeZ=this.defaultEyeZ,this.centerX=this.defaultCenterX,this.centerY=this.defaultCenterY,this.centerZ=this.defaultCenterZ,this.upX=0,this.upY=1,this.upZ=0,this.cameraNear=this.defaultCameraNear,this.cameraFar=this.defaultCameraFar,this.perspective(),this.camera(),this.cameraType="default"},i.default.Camera.prototype._resize=function(){"default"===this.cameraType?(this._computeCameraDefaultSettings(),this._setDefaultCamera()):this.perspective(this.cameraFOV,this._renderer.width/this._renderer.height)},i.default.Camera.prototype.copy=function(){var e=new i.default.Camera(this._renderer);return e.cameraFOV=this.cameraFOV,e.aspectRatio=this.aspectRatio,e.eyeX=this.eyeX,e.eyeY=this.eyeY,e.eyeZ=this.eyeZ,e.centerX=this.centerX,e.centerY=this.centerY,e.centerZ=this.centerZ,e.cameraNear=this.cameraNear,e.cameraFar=this.cameraFar,e.cameraType=this.cameraType,e.cameraMatrix=this.cameraMatrix.copy(),e.projMatrix=this.projMatrix.copy(),e},i.default.Camera.prototype._getLocalAxes=function(){var e=this.eyeX-this.centerX,t=this.eyeY-this.centerY,r=this.eyeZ-this.centerZ,n=Math.sqrt(e*e+t*t+r*r);0!==n&&(e/=n,t/=n,r/=n);var i=this.upX,o=this.upY,a=this.upZ,s=o*r-a*t,l=-i*r+a*e,u=i*t-o*e;i=t*u-r*l,o=-e*u+r*s,a=e*l-t*s;var c=Math.sqrt(s*s+l*l+u*u);0!==c&&(s/=c,l/=c,u/=c);var h=Math.sqrt(i*i+o*o+a*a);return 0!==h&&(i/=h,o/=h,a/=h),{x:[s,l,u],y:[i,o,a],z:[e,t,r]}},i.default.Camera.prototype._orbit=function(e,t,r){var n=this.eyeX-this.centerX,i=this.eyeY-this.centerY,o=this.eyeZ-this.centerZ,a=Math.sqrt(n*n+i*i+o*o),s=Math.atan2(n,o),l=Math.acos(Math.max(-1,Math.min(1,i/a)));s+=e,(a+=r)<0&&(a=.1),(l+=t)>Math.PI?l=Math.PI:l<=0&&(l=.001);var u=Math.sin(l)*a*Math.sin(s),c=Math.cos(l)*a,h=Math.sin(l)*a*Math.cos(s);this.camera(u+this.centerX,c+this.centerY,h+this.centerZ,this.centerX,this.centerY,this.centerZ,0,1,0)},i.default.Camera.prototype._isActive=function(){return this===this._renderer._curCamera},i.default.prototype.setCamera=function(e){this._renderer._curCamera=e,this._renderer.uPMatrix.set(e.projMatrix.mat4[0],e.projMatrix.mat4[1],e.projMatrix.mat4[2],e.projMatrix.mat4[3],e.projMatrix.mat4[4],e.projMatrix.mat4[5],e.projMatrix.mat4[6],e.projMatrix.mat4[7],e.projMatrix.mat4[8],e.projMatrix.mat4[9],e.projMatrix.mat4[10],e.projMatrix.mat4[11],e.projMatrix.mat4[12],e.projMatrix.mat4[13],e.projMatrix.mat4[14],e.projMatrix.mat4[15])};var o=i.default.Camera;r.default=o},{"../core/main":36}],85:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.Geometry=function(e,t,r){return this.vertices=[],this.lineVertices=[],this.lineNormals=[],this.vertexNormals=[],this.faces=[],this.uvs=[],this.edges=[],this.vertexColors=[],this.detailX=void 0!==e?e:1,this.detailY=void 0!==t?t:1,this.dirtyFlags={},r instanceof Function&&r.call(this),this},i.default.Geometry.prototype.reset=function(){this.lineVertices.length=0,this.lineNormals.length=0,this.vertices.length=0,this.edges.length=0,this.vertexColors.length=0,this.vertexNormals.length=0,this.uvs.length=0,this.dirtyFlags={}},i.default.Geometry.prototype.computeFaces=function(){this.faces.length=0;for(var e,t,r,n,i=this.detailX+1,o=0;o<this.detailY;o++)for(var a=0;a<this.detailX;a++)t=(e=o*i+a)+1,r=(o+1)*i+a+1,n=(o+1)*i+a,this.faces.push([e,t,n]),this.faces.push([n,t,r]);return this},i.default.Geometry.prototype._getFaceNormal=function(e){var t=this.faces[e],r=this.vertices[t[0]],n=this.vertices[t[1]],o=this.vertices[t[2]],a=i.default.Vector.sub(n,r),s=i.default.Vector.sub(o,r),l=i.default.Vector.cross(a,s),u=i.default.Vector.mag(l),c=u/(i.default.Vector.mag(a)*i.default.Vector.mag(s));return 0===c||isNaN(c)?(console.warn("p5.Geometry.prototype._getFaceNormal:","face has colinear sides or a repeated vertex"),l):(1<c&&(c=1),l.mult(Math.asin(c)/u))},i.default.Geometry.prototype.computeNormals=function(){var e,t=this.vertexNormals,r=this.vertices,n=this.faces;for(e=t.length=0;e<r.length;++e)t.push(new i.default.Vector);for(var o=0;o<n.length;++o)for(var a=n[o],s=this._getFaceNormal(o),l=0;l<3;++l)t[a[l]].add(s);for(e=0;e<r.length;++e)t[e].normalize();return this},i.default.Geometry.prototype.averageNormals=function(){for(var e=0;e<=this.detailY;e++){var t=this.detailX+1,r=i.default.Vector.add(this.vertexNormals[e*t],this.vertexNormals[e*t+this.detailX]);r=i.default.Vector.div(r,2),this.vertexNormals[e*t]=r,this.vertexNormals[e*t+this.detailX]=r}return this},i.default.Geometry.prototype.averagePoleNormals=function(){for(var e=new i.default.Vector(0,0,0),t=0;t<this.detailX;t++)e.add(this.vertexNormals[t]);e=i.default.Vector.div(e,this.detailX);for(var r=0;r<this.detailX;r++)this.vertexNormals[r]=e;e=new i.default.Vector(0,0,0);for(var n=this.vertices.length-1;n>this.vertices.length-1-this.detailX;n--)e.add(this.vertexNormals[n]);e=i.default.Vector.div(e,this.detailX);for(var o=this.vertices.length-1;o>this.vertices.length-1-this.detailX;o--)this.vertexNormals[o]=e;return this},i.default.Geometry.prototype._makeTriangleEdges=function(){if(this.edges.length=0,Array.isArray(this.strokeIndices))for(var e=0,t=this.strokeIndices.length;e<t;e++)this.edges.push(this.strokeIndices[e]);else for(var r=0;r<this.faces.length;r++)this.edges.push([this.faces[r][0],this.faces[r][1]]),this.edges.push([this.faces[r][1],this.faces[r][2]]),this.edges.push([this.faces[r][2],this.faces[r][0]]);return this},i.default.Geometry.prototype._edgesToVertices=function(){this.lineVertices.length=0;for(var e=this.lineNormals.length=0;e<this.edges.length;e++){var t=this.vertices[this.edges[e][0]],r=this.vertices[this.edges[e][1]],n=r.copy().sub(t).normalize(),i=t.array(),o=t.array(),a=r.array(),s=r.array(),l=n.array(),u=n.array();l.push(1),u.push(-1),this.lineNormals.push(l,u,l,l,u,u),this.lineVertices.push(i,o,a,a,o,s)}return this},i.default.Geometry.prototype.normalize=function(){if(0<this.vertices.length){for(var e=this.vertices[0].copy(),t=this.vertices[0].copy(),r=0;r<this.vertices.length;r++)e.x=Math.max(e.x,this.vertices[r].x),t.x=Math.min(t.x,this.vertices[r].x),e.y=Math.max(e.y,this.vertices[r].y),t.y=Math.min(t.y,this.vertices[r].y),e.z=Math.max(e.z,this.vertices[r].z),t.z=Math.min(t.z,this.vertices[r].z);for(var n=i.default.Vector.lerp(e,t,.5),o=i.default.Vector.sub(e,t),a=200/Math.max(Math.max(o.x,o.y),o.z),s=0;s<this.vertices.length;s++)this.vertices[s].sub(n),this.vertices[s].mult(a)}return this};var o=i.default.Geometry;r.default=o},{"../core/main":36}],86:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n},o=Array,a=function(e){return e instanceof Array};"undefined"!=typeof Float32Array&&(o=Float32Array,a=function(e){return e instanceof Array||e instanceof Float32Array}),i.default.Matrix=function(){for(var e=new Array(arguments.length),t=0;t<e.length;++t)e[t]=arguments[t];return e.length&&e[e.length-1]instanceof i.default&&(this.p5=e[e.length-1]),"mat3"===e[0]?this.mat3=Array.isArray(e[1])?e[1]:new o([1,0,0,0,1,0,0,0,1]):this.mat4=Array.isArray(e[0])?e[0]:new o([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this},i.default.Matrix.prototype.set=function(e){return e instanceof i.default.Matrix?this.mat4=e.mat4:a(e)?this.mat4=e:16===arguments.length&&(this.mat4[0]=e,this.mat4[1]=arguments[1],this.mat4[2]=arguments[2],this.mat4[3]=arguments[3],this.mat4[4]=arguments[4],this.mat4[5]=arguments[5],this.mat4[6]=arguments[6],this.mat4[7]=arguments[7],this.mat4[8]=arguments[8],this.mat4[9]=arguments[9],this.mat4[10]=arguments[10],this.mat4[11]=arguments[11],this.mat4[12]=arguments[12],this.mat4[13]=arguments[13],this.mat4[14]=arguments[14],this.mat4[15]=arguments[15]),this},i.default.Matrix.prototype.get=function(){return new i.default.Matrix(this.mat4,this.p5)},i.default.Matrix.prototype.copy=function(){var e=new i.default.Matrix(this.p5);return e.mat4[0]=this.mat4[0],e.mat4[1]=this.mat4[1],e.mat4[2]=this.mat4[2],e.mat4[3]=this.mat4[3],e.mat4[4]=this.mat4[4],e.mat4[5]=this.mat4[5],e.mat4[6]=this.mat4[6],e.mat4[7]=this.mat4[7],e.mat4[8]=this.mat4[8],e.mat4[9]=this.mat4[9],e.mat4[10]=this.mat4[10],e.mat4[11]=this.mat4[11],e.mat4[12]=this.mat4[12],e.mat4[13]=this.mat4[13],e.mat4[14]=this.mat4[14],e.mat4[15]=this.mat4[15],e},i.default.Matrix.identity=function(e){return new i.default.Matrix(e)},i.default.Matrix.prototype.transpose=function(e){var t,r,n,o,s,l;return e instanceof i.default.Matrix?(t=e.mat4[1],r=e.mat4[2],n=e.mat4[3],o=e.mat4[6],s=e.mat4[7],l=e.mat4[11],this.mat4[0]=e.mat4[0],this.mat4[1]=e.mat4[4],this.mat4[2]=e.mat4[8],this.mat4[3]=e.mat4[12],this.mat4[4]=t,this.mat4[5]=e.mat4[5],this.mat4[6]=e.mat4[9],this.mat4[7]=e.mat4[13],this.mat4[8]=r,this.mat4[9]=o,this.mat4[10]=e.mat4[10],this.mat4[11]=e.mat4[14],this.mat4[12]=n,this.mat4[13]=s,this.mat4[14]=l,this.mat4[15]=e.mat4[15]):a(e)&&(t=e[1],r=e[2],n=e[3],o=e[6],s=e[7],l=e[11],this.mat4[0]=e[0],this.mat4[1]=e[4],this.mat4[2]=e[8],this.mat4[3]=e[12],this.mat4[4]=t,this.mat4[5]=e[5],this.mat4[6]=e[9],this.mat4[7]=e[13],this.mat4[8]=r,this.mat4[9]=o,this.mat4[10]=e[10],this.mat4[11]=e[14],this.mat4[12]=n,this.mat4[13]=s,this.mat4[14]=l,this.mat4[15]=e[15]),this},i.default.Matrix.prototype.invert=function(e){var t,r,n,o,s,l,u,c,h,f,d,p,m,v,g,y;e instanceof i.default.Matrix?(t=e.mat4[0],r=e.mat4[1],n=e.mat4[2],o=e.mat4[3],s=e.mat4[4],l=e.mat4[5],u=e.mat4[6],c=e.mat4[7],h=e.mat4[8],f=e.mat4[9],d=e.mat4[10],p=e.mat4[11],m=e.mat4[12],v=e.mat4[13],g=e.mat4[14],y=e.mat4[15]):a(e)&&(t=e[0],r=e[1],n=e[2],o=e[3],s=e[4],l=e[5],u=e[6],c=e[7],h=e[8],f=e[9],d=e[10],p=e[11],m=e[12],v=e[13],g=e[14],y=e[15]);var b=t*l-r*s,_=t*u-n*s,w=t*c-o*s,x=r*u-n*l,S=r*c-o*l,E=n*c-o*u,M=h*v-f*m,T=h*g-d*m,C=h*y-p*m,L=f*g-d*v,O=f*y-p*v,P=d*y-p*g,A=b*P-_*O+w*L+x*C-S*T+E*M;return A?(A=1/A,this.mat4[0]=(l*P-u*O+c*L)*A,this.mat4[1]=(n*O-r*P-o*L)*A,this.mat4[2]=(v*E-g*S+y*x)*A,this.mat4[3]=(d*S-f*E-p*x)*A,this.mat4[4]=(u*C-s*P-c*T)*A,this.mat4[5]=(t*P-n*C+o*T)*A,this.mat4[6]=(g*w-m*E-y*_)*A,this.mat4[7]=(h*E-d*w+p*_)*A,this.mat4[8]=(s*O-l*C+c*M)*A,this.mat4[9]=(r*C-t*O-o*M)*A,this.mat4[10]=(m*S-v*w+y*b)*A,this.mat4[11]=(f*w-h*S-p*b)*A,this.mat4[12]=(l*T-s*L-u*M)*A,this.mat4[13]=(t*L-r*T+n*M)*A,this.mat4[14]=(v*_-m*x-g*b)*A,this.mat4[15]=(h*x-f*_+d*b)*A,this):null},i.default.Matrix.prototype.invert3x3=function(){var e=this.mat3[0],t=this.mat3[1],r=this.mat3[2],n=this.mat3[3],i=this.mat3[4],o=this.mat3[5],a=this.mat3[6],s=this.mat3[7],l=this.mat3[8],u=l*i-o*s,c=-l*n+o*a,h=s*n-i*a,f=e*u+t*c+r*h;return f?(f=1/f,this.mat3[0]=u*f,this.mat3[1]=(-l*t+r*s)*f,this.mat3[2]=(o*t-r*i)*f,this.mat3[3]=c*f,this.mat3[4]=(l*e-r*a)*f,this.mat3[5]=(-o*e+r*n)*f,this.mat3[6]=h*f,this.mat3[7]=(-s*e+t*a)*f,this.mat3[8]=(i*e-t*n)*f,this):null},i.default.Matrix.prototype.transpose3x3=function(e){var t=e[1],r=e[2],n=e[5];return this.mat3[1]=e[3],this.mat3[2]=e[6],this.mat3[3]=t,this.mat3[5]=e[7],this.mat3[6]=r,this.mat3[7]=n,this},i.default.Matrix.prototype.inverseTranspose=function(e){void 0===this.mat3?console.error("sorry, this function only works with mat3"):(this.mat3[0]=e.mat4[0],this.mat3[1]=e.mat4[1],this.mat3[2]=e.mat4[2],this.mat3[3]=e.mat4[4],this.mat3[4]=e.mat4[5],this.mat3[5]=e.mat4[6],this.mat3[6]=e.mat4[8],this.mat3[7]=e.mat4[9],this.mat3[8]=e.mat4[10]);var t=this.invert3x3();if(t)t.transpose3x3(this.mat3);else for(var r=0;r<9;r++)this.mat3[r]=0;return this},i.default.Matrix.prototype.determinant=function(){var e=this.mat4[0]*this.mat4[5]-this.mat4[1]*this.mat4[4],t=this.mat4[0]*this.mat4[6]-this.mat4[2]*this.mat4[4],r=this.mat4[0]*this.mat4[7]-this.mat4[3]*this.mat4[4],n=this.mat4[1]*this.mat4[6]-this.mat4[2]*this.mat4[5],i=this.mat4[1]*this.mat4[7]-this.mat4[3]*this.mat4[5],o=this.mat4[2]*this.mat4[7]-this.mat4[3]*this.mat4[6],a=this.mat4[8]*this.mat4[13]-this.mat4[9]*this.mat4[12],s=this.mat4[8]*this.mat4[14]-this.mat4[10]*this.mat4[12],l=this.mat4[8]*this.mat4[15]-this.mat4[11]*this.mat4[12],u=this.mat4[9]*this.mat4[14]-this.mat4[10]*this.mat4[13],c=this.mat4[9]*this.mat4[15]-this.mat4[11]*this.mat4[13];return e*(this.mat4[10]*this.mat4[15]-this.mat4[11]*this.mat4[14])-t*c+r*u+n*l-i*s+o*a},i.default.Matrix.prototype.mult=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof i.default.Matrix)t=e.mat4;else if(a(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4[0],n=this.mat4[1],o=this.mat4[2],s=this.mat4[3];return this.mat4[0]=r*t[0]+n*t[4]+o*t[8]+s*t[12],this.mat4[1]=r*t[1]+n*t[5]+o*t[9]+s*t[13],this.mat4[2]=r*t[2]+n*t[6]+o*t[10]+s*t[14],this.mat4[3]=r*t[3]+n*t[7]+o*t[11]+s*t[15],r=this.mat4[4],n=this.mat4[5],o=this.mat4[6],s=this.mat4[7],this.mat4[4]=r*t[0]+n*t[4]+o*t[8]+s*t[12],this.mat4[5]=r*t[1]+n*t[5]+o*t[9]+s*t[13],this.mat4[6]=r*t[2]+n*t[6]+o*t[10]+s*t[14],this.mat4[7]=r*t[3]+n*t[7]+o*t[11]+s*t[15],r=this.mat4[8],n=this.mat4[9],o=this.mat4[10],s=this.mat4[11],this.mat4[8]=r*t[0]+n*t[4]+o*t[8]+s*t[12],this.mat4[9]=r*t[1]+n*t[5]+o*t[9]+s*t[13],this.mat4[10]=r*t[2]+n*t[6]+o*t[10]+s*t[14],this.mat4[11]=r*t[3]+n*t[7]+o*t[11]+s*t[15],r=this.mat4[12],n=this.mat4[13],o=this.mat4[14],s=this.mat4[15],this.mat4[12]=r*t[0]+n*t[4]+o*t[8]+s*t[12],this.mat4[13]=r*t[1]+n*t[5]+o*t[9]+s*t[13],this.mat4[14]=r*t[2]+n*t[6]+o*t[10]+s*t[14],this.mat4[15]=r*t[3]+n*t[7]+o*t[11]+s*t[15],this},i.default.Matrix.prototype.apply=function(e){var t;if(e===this||e===this.mat4)t=this.copy().mat4;else if(e instanceof i.default.Matrix)t=e.mat4;else if(a(e))t=e;else{if(16!==arguments.length)return;t=arguments}var r=this.mat4,n=r[0],o=r[4],s=r[8],l=r[12];r[0]=t[0]*n+t[1]*o+t[2]*s+t[3]*l,r[4]=t[4]*n+t[5]*o+t[6]*s+t[7]*l,r[8]=t[8]*n+t[9]*o+t[10]*s+t[11]*l,r[12]=t[12]*n+t[13]*o+t[14]*s+t[15]*l;var u=r[1],c=r[5],h=r[9],f=r[13];r[1]=t[0]*u+t[1]*c+t[2]*h+t[3]*f,r[5]=t[4]*u+t[5]*c+t[6]*h+t[7]*f,r[9]=t[8]*u+t[9]*c+t[10]*h+t[11]*f,r[13]=t[12]*u+t[13]*c+t[14]*h+t[15]*f;var d=r[2],p=r[6],m=r[10],v=r[14];r[2]=t[0]*d+t[1]*p+t[2]*m+t[3]*v,r[6]=t[4]*d+t[5]*p+t[6]*m+t[7]*v,r[10]=t[8]*d+t[9]*p+t[10]*m+t[11]*v,r[14]=t[12]*d+t[13]*p+t[14]*m+t[15]*v;var g=r[3],y=r[7],b=r[11],_=r[15];return r[3]=t[0]*g+t[1]*y+t[2]*b+t[3]*_,r[7]=t[4]*g+t[5]*y+t[6]*b+t[7]*_,r[11]=t[8]*g+t[9]*y+t[10]*b+t[11]*_,r[15]=t[12]*g+t[13]*y+t[14]*b+t[15]*_,this},i.default.Matrix.prototype.scale=function(e,t,r){return e instanceof i.default.Vector?(t=e.y,r=e.z,e=e.x):e instanceof Array&&(t=e[1],r=e[2],e=e[0]),this.mat4[0]*=e,this.mat4[1]*=e,this.mat4[2]*=e,this.mat4[3]*=e,this.mat4[4]*=t,this.mat4[5]*=t,this.mat4[6]*=t,this.mat4[7]*=t,this.mat4[8]*=r,this.mat4[9]*=r,this.mat4[10]*=r,this.mat4[11]*=r,this},i.default.Matrix.prototype.rotate=function(e,t,r,n){t instanceof i.default.Vector?(r=t.y,n=t.z,t=t.x):t instanceof Array&&(r=t[1],n=t[2],t=t[0]);var o=Math.sqrt(t*t+r*r+n*n);t*=1/o,r*=1/o,n*=1/o;var a=this.mat4[0],s=this.mat4[1],l=this.mat4[2],u=this.mat4[3],c=this.mat4[4],h=this.mat4[5],f=this.mat4[6],d=this.mat4[7],p=this.mat4[8],m=this.mat4[9],v=this.mat4[10],g=this.mat4[11],y=Math.sin(e),b=Math.cos(e),_=1-b,w=t*t*_+b,x=r*t*_+n*y,S=n*t*_-r*y,E=t*r*_-n*y,M=r*r*_+b,T=n*r*_+t*y,C=t*n*_+r*y,L=r*n*_-t*y,O=n*n*_+b;return this.mat4[0]=a*w+c*x+p*S,this.mat4[1]=s*w+h*x+m*S,this.mat4[2]=l*w+f*x+v*S,this.mat4[3]=u*w+d*x+g*S,this.mat4[4]=a*E+c*M+p*T,this.mat4[5]=s*E+h*M+m*T,this.mat4[6]=l*E+f*M+v*T,this.mat4[7]=u*E+d*M+g*T,this.mat4[8]=a*C+c*L+p*O,this.mat4[9]=s*C+h*L+m*O,this.mat4[10]=l*C+f*L+v*O,this.mat4[11]=u*C+d*L+g*O,this},i.default.Matrix.prototype.translate=function(e){var t=e[0],r=e[1],n=e[2]||0;this.mat4[12]+=this.mat4[0]*t+this.mat4[4]*r+this.mat4[8]*n,this.mat4[13]+=this.mat4[1]*t+this.mat4[5]*r+this.mat4[9]*n,this.mat4[14]+=this.mat4[2]*t+this.mat4[6]*r+this.mat4[10]*n,this.mat4[15]+=this.mat4[3]*t+this.mat4[7]*r+this.mat4[11]*n},i.default.Matrix.prototype.rotateX=function(e){this.rotate(e,1,0,0)},i.default.Matrix.prototype.rotateY=function(e){this.rotate(e,0,1,0)},i.default.Matrix.prototype.rotateZ=function(e){this.rotate(e,0,0,1)},i.default.Matrix.prototype.perspective=function(e,t,r,n){var i=1/Math.tan(e/2),o=1/(r-n);return this.mat4[0]=i/t,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=i,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=(n+r)*o,this.mat4[11]=-1,this.mat4[12]=0,this.mat4[13]=0,this.mat4[14]=2*n*r*o,this.mat4[15]=0,this},i.default.Matrix.prototype.ortho=function(e,t,r,n,i,o){var a=1/(e-t),s=1/(r-n),l=1/(i-o);return this.mat4[0]=-2*a,this.mat4[1]=0,this.mat4[2]=0,this.mat4[3]=0,this.mat4[4]=0,this.mat4[5]=-2*s,this.mat4[6]=0,this.mat4[7]=0,this.mat4[8]=0,this.mat4[9]=0,this.mat4[10]=2*l,this.mat4[11]=0,this.mat4[12]=(e+t)*a,this.mat4[13]=(n+r)*s,this.mat4[14]=(o+i)*l,this.mat4[15]=1,this};var s=i.default.Matrix;r.default=s},{"../core/main":36}],87:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.RenderBuffer=function(e,t,r,n,i,o){this.size=e,this.src=t,this.dst=r,this.attr=n,this._renderer=i,this.map=o},i.default.RenderBuffer.prototype._prepareBuffer=function(e,t){var r,n=t.attributes,i=this._renderer.GL;r=e.model?e.model:e;var o=n[this.attr];if(o){var a=e[this.dst],s=r[this.src];if(0<s.length){var l=!a;if(l&&(e[this.dst]=a=i.createBuffer()),i.bindBuffer(i.ARRAY_BUFFER,a),l||!1!==r.dirtyFlags[this.src]){var u=this.map,c=u?u(s):s;this._renderer._bindBuffer(a,i.ARRAY_BUFFER,c),r.dirtyFlags[this.src]=!1}t.enableAttrib(o,this.size)}}};var o=i.default.RenderBuffer;r.default=o},{"../core/main":36}],88:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}e("./p5.RenderBuffer"),o.default.RendererGL.prototype.beginShape=function(e){return this.immediateMode.shapeMode=void 0!==e?e:a.TRIANGLE_FAN,this.immediateMode.geometry.reset(),this},o.default.RendererGL.prototype.vertex=function(e,t){var r,n,i;r=n=i=0,3===arguments.length?r=arguments[2]:4===arguments.length?(n=arguments[2],i=arguments[3]):5===arguments.length&&(r=arguments[2],n=arguments[3],i=arguments[4]);var s=new o.default.Vector(e,t,r);this.immediateMode.geometry.vertices.push(s);var l=this.curFillColor||[.5,.5,.5,1];return this.immediateMode.geometry.vertexColors.push(l[0],l[1],l[2],l[3]),this.textureMode===a.IMAGE&&(null!==this._tex?0<this._tex.width&&0<this._tex.height&&(n/=this._tex.width,i/=this._tex.height):null===this._tex&&4<=arguments.length&&console.warn("You must first call texture() before using vertex() with image based u and v coordinates")),this.immediateMode.geometry.uvs.push(n,i),this.immediateMode._bezierVertex[0]=e,this.immediateMode._bezierVertex[1]=t,this.immediateMode._bezierVertex[2]=r,this.immediateMode._quadraticVertex[0]=e,this.immediateMode._quadraticVertex[1]=t,this.immediateMode._quadraticVertex[2]=r,this},o.default.RendererGL.prototype.endShape=function(e,t,r,n,i,o){return this.immediateMode.shapeMode===a.POINTS?this._drawPoints(this.immediateMode.geometry.vertices,this.immediateMode.buffers.point):(this._processVertices.apply(this,arguments),this._doFill&&1<this.immediateMode.geometry.vertices.length&&this._drawImmediateFill(),this._doStroke&&1<this.immediateMode.geometry.lineVertices.length&&this._drawImmediateStroke(),this.isBezier=!1,this.isQuadratic=!1,this.isCurve=!1,this.immediateMode._bezierVertex.length=0,this.immediateMode._quadraticVertex.length=0,this.immediateMode._curveVertex.length=0),this},o.default.RendererGL.prototype._processVertices=function(e){if(0!==this.immediateMode.geometry.vertices.length){var t=this._doStroke&&this.drawMode!==a.TEXTURE,r=e===a.CLOSE;t&&(this.immediateMode.geometry.edges=this._calculateEdges(this.immediateMode.shapeMode,this.immediateMode.geometry.vertices,r),this.immediateMode.geometry._edgesToVertices());var n=this.immediateMode.shapeMode===a.TESS;(this.isBezier||this.isQuadratic||this.isCurve||n)&&this.immediateMode.shapeMode!==a.LINES&&this._tesselateShape()}},o.default.RendererGL.prototype._calculateEdges=function(e,t,r){var n=[],i=0;switch(e){case a.TRIANGLE_STRIP:for(i=0;i<t.length-2;i++)n.push([i,i+1]),n.push([i,i+2]);n.push([i,i+1]);break;case a.TRIANGLES:for(i=0;i<t.length-2;i+=3)n.push([i,i+1]),n.push([i+1,i+2]),n.push([i+2,i]);break;case a.LINES:for(i=0;i<t.length-1;i+=2)n.push([i,i+1]);break;default:for(i=0;i<t.length-1;i++)n.push([i,i+1])}return r&&n.push([t.length-1,0]),n},o.default.RendererGL.prototype._tesselateShape=function(){this.immediateMode.shapeMode=a.TRIANGLES;var e=[new Float32Array(this._vToNArray(this.immediateMode.geometry.vertices))],t=this._triangulate(e);this.immediateMode.geometry.vertices=[];for(var r=0,n=t.length;r<n;r+=3)this.vertex(t[r],t[r+1],t[r+2])},o.default.RendererGL.prototype._drawImmediateFill=function(){var e=this.GL,t=this._getImmediateFillShader();this._calculateNormals(this.immediateMode.geometry),this._setFillUniforms(t);var r=!0,n=!1,i=void 0;try{for(var o,s=this.immediateMode.buffers.fill[Symbol.iterator]();!(r=(o=s.next()).done);r=!0)o.value._prepareBuffer(this.immediateMode.geometry,t)}catch(e){n=!0,i=e}finally{try{r||null==s.return||s.return()}finally{if(n)throw i}}this.immediateMode.shapeMode!==a.LINE_STRIP&&this.immediateMode.shapeMode!==a.LINES||(this.immediateMode.shapeMode=a.TRIANGLE_FAN),this._applyColorBlend(this.curFillColor),e.drawArrays(this.immediateMode.shapeMode,0,this.immediateMode.geometry.vertices.length),t.unbindShader()},o.default.RendererGL.prototype._drawImmediateStroke=function(){var e=this.GL,t=this._getImmediateStrokeShader();this._setStrokeUniforms(t);var r=!0,n=!1,i=void 0;try{for(var o,a=this.immediateMode.buffers.stroke[Symbol.iterator]();!(r=(o=a.next()).done);r=!0)o.value._prepareBuffer(this.immediateMode.geometry,t)}catch(e){n=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw i}}this._applyColorBlend(this.curStrokeColor),e.drawArrays(e.TRIANGLES,0,this.immediateMode.geometry.lineVertices.length),t.unbindShader()},o.default.RendererGL.prototype._calculateNormals=function(e){e.vertices.forEach((function(){e.vertexNormals.push(new o.default.Vector(0,0,1))}))};var l=o.default.RendererGL;r.default=l},{"../core/constants":26,"../core/main":36,"./p5.RenderBuffer":87}],89:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};e("./p5.RendererGL"),e("./p5.RenderBuffer");var o=0;i.default.RendererGL.prototype._initBufferDefaults=function(e){if(this._freeBuffers(e),1e3<++o){var t=Object.keys(this.retainedMode.geometry)[0];delete this.retainedMode.geometry[t],o--}return this.retainedMode.geometry[e]={}},i.default.RendererGL.prototype._freeBuffers=function(e){var t=this.retainedMode.geometry[e];if(t){delete this.retainedMode.geometry[e],o--;var r=this.GL;t.indexBuffer&&r.deleteBuffer(t.indexBuffer),n(this.retainedMode.buffers.stroke),n(this.retainedMode.buffers.fill)}function n(e){var n=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var l=a.value;t[l.dst]&&(r.deleteBuffer(t[l.dst]),t[l.dst]=null)}}catch(e){i=!0,o=e}finally{try{n||null==s.return||s.return()}finally{if(i)throw o}}}},i.default.RendererGL.prototype.createBuffers=function(e,t){var r=this.GL,n=this._initBufferDefaults(e);n.model=t;var o=n.indexBuffer;if(t.faces.length){o=o||(n.indexBuffer=r.createBuffer());var a=i.default.RendererGL.prototype._flatten(t.faces);this._bindBuffer(o,r.ELEMENT_ARRAY_BUFFER,a,Uint16Array),n.vertexCount=3*t.faces.length}else o&&(r.deleteBuffer(o),n.indexBuffer=null),n.vertexCount=t.vertices?t.vertices.length:0;return n.lineVertexCount=t.lineVertices?t.lineVertices.length:0,n},i.default.RendererGL.prototype.drawBuffers=function(e){var t=this.GL,r=this.retainedMode.geometry[e];if(this._doStroke&&0<r.lineVertexCount){var n=this._getRetainedStrokeShader();this._setStrokeUniforms(n);var i=!0,o=!1,a=void 0;try{for(var s,l=this.retainedMode.buffers.stroke[Symbol.iterator]();!(i=(s=l.next()).done);i=!0)s.value._prepareBuffer(r,n)}catch(e){o=!0,a=e}finally{try{i||null==l.return||l.return()}finally{if(o)throw a}}this._applyColorBlend(this.curStrokeColor),this._drawArrays(t.TRIANGLES,e),n.unbindShader()}if(this._doFill){var u=this._getRetainedFillShader();this._setFillUniforms(u);var c=!0,h=!1,f=void 0;try{for(var d,p=this.retainedMode.buffers.fill[Symbol.iterator]();!(c=(d=p.next()).done);c=!0)d.value._prepareBuffer(r,u)}catch(e){h=!0,f=e}finally{try{c||null==p.return||p.return()}finally{if(h)throw f}}r.indexBuffer&&this._bindBuffer(r.indexBuffer,t.ELEMENT_ARRAY_BUFFER),this._applyColorBlend(this.curFillColor),this._drawElements(t.TRIANGLES,e),u.unbindShader()}return this},i.default.RendererGL.prototype.drawBuffersScaled=function(e,t,r,n){var i=this.uMVMatrix.copy();try{this.uMVMatrix.scale(t,r,n),this.drawBuffers(e)}finally{this.uMVMatrix=i}},i.default.RendererGL.prototype._drawArrays=function(e,t){return this.GL.drawArrays(e,0,this.retainedMode.geometry[t].lineVertexCount),this},i.default.RendererGL.prototype._drawElements=function(e,t){var r=this.retainedMode.geometry[t],n=this.GL;r.indexBuffer?n.drawElements(n.TRIANGLES,r.vertexCount,n.UNSIGNED_SHORT,0):n.drawArrays(e||n.TRIANGLES,0,r.vertexCount)},i.default.RendererGL.prototype._drawPoints=function(e,t){var r=this.GL,n=this._getImmediatePointShader();this._setPointUniforms(n),this._bindBuffer(t,r.ARRAY_BUFFER,this._vToNArray(e),Float32Array,r.STATIC_DRAW),n.enableAttrib(n.attributes.aPosition,3),r.drawArrays(r.Points,0,e.length),n.unbindShader()};var a=i.default.RendererGL;r.default=a},{"../core/main":36,"./p5.RenderBuffer":87,"./p5.RendererGL":90}],90:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i=l(e("../core/main")),o=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants")),a=l(e("libtess"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e){return e&&e.__esModule?e:{default:e}}function u(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}e("./p5.Shader"),e("./p5.Camera"),e("../core/p5.Renderer"),e("./p5.Matrix"),e("path");var c="precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];\t\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n",h={immediateVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",vertexColorVert:"attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n",vertexColorFrag:"precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}",normalVert:"attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n",normalFrag:"precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",basicFrag:"precision mediump float;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}",lightVert:c+"// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n}\n",lightTextureFrag:"precision highp float;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * vDiffuseColor + vSpecularColor;\n  }\n}",phongVert:"precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n}\n",phongFrag:c+"// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform vec4 uMaterialColor;\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  if(uEmissive && !isTexture) {\n    gl_FragColor = uMaterialColor;\n  }\n  else {\n    gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) * (uTint / vec4(255, 255, 255, 255)) : uMaterialColor;\n    gl_FragColor.rgb = gl_FragColor.rgb * (diffuse + vAmbientColor) + specular;\n  }\n}",fontVert:"precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n",fontFrag:"#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision highp int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}",lineVert:"/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  vec3 scale = vec3(0.9995);\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  vec2 curPerspScale;\n\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n}\n",lineFrag:"precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}",pointVert:"attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}",pointFrag:"precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}"};i.default.RendererGL=function(e,t,r,n){return i.default.Renderer.call(this,e,t,r),this._setAttributeDefaults(t),this._initContext(),this.isP3D=!0,this.GL=this.drawingContext,this._pInst._setProperty("drawingContext",this.drawingContext),this._isErasing=!1,this._enableLighting=!1,this.ambientLightColors=[],this.specularColors=[1,1,1],this.directionalLightDirections=[],this.directionalLightDiffuseColors=[],this.directionalLightSpecularColors=[],this.pointLightPositions=[],this.pointLightDiffuseColors=[],this.pointLightSpecularColors=[],this.spotLightPositions=[],this.spotLightDirections=[],this.spotLightDiffuseColors=[],this.spotLightSpecularColors=[],this.spotLightAngle=[],this.spotLightConc=[],this.drawMode=o.FILL,this.curFillColor=this._cachedFillStyle=[1,1,1,1],this.curStrokeColor=this._cachedStrokeStyle=[0,0,0,1],this.curBlendMode=o.BLEND,this._cachedBlendMode=void 0,this.blendExt=this.GL.getExtension("EXT_blend_minmax"),this._isBlending=!1,this._useSpecularMaterial=!1,this._useEmissiveMaterial=!1,this._useNormalMaterial=!1,this._useShininess=1,this._tint=[255,255,255,255],this.constantAttenuation=1,this.linearAttenuation=0,this.quadraticAttenuation=0,this.uMVMatrix=new i.default.Matrix,this.uPMatrix=new i.default.Matrix,this.uNMatrix=new i.default.Matrix("mat3"),this._curCamera=new i.default.Camera(this),this._curCamera._computeCameraDefaultSettings(),this._curCamera._setDefaultCamera(),this._defaultLightShader=void 0,this._defaultImmediateModeShader=void 0,this._defaultNormalShader=void 0,this._defaultColorShader=void 0,this._defaultPointShader=void 0,this.userFillShader=void 0,this.userStrokeShader=void 0,this.userPointShader=void 0,this.retainedMode={geometry:{},buffers:{stroke:[new i.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new i.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],fill:[new i.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new i.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new i.default.RenderBuffer(4,"vertexColors","colorBuffer","aMaterialColor",this),new i.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new i.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],text:[new i.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new i.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)]}},this.immediateMode={geometry:new i.default.Geometry,shapeMode:o.TRIANGLE_FAN,_bezierVertex:[],_quadraticVertex:[],_curveVertex:[],buffers:{fill:[new i.default.RenderBuffer(3,"vertices","vertexBuffer","aPosition",this,this._vToNArray),new i.default.RenderBuffer(3,"vertexNormals","normalBuffer","aNormal",this,this._vToNArray),new i.default.RenderBuffer(4,"vertexColors","colorBuffer","aVertexColor",this),new i.default.RenderBuffer(3,"vertexAmbients","ambientBuffer","aAmbientColor",this),new i.default.RenderBuffer(2,"uvs","uvBuffer","aTexCoord",this,this._flatten)],stroke:[new i.default.RenderBuffer(3,"lineVertices","lineVertexBuffer","aPosition",this,this._flatten),new i.default.RenderBuffer(4,"lineNormals","lineNormalBuffer","aDirection",this,this._flatten)],point:this.GL.createBuffer()}},this.pointSize=5,this.curStrokeWeight=1,this.textures=[],this.textureMode=o.IMAGE,this.textureWrapX=o.CLAMP,this.textureWrapY=o.CLAMP,this._tex=null,this._curveTightness=6,this._lookUpTableBezier=[],this._lookUpTableQuadratic=[],this._lutBezierDetail=0,this._lutQuadraticDetail=0,this._tessy=this._initTessy(),this.fontInfos={},this._curShader=void 0,this},i.default.RendererGL.prototype=Object.create(i.default.Renderer.prototype),i.default.RendererGL.prototype._setAttributeDefaults=function(e){var t={alpha:!0,depth:!0,stencil:!0,antialias:navigator.userAgent.toLowerCase().includes("safari"),premultipliedAlpha:!1,preserveDrawingBuffer:!0,perPixelLighting:!0};null===e._glAttributes?e._glAttributes=t:e._glAttributes=Object.assign(t,e._glAttributes)},i.default.RendererGL.prototype._initContext=function(){try{if(this.drawingContext=this.canvas.getContext("webgl",this._pInst._glAttributes)||this.canvas.getContext("experimental-webgl",this._pInst._glAttributes),null===this.drawingContext)throw new Error("Error creating webgl context");var e=this.drawingContext;e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),this._viewport=this.drawingContext.getParameter(this.drawingContext.VIEWPORT)}catch(e){throw e}},i.default.RendererGL.prototype._resetContext=function(e,t){var r=this.width,n=this.height,o=this.canvas.id,a=this._pInst instanceof i.default.Graphics;if(a){var s=this._pInst;s.canvas.parentNode.removeChild(s.canvas),s.canvas=document.createElement("canvas"),(s._pInst._userNode||document.body).appendChild(s.canvas),i.default.Element.call(s,s.canvas,s._pInst),s.width=r,s.height=n}else{var l=this.canvas;l&&l.parentNode.removeChild(l),(l=document.createElement("canvas")).id=o,this._pInst._userNode?this._pInst._userNode.appendChild(l):document.body.appendChild(l),this._pInst.canvas=l}var u=new i.default.RendererGL(this._pInst.canvas,this._pInst,!a);this._pInst._setProperty("_renderer",u),u.resize(r,n),u._applyDefaults(),a||this._pInst._elements.push(u),"function"==typeof t&&setTimeout((function(){t.apply(window._renderer,e)}),0)},i.default.prototype.setAttributes=function(e,t){if(void 0!==this._glAttributes){var r=!0;if(void 0!==t?(null===this._glAttributes&&(this._glAttributes={}),this._glAttributes[e]!==t&&(this._glAttributes[e]=t,r=!1)):e instanceof Object&&this._glAttributes!==e&&(this._glAttributes=e,r=!1),this._renderer.isP3D&&!r){if(!this._setupDone)for(var n in this._renderer.retainedMode.geometry)if(this._renderer.retainedMode.geometry.hasOwnProperty(n))return void console.error("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");this.push(),this._renderer._resetContext(),this.pop(),this._renderer._curCamera&&(this._renderer._curCamera._renderer=this._renderer)}}else console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.")},i.default.RendererGL.prototype._update=function(){this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0],this._curCamera.cameraMatrix.mat4[1],this._curCamera.cameraMatrix.mat4[2],this._curCamera.cameraMatrix.mat4[3],this._curCamera.cameraMatrix.mat4[4],this._curCamera.cameraMatrix.mat4[5],this._curCamera.cameraMatrix.mat4[6],this._curCamera.cameraMatrix.mat4[7],this._curCamera.cameraMatrix.mat4[8],this._curCamera.cameraMatrix.mat4[9],this._curCamera.cameraMatrix.mat4[10],this._curCamera.cameraMatrix.mat4[11],this._curCamera.cameraMatrix.mat4[12],this._curCamera.cameraMatrix.mat4[13],this._curCamera.cameraMatrix.mat4[14],this._curCamera.cameraMatrix.mat4[15]),this.ambientLightColors.length=0,this.specularColors=[1,1,1],this.directionalLightDirections.length=0,this.directionalLightDiffuseColors.length=0,this.directionalLightSpecularColors.length=0,this.pointLightPositions.length=0,this.pointLightDiffuseColors.length=0,this.pointLightSpecularColors.length=0,this.spotLightPositions.length=0,this.spotLightDirections.length=0,this.spotLightDiffuseColors.length=0,this.spotLightSpecularColors.length=0,this.spotLightAngle.length=0,this.spotLightConc.length=0,this._enableLighting=!1,this._tint=[255,255,255,255],this.GL.clear(this.GL.DEPTH_BUFFER_BIT)},i.default.RendererGL.prototype.background=function(){var e,t=(e=this._pInst).color.apply(e,arguments),r=t.levels[0]/255,n=t.levels[1]/255,i=t.levels[2]/255,o=t.levels[3]/255;this.GL.clearColor(r,n,i,o),this.GL.clear(this.GL.COLOR_BUFFER_BIT)},i.default.RendererGL.prototype.fill=function(e,t,r,n){var a=i.default.prototype.color.apply(this._pInst,arguments);this.curFillColor=a._array,this.drawMode=o.FILL,this._useNormalMaterial=!1,this._tex=null},i.default.RendererGL.prototype.stroke=function(e,t,r,n){arguments[3]=255;var o=i.default.prototype.color.apply(this._pInst,arguments);this.curStrokeColor=o._array},i.default.RendererGL.prototype.strokeCap=function(e){console.error("Sorry, strokeCap() is not yet implemented in WEBGL mode")},i.default.RendererGL.prototype.strokeJoin=function(e){console.error("Sorry, strokeJoin() is not yet implemented in WEBGL mode")},i.default.RendererGL.prototype.filter=function(e){console.error("filter() does not work in WEBGL mode")},i.default.RendererGL.prototype.blendMode=function(e){e===o.DARKEST||e===o.LIGHTEST||e===o.ADD||e===o.BLEND||e===o.SUBTRACT||e===o.SCREEN||e===o.EXCLUSION||e===o.REPLACE||e===o.MULTIPLY||e===o.REMOVE?this.curBlendMode=e:e!==o.BURN&&e!==o.OVERLAY&&e!==o.HARD_LIGHT&&e!==o.SOFT_LIGHT&&e!==o.DODGE||console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.")},i.default.RendererGL.prototype.erase=function(e,t){this._isErasing||(this._applyBlendMode(o.REMOVE),this._isErasing=!0,this._cachedFillStyle=this.curFillColor.slice(),this.curFillColor=[1,1,1,e/255],this._cachedStrokeStyle=this.curStrokeColor.slice(),this.curStrokeColor=[1,1,1,t/255])},i.default.RendererGL.prototype.noErase=function(){this._isErasing&&(this._isErasing=!1,this.curFillColor=this._cachedFillStyle.slice(),this.curStrokeColor=this._cachedStrokeStyle.slice(),this.blendMode(this._cachedBlendMode))},i.default.RendererGL.prototype.strokeWeight=function(e){this.curStrokeWeight!==e&&(this.pointSize=e,this.curStrokeWeight=e)},i.default.RendererGL.prototype._getPixel=function(e,t){var r;return r=new Uint8Array(4),this.drawingContext.readPixels(e,t,1,1,this.drawingContext.RGBA,this.drawingContext.UNSIGNED_BYTE,r),[r[0],r[1],r[2],r[3]]},i.default.RendererGL.prototype.loadPixels=function(){var e=this._pixelsState;if(!0===this._pInst._glAttributes.preserveDrawingBuffer){var t=e.pixels,r=this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4;t instanceof Uint8Array&&t.length===r||(t=new Uint8Array(r),this._pixelsState._setProperty("pixels",t));var n=this._pInst._pixelDensity;this.GL.readPixels(0,0,this.width*n,this.height*n,this.GL.RGBA,this.GL.UNSIGNED_BYTE,t)}else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.")},i.default.RendererGL.prototype.geometryInHash=function(e){return void 0!==this.retainedMode.geometry[e]},i.default.RendererGL.prototype.resize=function(e,t){i.default.Renderer.prototype.resize.call(this,e,t),this.GL.viewport(0,0,this.GL.drawingBufferWidth,this.GL.drawingBufferHeight),this._viewport=this.GL.getParameter(this.GL.VIEWPORT),this._curCamera._resize();var r=this._pixelsState;void 0!==r.pixels&&r._setProperty("pixels",new Uint8Array(this.GL.drawingBufferWidth*this.GL.drawingBufferHeight*4))},i.default.RendererGL.prototype.clear=function(){var e=(arguments.length<=0?void 0:arguments[0])||0,t=(arguments.length<=1?void 0:arguments[1])||0,r=(arguments.length<=2?void 0:arguments[2])||0,n=(arguments.length<=3?void 0:arguments[3])||0;this.GL.clearColor(e,t,r,n),this.GL.clear(this.GL.COLOR_BUFFER_BIT|this.GL.DEPTH_BUFFER_BIT)},i.default.RendererGL.prototype.applyMatrix=function(e,t,r,n,o,a){16===arguments.length?i.default.Matrix.prototype.apply.apply(this.uMVMatrix,arguments):this.uMVMatrix.apply([e,t,0,0,r,n,0,0,0,0,1,0,o,a,0,1])},i.default.RendererGL.prototype.translate=function(e,t,r){return e instanceof i.default.Vector&&(r=e.z,t=e.y,e=e.x),this.uMVMatrix.translate([e,t,r]),this},i.default.RendererGL.prototype.scale=function(e,t,r){return this.uMVMatrix.scale(e,t,r),this},i.default.RendererGL.prototype.rotate=function(e,t){return void 0===t?this.rotateZ(e):(i.default.Matrix.prototype.rotate.apply(this.uMVMatrix,arguments),this)},i.default.RendererGL.prototype.rotateX=function(e){return this.rotate(e,1,0,0),this},i.default.RendererGL.prototype.rotateY=function(e){return this.rotate(e,0,1,0),this},i.default.RendererGL.prototype.rotateZ=function(e){return this.rotate(e,0,0,1),this},i.default.RendererGL.prototype.push=function(){var e=i.default.Renderer.prototype.push.apply(this),t=e.properties;return t.uMVMatrix=this.uMVMatrix.copy(),t.uPMatrix=this.uPMatrix.copy(),t._curCamera=this._curCamera,this._curCamera=this._curCamera.copy(),t.ambientLightColors=this.ambientLightColors.slice(),t.specularColors=this.specularColors.slice(),t.directionalLightDirections=this.directionalLightDirections.slice(),t.directionalLightDiffuseColors=this.directionalLightDiffuseColors.slice(),t.directionalLightSpecularColors=this.directionalLightSpecularColors.slice(),t.pointLightPositions=this.pointLightPositions.slice(),t.pointLightDiffuseColors=this.pointLightDiffuseColors.slice(),t.pointLightSpecularColors=this.pointLightSpecularColors.slice(),t.spotLightPositions=this.spotLightPositions.slice(),t.spotLightDirections=this.spotLightDirections.slice(),t.spotLightDiffuseColors=this.spotLightDiffuseColors.slice(),t.spotLightSpecularColors=this.spotLightSpecularColors.slice(),t.spotLightAngle=this.spotLightAngle.slice(),t.spotLightConc=this.spotLightConc.slice(),t.userFillShader=this.userFillShader,t.userStrokeShader=this.userStrokeShader,t.userPointShader=this.userPointShader,t.pointSize=this.pointSize,t.curStrokeWeight=this.curStrokeWeight,t.curStrokeColor=this.curStrokeColor,t.curFillColor=this.curFillColor,t._useSpecularMaterial=this._useSpecularMaterial,t._useEmissiveMaterial=this._useEmissiveMaterial,t._useShininess=this._useShininess,t.constantAttenuation=this.constantAttenuation,t.linearAttenuation=this.linearAttenuation,t.quadraticAttenuation=this.quadraticAttenuation,t._enableLighting=this._enableLighting,t._useNormalMaterial=this._useNormalMaterial,t._tex=this._tex,t.drawMode=this.drawMode,e},i.default.RendererGL.prototype.resetMatrix=function(){return this.uMVMatrix=i.default.Matrix.identity(this._pInst),this},i.default.RendererGL.prototype._getImmediateStrokeShader=function(){var e=this.userStrokeShader;return e&&e.isStrokeShader()?e:this._getLineShader()},i.default.RendererGL.prototype._getRetainedStrokeShader=i.default.RendererGL.prototype._getImmediateStrokeShader,i.default.RendererGL.prototype._getImmediateFillShader=function(){var e=this.userFillShader;if(this._useNormalMaterial&&(!e||!e.isNormalShader()))return this._getNormalShader();if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getImmediateModeShader();return e},i.default.RendererGL.prototype._getRetainedFillShader=function(){if(this._useNormalMaterial)return this._getNormalShader();var e=this.userFillShader;if(this._enableLighting){if(!e||!e.isLightShader())return this._getLightShader()}else if(this._tex){if(!e||!e.isTextureShader())return this._getLightShader()}else if(!e)return this._getColorShader();return e},i.default.RendererGL.prototype._getImmediatePointShader=function(){var e=this.userPointShader;return e&&e.isPointShader()?e:this._getPointShader()},i.default.RendererGL.prototype._getRetainedLineShader=i.default.RendererGL.prototype._getImmediateLineShader,i.default.RendererGL.prototype._getLightShader=function(){return this._defaultLightShader||(this._pInst._glAttributes.perPixelLighting?this._defaultLightShader=new i.default.Shader(this,h.phongVert,h.phongFrag):this._defaultLightShader=new i.default.Shader(this,h.lightVert,h.lightTextureFrag)),this._defaultLightShader},i.default.RendererGL.prototype._getImmediateModeShader=function(){return this._defaultImmediateModeShader||(this._defaultImmediateModeShader=new i.default.Shader(this,h.immediateVert,h.vertexColorFrag)),this._defaultImmediateModeShader},i.default.RendererGL.prototype._getNormalShader=function(){return this._defaultNormalShader||(this._defaultNormalShader=new i.default.Shader(this,h.normalVert,h.normalFrag)),this._defaultNormalShader},i.default.RendererGL.prototype._getColorShader=function(){return this._defaultColorShader||(this._defaultColorShader=new i.default.Shader(this,h.normalVert,h.basicFrag)),this._defaultColorShader},i.default.RendererGL.prototype._getPointShader=function(){return this._defaultPointShader||(this._defaultPointShader=new i.default.Shader(this,h.pointVert,h.pointFrag)),this._defaultPointShader},i.default.RendererGL.prototype._getLineShader=function(){return this._defaultLineShader||(this._defaultLineShader=new i.default.Shader(this,h.lineVert,h.lineFrag)),this._defaultLineShader},i.default.RendererGL.prototype._getFontShader=function(){return this._defaultFontShader||(this.GL.getExtension("OES_standard_derivatives"),this._defaultFontShader=new i.default.Shader(this,h.fontVert,h.fontFrag)),this._defaultFontShader},i.default.RendererGL.prototype._getEmptyTexture=function(){if(!this._emptyTexture){var e=new i.default.Image(1,1);e.set(0,0,255),this._emptyTexture=new i.default.Texture(this,e)}return this._emptyTexture},i.default.RendererGL.prototype.getTexture=function(e){var t=this.textures,r=!0,n=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var l=a.value;if(l.src===e)return l}}catch(e){n=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(n)throw o}}var u=new i.default.Texture(this,e);return t.push(u),u},i.default.RendererGL.prototype._setStrokeUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uStrokeWeight",this.curStrokeWeight)},i.default.RendererGL.prototype._setFillUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curFillColor),e.setUniform("isTexture",!!this._tex),this._tex&&e.setUniform("uSampler",this._tex),e.setUniform("uTint",this._tint),e.setUniform("uSpecular",this._useSpecularMaterial),e.setUniform("uEmissive",this._useEmissiveMaterial),e.setUniform("uShininess",this._useShininess),e.setUniform("uUseLighting",this._enableLighting);var t=this.pointLightDiffuseColors.length/3;e.setUniform("uPointLightCount",t),e.setUniform("uPointLightLocation",this.pointLightPositions),e.setUniform("uPointLightDiffuseColors",this.pointLightDiffuseColors),e.setUniform("uPointLightSpecularColors",this.pointLightSpecularColors);var r=this.directionalLightDiffuseColors.length/3;e.setUniform("uDirectionalLightCount",r),e.setUniform("uLightingDirection",this.directionalLightDirections),e.setUniform("uDirectionalDiffuseColors",this.directionalLightDiffuseColors),e.setUniform("uDirectionalSpecularColors",this.directionalLightSpecularColors);var n=this.ambientLightColors.length/3;e.setUniform("uAmbientLightCount",n),e.setUniform("uAmbientColor",this.ambientLightColors);var i=this.spotLightDiffuseColors.length/3;e.setUniform("uSpotLightCount",i),e.setUniform("uSpotLightAngle",this.spotLightAngle),e.setUniform("uSpotLightConc",this.spotLightConc),e.setUniform("uSpotLightDiffuseColors",this.spotLightDiffuseColors),e.setUniform("uSpotLightSpecularColors",this.spotLightSpecularColors),e.setUniform("uSpotLightLocation",this.spotLightPositions),e.setUniform("uSpotLightDirection",this.spotLightDirections),e.setUniform("uConstantAttenuation",this.constantAttenuation),e.setUniform("uLinearAttenuation",this.linearAttenuation),e.setUniform("uQuadraticAttenuation",this.quadraticAttenuation),e.bindTextures()},i.default.RendererGL.prototype._setPointUniforms=function(e){e.bindShader(),e.setUniform("uMaterialColor",this.curStrokeColor),e.setUniform("uPointSize",this.pointSize*this._pInst._pixelDensity)},i.default.RendererGL.prototype._bindBuffer=function(e,t,r,n,i){if(t=t||this.GL.ARRAY_BUFFER,this.GL.bindBuffer(t,e),void 0!==r){var o=new(n||Float32Array)(r);this.GL.bufferData(t,o,i||this.GL.STATIC_DRAW)}},i.default.RendererGL.prototype._arraysEqual=function(e,t){var r=e.length;if(r!==t.length)return!1;for(var n=0;n<r;n++)if(e[n]!==t[n])return!1;return!0},i.default.RendererGL.prototype._isTypedArray=function(e){return Float32Array,Float64Array,Int16Array,Uint16Array,e instanceof Uint32Array},i.default.RendererGL.prototype._flatten=function(e){if(0===e.length)return[];if(2e4<e.length){var t,r=Object.prototype.toString,n=[],i=e.slice();for(t=i.pop();"[object Array]"===r.call(t)?i.push.apply(i,u(t)):n.push(t),i.length&&void 0!==(t=i.pop()););return n.reverse(),n}var o;return(o=[]).concat.apply(o,u(e))},i.default.RendererGL.prototype._vToNArray=function(e){var t=[],r=!0,n=!1,i=void 0;try{for(var o,a=e[Symbol.iterator]();!(r=(o=a.next()).done);r=!0){var s=o.value;t.push(s.x,s.y,s.z)}}catch(e){n=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw i}}return t},i.default.prototype._assert3d=function(e){if(!this._renderer.isP3D)throw new Error("".concat(e,"() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."))},i.default.RendererGL.prototype._initTessy=function(){var e=new a.default.GluTesselator;return e.gluTessCallback(a.default.gluEnum.GLU_TESS_VERTEX_DATA,(function(e,t){t[t.length]=e[0],t[t.length]=e[1],t[t.length]=e[2]})),e.gluTessCallback(a.default.gluEnum.GLU_TESS_BEGIN,(function(e){e!==a.default.primitiveType.GL_TRIANGLES&&console.log("expected TRIANGLES but got type: ".concat(e))})),e.gluTessCallback(a.default.gluEnum.GLU_TESS_ERROR,(function(e){console.log("error callback"),console.log("error number: ".concat(e))})),e.gluTessCallback(a.default.gluEnum.GLU_TESS_COMBINE,(function(e,t,r){return[e[0],e[1],e[2]]})),e.gluTessCallback(a.default.gluEnum.GLU_TESS_EDGE_FLAG,(function(e){})),e},i.default.RendererGL.prototype._triangulate=function(e){this._tessy.gluTessNormal(0,0,1);var t=[];this._tessy.gluTessBeginPolygon(t);for(var r=0;r<e.length;r++){this._tessy.gluTessBeginContour();for(var n=e[r],i=0;i<n.length;i+=3){var o=[n[i],n[i+1],n[i+2]];this._tessy.gluTessVertex(o,o)}this._tessy.gluTessEndContour()}return this._tessy.gluTessEndPolygon(),t},i.default.RendererGL.prototype._bezierCoefficients=function(e){var t=e*e,r=1-e,n=r*r;return[n*r,3*n*e,3*r*t,t*e]},i.default.RendererGL.prototype._quadraticCoefficients=function(e){var t=1-e;return[t*t,2*t*e,e*e]},i.default.RendererGL.prototype._bezierToCatmull=function(e){return[e[1],e[1]+(e[2]-e[0])/this._curveTightness,e[2]-(e[3]-e[1])/this._curveTightness,e[2]]};var f=i.default.RendererGL;r.default=f},{"../core/constants":26,"../core/main":36,"../core/p5.Renderer":39,"./p5.Camera":84,"./p5.Matrix":86,"./p5.Shader":91,libtess:10,path:13}],91:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,i=(n=e("../core/main"))&&n.__esModule?n:{default:n};i.default.Shader=function(e,t,r){this._renderer=e,this._vertSrc=t,this._fragSrc=r,this._vertShader=-1,this._fragShader=-1,this._glProgram=0,this._loadedAttributes=!1,this.attributes={},this._loadedUniforms=!1,this.uniforms={},this._bound=!1,this.samplers=[]},i.default.Shader.prototype.init=function(){if(0===this._glProgram){var e=this._renderer.GL;if(this._vertShader=e.createShader(e.VERTEX_SHADER),e.shaderSource(this._vertShader,this._vertSrc),e.compileShader(this._vertShader),!e.getShaderParameter(this._vertShader,e.COMPILE_STATUS))return console.error("Yikes! An error occurred compiling the vertex shader:".concat(e.getShaderInfoLog(this._vertShader))),null;if(this._fragShader=e.createShader(e.FRAGMENT_SHADER),e.shaderSource(this._fragShader,this._fragSrc),e.compileShader(this._fragShader),!e.getShaderParameter(this._fragShader,e.COMPILE_STATUS))return console.error("Darn! An error occurred compiling the fragment shader:".concat(e.getShaderInfoLog(this._fragShader))),null;this._glProgram=e.createProgram(),e.attachShader(this._glProgram,this._vertShader),e.attachShader(this._glProgram,this._fragShader),e.linkProgram(this._glProgram),e.getProgramParameter(this._glProgram,e.LINK_STATUS)||console.error("Snap! Error linking shader program: ".concat(e.getProgramInfoLog(this._glProgram))),this._loadAttributes(),this._loadUniforms()}return this},i.default.Shader.prototype._loadAttributes=function(){if(!this._loadedAttributes){this.attributes={};for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_ATTRIBUTES),r=0;r<t;++r){var n=e.getActiveAttrib(this._glProgram,r),i=n.name,o=e.getAttribLocation(this._glProgram,i),a={};a.name=i,a.location=o,a.index=r,a.type=n.type,a.size=n.size,this.attributes[i]=a}this._loadedAttributes=!0}},i.default.Shader.prototype._loadUniforms=function(){if(!this._loadedUniforms){for(var e=this._renderer.GL,t=e.getProgramParameter(this._glProgram,e.ACTIVE_UNIFORMS),r=0,n=0;n<t;++n){var i=e.getActiveUniform(this._glProgram,n),o={};o.location=e.getUniformLocation(this._glProgram,i.name),o.size=i.size;var a=i.name;1<i.size&&(a=a.substring(0,a.indexOf("[0]"))),o.name=a,o.type=i.type,o._cachedData=void 0,o.type===e.SAMPLER_2D&&(o.samplerIndex=r,r++,this.samplers.push(o)),o.isArray=o.type===e.FLOAT_MAT3||o.type===e.FLOAT_MAT4||o.type===e.FLOAT_VEC2||o.type===e.FLOAT_VEC3||o.type===e.FLOAT_VEC4||o.type===e.INT_VEC2||o.type===e.INT_VEC3||o.type===e.INT_VEC4,this.uniforms[a]=o}this._loadedUniforms=!0}},i.default.Shader.prototype.compile=function(){},i.default.Shader.prototype.bindShader=function(){this.init(),this._bound||(this.useProgram(),this._bound=!0,this._setMatrixUniforms(),this.setUniform("uViewport",this._renderer._viewport))},i.default.Shader.prototype.unbindShader=function(){return this._bound&&(this.unbindTextures(),this._bound=!1),this},i.default.Shader.prototype.bindTextures=function(){var e=this._renderer.GL,t=!0,r=!1,n=void 0;try{for(var i,o=this.samplers[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value,s=a.texture;void 0===s&&(s=this._renderer._getEmptyTexture()),e.activeTexture(e.TEXTURE0+a.samplerIndex),s.bindTexture(),s.update(),e.uniform1i(a.location,a.samplerIndex)}}catch(e){r=!0,n=e}finally{try{t||null==o.return||o.return()}finally{if(r)throw n}}},i.default.Shader.prototype.updateTextures=function(){var e=!0,t=!1,r=void 0;try{for(var n,i=this.samplers[Symbol.iterator]();!(e=(n=i.next()).done);e=!0){var o=n.value.texture;o&&o.update()}}catch(e){t=!0,r=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw r}}},i.default.Shader.prototype.unbindTextures=function(){},i.default.Shader.prototype._setMatrixUniforms=function(){this.setUniform("uProjectionMatrix",this._renderer.uPMatrix.mat4),this.isStrokeShader()&&("default"===this._renderer._curCamera.cameraType?this.setUniform("uPerspective",1):this.setUniform("uPerspective",0)),this.setUniform("uModelViewMatrix",this._renderer.uMVMatrix.mat4),this.setUniform("uViewMatrix",this._renderer._curCamera.cameraMatrix.mat4),this.uniforms.uNormalMatrix&&(this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix),this.setUniform("uNormalMatrix",this._renderer.uNMatrix.mat3))},i.default.Shader.prototype.useProgram=function(){var e=this._renderer.GL;return this._renderer._curShader!==this&&(e.useProgram(this._glProgram),this._renderer._curShader=this),this},i.default.Shader.prototype.setUniform=function(e,t){var r=this.uniforms[e];if(r){var n=this._renderer.GL;if(r.isArray){if(r._cachedData&&this._renderer._arraysEqual(r._cachedData,t))return;r._cachedData=t.slice(0)}else{if(r._cachedData&&r._cachedData===t)return;r._cachedData=t}var i=r.location;switch(this.useProgram(),r.type){case n.BOOL:!0===t?n.uniform1i(i,1):n.uniform1i(i,0);break;case n.INT:1<r.size?t.length&&n.uniform1iv(i,t):n.uniform1i(i,t);break;case n.FLOAT:1<r.size?t.length&&n.uniform1fv(i,t):n.uniform1f(i,t);break;case n.FLOAT_MAT3:n.uniformMatrix3fv(i,!1,t);break;case n.FLOAT_MAT4:n.uniformMatrix4fv(i,!1,t);break;case n.FLOAT_VEC2:1<r.size?t.length&&n.uniform2fv(i,t):n.uniform2f(i,t[0],t[1]);break;case n.FLOAT_VEC3:1<r.size?t.length&&n.uniform3fv(i,t):n.uniform3f(i,t[0],t[1],t[2]);break;case n.FLOAT_VEC4:1<r.size?t.length&&n.uniform4fv(i,t):n.uniform4f(i,t[0],t[1],t[2],t[3]);break;case n.INT_VEC2:1<r.size?t.length&&n.uniform2iv(i,t):n.uniform2i(i,t[0],t[1]);break;case n.INT_VEC3:1<r.size?t.length&&n.uniform3iv(i,t):n.uniform3i(i,t[0],t[1],t[2]);break;case n.INT_VEC4:1<r.size?t.length&&n.uniform4iv(i,t):n.uniform4i(i,t[0],t[1],t[2],t[3]);break;case n.SAMPLER_2D:n.activeTexture(n.TEXTURE0+r.samplerIndex),r.texture=this._renderer.getTexture(t),n.uniform1i(r.location,r.samplerIndex)}return this}},i.default.Shader.prototype.isLightShader=function(){return void 0!==this.attributes.aNormal||void 0!==this.uniforms.uUseLighting||void 0!==this.uniforms.uAmbientLightCount||void 0!==this.uniforms.uDirectionalLightCount||void 0!==this.uniforms.uPointLightCount||void 0!==this.uniforms.uAmbientColor||void 0!==this.uniforms.uDirectionalDiffuseColors||void 0!==this.uniforms.uDirectionalSpecularColors||void 0!==this.uniforms.uPointLightLocation||void 0!==this.uniforms.uPointLightDiffuseColors||void 0!==this.uniforms.uPointLightSpecularColors||void 0!==this.uniforms.uLightingDirection||void 0!==this.uniforms.uSpecular},i.default.Shader.prototype.isNormalShader=function(){return void 0!==this.attributes.aNormal},i.default.Shader.prototype.isTextureShader=function(){return 0<this.samplerIndex},i.default.Shader.prototype.isColorShader=function(){return void 0!==this.attributes.aVertexColor||void 0!==this.uniforms.uMaterialColor},i.default.Shader.prototype.isTexLightShader=function(){return this.isLightShader()&&this.isTextureShader()},i.default.Shader.prototype.isStrokeShader=function(){return void 0!==this.uniforms.uStrokeWeight},i.default.Shader.prototype.enableAttrib=function(e,t,r,n,i,o){if(e){var a=e.location;if(-1!==a){var s=this._renderer.GL;e.enabled||(s.enableVertexAttribArray(a),e.enabled=!0),this._renderer.GL.vertexAttribPointer(a,t,r||s.FLOAT,n||!1,i||0,o||0)}}return this};var o=i.default.Shader;r.default=o},{"../core/main":36}],92:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}o.default.Texture=function(e,t){this._renderer=e;var r=this._renderer.GL;this.src=t,this.glTex=void 0,this.glTarget=r.TEXTURE_2D,this.glFormat=r.RGBA,this.mipmaps=!1,this.glMinFilter=r.LINEAR,this.glMagFilter=r.LINEAR,this.glWrapS=r.CLAMP_TO_EDGE,this.glWrapT=r.CLAMP_TO_EDGE,this.isSrcMediaElement=void 0!==o.default.MediaElement&&t instanceof o.default.MediaElement,this._videoPrevUpdateTime=0,this.isSrcHTMLElement=void 0!==o.default.Element&&t instanceof o.default.Element&&!(t instanceof o.default.Graphics),this.isSrcP5Image=t instanceof o.default.Image,this.isSrcP5Graphics=t instanceof o.default.Graphics,this.isImageData="undefined"!=typeof ImageData&&t instanceof ImageData;var n=this._getTextureDataFromSource();return this.width=n.width,this.height=n.height,this.init(n),this},o.default.Texture.prototype._getTextureDataFromSource=function(){var e;return this.isSrcP5Image?e=this.src.canvas:this.isSrcMediaElement||this.isSrcP5Graphics||this.isSrcHTMLElement?e=this.src.elt:this.isImageData&&(e=this.src),e},o.default.Texture.prototype.init=function(e){var t=this._renderer.GL;if(this.glTex=t.createTexture(),this.glWrapS=this._renderer.textureWrapX,this.glWrapT=this._renderer.textureWrapY,this.setWrapMode(this.glWrapS,this.glWrapT),this.bindTexture(),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.glMagFilter),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.glMinFilter),0===this.width||0===this.height||this.isSrcMediaElement&&!this.src.loadedmetadata){var r=new Uint8Array([1,1,1,1]);t.texImage2D(this.glTarget,0,t.RGBA,1,1,0,this.glFormat,t.UNSIGNED_BYTE,r)}else t.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,t.UNSIGNED_BYTE,e)},o.default.Texture.prototype.update=function(){var e=this.src;if(0===e.width||0===e.height)return!1;var t=this._getTextureDataFromSource(),r=!1,n=this._renderer.GL;return t.width!==this.width||t.height!==this.height?(r=!0,this.width=t.width,this.height=t.height,this.isSrcP5Image?e.setModified(!1):(this.isSrcMediaElement||this.isSrcHTMLElement)&&e.setModified(!0)):this.isSrcP5Image?e.isModified()&&(r=!0,e.setModified(!1)):this.isSrcMediaElement?e.isModified()?(r=!0,e.setModified(!1)):e.loadedmetadata&&this._videoPrevUpdateTime!==e.time()&&(this._videoPrevUpdateTime=e.time(),r=!0):this.isImageData?e._dirty&&(r=!(e._dirty=!1)):r=!0,r&&(this.bindTexture(),n.texImage2D(this.glTarget,0,this.glFormat,this.glFormat,n.UNSIGNED_BYTE,t)),r},o.default.Texture.prototype.bindTexture=function(){return this._renderer.GL.bindTexture(this.glTarget,this.glTex),this},o.default.Texture.prototype.unbindTexture=function(){this._renderer.GL.bindTexture(this.glTarget,null)},o.default.Texture.prototype.setInterpolation=function(e,t){var r=this._renderer.GL;e===a.NEAREST?this.glMinFilter=r.NEAREST:this.glMinFilter=r.LINEAR,t===a.NEAREST?this.glMagFilter=r.NEAREST:this.glMagFilter=r.LINEAR,this.bindTexture(),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,this.glMinFilter),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,this.glMagFilter),this.unbindTexture()},o.default.Texture.prototype.setWrapMode=function(e,t){function r(e){return 0==(e&e-1)}var n=this._renderer.GL,i=r(this.width),o=r(this.height);e===a.REPEAT?i&&o?this.glWrapS=n.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=n.CLAMP_TO_EDGE):e===a.MIRROR?i&&o?this.glWrapS=n.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapS=n.CLAMP_TO_EDGE):this.glWrapS=n.CLAMP_TO_EDGE,t===a.REPEAT?i&&o?this.glWrapT=n.REPEAT:(console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=n.CLAMP_TO_EDGE):t===a.MIRROR?i&&o?this.glWrapT=n.MIRRORED_REPEAT:(console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"),this.glWrapT=n.CLAMP_TO_EDGE):this.glWrapT=n.CLAMP_TO_EDGE,this.bindTexture(),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,this.glWrapS),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,this.glWrapT),this.unbindTexture()};var l=o.default.Texture;r.default=l},{"../core/constants":26,"../core/main":36}],93:[function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i,o=(i=e("../core/main"))&&i.__esModule?i:{default:i},a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=s();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=i?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}return r.default=e,t&&t.set(e,r),r}(e("../core/constants"));function s(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return s=function(){return e},e}function l(e,t){this.width=e,this.height=t,this.infos=[],this.findImage=function(e){var t,r,n=this.width*this.height;if(n<e)throw new Error("font is too complex to render in 3D");for(var i=this.infos.length-1;0<=i;--i){var o=this.infos[i];if(o.index+e<n){r=(t=o).imageData;break}}if(!t){try{r=new ImageData(this.width,this.height)}catch(e){var a=document.getElementsByTagName("canvas")[0],s=!a;a||((a=document.createElement("canvas")).style.display="none",document.body.appendChild(a));var l=a.getContext("2d");l&&(r=l.createImageData(this.width,this.height)),s&&document.body.removeChild(a)}t={index:0,imageData:r},this.infos.push(t)}var u=t.index;return t.index+=e,r._dirty=!0,{imageData:r,index:u}}}function u(e,t,r,n,i){var o=e.imageData.data,a=4*e.index++;o[a++]=t,o[a++]=r,o[a++]=n,o[a++]=i}function c(e){this.font=e,this.strokeImageInfos=new l(64,64),this.colDimImageInfos=new l(64,64),this.rowDimImageInfos=new l(64,64),this.colCellImageInfos=new l(64,64),this.rowCellImageInfos=new l(64,64),this.glyphInfos={},this.getGlyphInfo=function(e){var t=this.glyphInfos[e.index];if(t)return t;var r,n=e.getBoundingBox(),i=n.x1,a=n.y1,s=n.x2-i,l=n.y2-a,c=e.path.commands;if(0==s||0==l||!c.length)return this.glyphInfos[e.index]={};var f,d,p,m,v=[],g=[],y=[];for(r=8;0<=r;--r)y.push([]);for(r=8;0<=r;--r)g.push([]);function b(e,t,r){var n=v.length;function i(e,t,r){for(var n=e.length;0<n--;){var i=e[n];i<t&&(t=i),r<i&&(r=i)}return{min:t,max:r}}v.push(r);for(var o=i(e,1,0),a=Math.max(Math.floor(9*o.min),0),s=Math.min(Math.ceil(9*o.max),9),l=a;l<s;++l)y[l].push(n);for(var u=i(t,1,0),c=Math.max(Math.floor(9*u.min),0),h=Math.min(Math.ceil(9*u.max),9),f=c;f<h;++f)g[f].push(n)}function _(e){return(t=255*e)<0?0:255<t?255:t;var t}function w(e,t,r,n){this.p0=e,this.c0=t,this.c1=r,this.p1=n,this.toQuadratic=function(){return{x:this.p0.x,y:this.p0.y,x1:this.p1.x,y1:this.p1.y,cx:(3*(this.c0.x+this.c1.x)-(this.p0.x+this.p1.x))/4,cy:(3*(this.c0.y+this.c1.y)-(this.p0.y+this.p1.y))/4}},this.quadError=function(){return o.default.Vector.sub(o.default.Vector.sub(this.p1,this.p0),o.default.Vector.mult(o.default.Vector.sub(this.c1,this.c0),3)).mag()/2},this.split=function(e){var t=o.default.Vector.lerp(this.p0,this.c0,e),r=o.default.Vector.lerp(this.c0,this.c1,e),n=o.default.Vector.lerp(t,r,e);this.c1=o.default.Vector.lerp(this.c1,this.p1,e),this.c0=o.default.Vector.lerp(r,this.c1,e);var i=o.default.Vector.lerp(n,this.c0,e),a=new w(this.p0,t,n,i);return this.p0=i,a},this.splitInflections=function(){var e=o.default.Vector.sub(this.c0,this.p0),t=o.default.Vector.sub(o.default.Vector.sub(this.c1,this.c0),e),r=o.default.Vector.sub(o.default.Vector.sub(o.default.Vector.sub(this.p1,this.c1),e),o.default.Vector.mult(t,2)),n=[],i=t.x*r.y-t.y*r.x;if(0!==i){var a=e.x*r.y-e.y*r.x,s=e.x*t.y-e.y*t.x,l=a*a-4*i*s;if(0<=l){i<0&&(i=-i,a=-a,s=-s);var u=Math.sqrt(l),c=(-a-u)/(2*i),h=(-a+u)/(2*i);0<c&&c<1&&(n.push(this.split(c)),h=1-(1-h)/(1-c)),0<h&&h<1&&n.push(this.split(h))}}return n.push(this),n}}function x(e,t,r,n,i,a,s,l){var u=new w(new o.default.Vector(e,t),new o.default.Vector(r,n),new o.default.Vector(i,a),new o.default.Vector(s,l)).splitInflections(),c=[],f=30/h,d=!0,p=!1,m=void 0;try{for(var v,g=u[Symbol.iterator]();!(d=(v=g.next()).done);d=!0){for(var y=v.value,b=[],_=void 0;!(.125<=(_=f/y.quadError()));){var x=Math.pow(_,1/3),S=y.split(x),E=y.split(1-x/(1-x));c.push(S),b.push(y),y=E}_<1&&c.push(y.split(.5)),c.push(y),Array.prototype.push.apply(c,b.reverse())}}catch(e){p=!0,m=e}finally{try{d||null==g.return||g.return()}finally{if(p)throw m}}return c}function S(e,t,r,n){b([e,r],[t,n],{x:e,y:t,cx:(e+r)/2,cy:(t+n)/2})}function E(e,t,r,n){return Math.abs(r-e)<1e-5&&Math.abs(n-t)<1e-5}var M=!0,T=!1,C=void 0;try{for(var L,O=c[Symbol.iterator]();!(M=(L=O.next()).done);M=!0){var P=L.value,A=(P.x-i)/s,D=(P.y-a)/l;if(!E(f,d,A,D)){switch(P.type){case"M":p=A,m=D;break;case"L":S(f,d,A,D);break;case"Q":var k=(P.x1-i)/s,R=(P.y1-a)/l;b([f,A,k],[d,D,R],{x:f,y:d,cx:k,cy:R});break;case"Z":E(f,d,p,m)?v.push({x:f,y:d}):(S(f,d,p,m),v.push({x:p,y:m}));break;case"C":for(var I=x(f,d,(P.x1-i)/s,(P.y1-a)/l,(P.x2-i)/s,(P.y2-a)/l,A,D),U=0;U<I.length;U++){var N=I[U].toQuadratic();b([N.x,N.x1,N.cx],[N.y,N.y1,N.cy],N)}break;default:throw new Error("unknown command type: ".concat(P.type))}f=A,d=D}}}catch(e){T=!0,C=e}finally{try{M||null==O.return||O.return()}finally{if(T)throw C}}for(var B=v.length,F=this.strokeImageInfos.findImage(B),G=F.index,j=0;j<B;++j){var V=v[j];u(F,_(V.x),_(V.y),_(V.cx),_(V.cy))}function z(e,t,r){for(var n=e.length,i=t.findImage(n),o=i.index,a=0,s=0;s<n;++s)a+=e[s].length;for(var l=r.findImage(a),c=0;c<n;++c){var h=e[c],f=h.length,d=l.index;u(i,d>>7,127&d,f>>7,127&f);for(var p=0;p<f;++p){var m=h[p]+G;u(l,m>>7,127&m,0,0)}}return{cellImageInfo:l,dimOffset:o,dimImageInfo:i}}return(t=this.glyphInfos[e.index]={glyph:e,uGlyphRect:[n.x1,-n.y1,n.x2,-n.y2],strokeImageInfo:F,strokes:v,colInfo:z(y,this.colDimImageInfos,this.colCellImageInfos),rowInfo:z(g,this.rowDimImageInfos,this.rowCellImageInfos)}).uGridOffset=[t.colInfo.dimOffset,t.rowInfo.dimOffset],t}}e("./p5.Shader"),e("./p5.RendererGL.Retained"),o.default.RendererGL.prototype._applyTextProperties=function(){},o.default.RendererGL.prototype.textWidth=function(e){return this._isOpenType()?this._textFont._textWidth(e,this._textSize):0};var h=Math.sqrt(3);o.default.RendererGL.prototype._renderText=function(e,t,r,n,i){if(this._textFont&&"string"!=typeof this._textFont){if(!(i<=n)&&this._doFill){if(!this._isOpenType())return console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported"),e;e.push();var s=this._doStroke,l=this.drawMode;this._doStroke=!1,this.drawMode=a.TEXTURE;var u=this._textFont.font,h=this._textFont._fontInfo;h=h||(this._textFont._fontInfo=new c(u));var f=this._textFont._handleAlignment(this,t,r,n),d=this._textSize/u.unitsPerEm;this.translate(f.x,f.y,0),this.scale(d,d,1);var p=this.GL,m=!this._defaultFontShader,v=this._getFontShader();v.init(),v.bindShader(),m&&(v.setUniform("uGridImageSize",[64,64]),v.setUniform("uCellsImageSize",[64,64]),v.setUniform("uStrokeImageSize",[64,64]),v.setUniform("uGridSize",[9,9])),this._applyColorBlend(this.curFillColor);var g=this.retainedMode.geometry.glyph;if(!g){var y=this._textGeom=new o.default.Geometry(1,1,(function(){for(var e=0;e<=1;e++)for(var t=0;t<=1;t++)this.vertices.push(new o.default.Vector(t,e,0)),this.uvs.push(t,e)}));y.computeFaces().computeNormals(),g=this.createBuffers("glyph",y)}var b=!0,_=!1,w=void 0;try{for(var x,S=this.retainedMode.buffers.text[Symbol.iterator]();!(b=(x=S.next()).done);b=!0)x.value._prepareBuffer(g,v)}catch(e){_=!0,w=e}finally{try{b||null==S.return||S.return()}finally{if(_)throw w}}this._bindBuffer(g.indexBuffer,p.ELEMENT_ARRAY_BUFFER),v.setUniform("uMaterialColor",this.curFillColor);try{var E=0,M=null,T=u.stringToGlyphs(t),C=!0,L=!1,O=void 0;try{for(var P,A=T[Symbol.iterator]();!(C=(P=A.next()).done);C=!0){var D=P.value;M&&(E+=u.getKerningValue(M,D));var k=h.getGlyphInfo(D);if(k.uGlyphRect){var R=k.rowInfo,I=k.colInfo;v.setUniform("uSamplerStrokes",k.strokeImageInfo.imageData),v.setUniform("uSamplerRowStrokes",R.cellImageInfo.imageData),v.setUniform("uSamplerRows",R.dimImageInfo.imageData),v.setUniform("uSamplerColStrokes",I.cellImageInfo.imageData),v.setUniform("uSamplerCols",I.dimImageInfo.imageData),v.setUniform("uGridOffset",k.uGridOffset),v.setUniform("uGlyphRect",k.uGlyphRect),v.setUniform("uGlyphOffset",E),v.bindTextures(),p.drawElements(p.TRIANGLES,6,this.GL.UNSIGNED_SHORT,0)}E+=D.advanceWidth,M=D}}catch(e){L=!0,O=e}finally{try{C||null==A.return||A.return()}finally{if(L)throw O}}}finally{v.unbindShader(),this._doStroke=s,this.drawMode=l,e.pop()}return e}}else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.")}},{"../core/constants":26,"../core/main":36,"./p5.RendererGL.Retained":89,"./p5.Shader":91}]},{},[21])(21)},379:(e,t,r)=>{"use strict";var n,i=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),o=[];function a(e){for(var t=-1,r=0;r<o.length;r++)if(o[r].identifier===e){t=r;break}return t}function s(e,t){for(var r={},n=[],i=0;i<e.length;i++){var s=e[i],l=t.base?s[0]+t.base:s[0],u=r[l]||0,c="".concat(l," ").concat(u);r[l]=u+1;var h=a(c),f={css:s[1],media:s[2],sourceMap:s[3]};-1!==h?(o[h].references++,o[h].updater(f)):o.push({identifier:c,updater:m(f,t),references:1}),n.push(c)}return n}function l(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var o=r.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var u,c=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function h(e,t,r,n){var i=r?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=c(t,i);else{var o=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function f(e,t,r){var n=r.css,i=r.media,o=r.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var d=null,p=0;function m(e,t){var r,n,i;if(t.singleton){var o=p++;r=d||(d=l(t)),n=h.bind(null,r,o,!1),i=h.bind(null,r,o,!0)}else r=l(t),n=f.bind(null,r,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n));var r=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<r.length;n++){var i=a(r[n]);o[i].references--}for(var l=s(e,t),u=0;u<r.length;u++){var c=a(r[u]);0===o[c].references&&(o[c].updater(),o.splice(c,1))}r=l}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,